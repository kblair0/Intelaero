/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/page";
exports.ids = ["app/page"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fpage&page=%2Fpage&appPaths=%2Fpage&pagePath=private-next-app-dir%2Fpage.tsx&appDir=%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fpage&page=%2Fpage&appPaths=%2Fpage&pagePath=private-next-app-dir%2Fpage.tsx&appDir=%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalError: () => (/* reexport default from dynamic */ next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2___default.a),\n/* harmony export */   __next_app__: () => (/* binding */ __next_app__),\n/* harmony export */   pages: () => (/* binding */ pages),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   tree: () => (/* binding */ tree)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-page/module.compiled */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/module.compiled.js?91d2\");\n/* harmony import */ var next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/client/components/error-boundary */ \"(rsc)/./node_modules/next/dist/client/components/error-boundary.js\");\n/* harmony import */ var next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/app-render/entry-base */ \"(rsc)/./node_modules/next/dist/server/app-render/entry-base.js\");\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__) if([\"default\",\"tree\",\"pages\",\"GlobalError\",\"__next_app__\",\"routeModule\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\nconst module0 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/layout.tsx */ \"(rsc)/./src/app/layout.tsx\"));\nconst module1 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/not-found-error */ \"(rsc)/./node_modules/next/dist/client/components/not-found-error.js\", 23));\nconst module2 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/forbidden-error */ \"(rsc)/./node_modules/next/dist/client/components/forbidden-error.js\", 23));\nconst module3 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/unauthorized-error */ \"(rsc)/./node_modules/next/dist/client/components/unauthorized-error.js\", 23));\nconst page4 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/page.tsx */ \"(rsc)/./src/app/page.tsx\"));\n\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\nconst tree = {\n        children: [\n        '',\n        {\n        children: ['__PAGE__', {}, {\n          page: [page4, \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\"],\n          metadata: {\n    icon: [(async (props) => (await Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! next-metadata-image-loader?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./src/app/favicon.ico?__next_metadata__ */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-metadata-image-loader.js?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./src/app/favicon.ico?__next_metadata__\"))).default(props))],\n    apple: [],\n    openGraph: [],\n    twitter: [],\n    manifest: undefined\n  }\n        }]\n      },\n        {\n        'layout': [module0, \"/Users/kieranblair/git/fa/flight-assurance/src/app/layout.tsx\"],\n'not-found': [module1, \"next/dist/client/components/not-found-error\"],\n'forbidden': [module2, \"next/dist/client/components/forbidden-error\"],\n'unauthorized': [module3, \"next/dist/client/components/unauthorized-error\"],\n        metadata: {\n    icon: [(async (props) => (await Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! next-metadata-image-loader?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./src/app/favicon.ico?__next_metadata__ */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-metadata-image-loader.js?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./src/app/favicon.ico?__next_metadata__\"))).default(props))],\n    apple: [],\n    openGraph: [],\n    twitter: [],\n    manifest: undefined\n  }\n      }\n      ]\n      }.children;\nconst pages = [\"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\"];\n\n\nconst __next_app_require__ = __webpack_require__\nconst __next_app_load_chunk__ = () => Promise.resolve()\nconst __next_app__ = {\n    require: __next_app_require__,\n    loadChunk: __next_app_load_chunk__\n};\n\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppPageRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n        page: \"/page\",\n        pathname: \"/\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: '',\n        appPaths: []\n    },\n    userland: {\n        loaderTree: tree\n    }\n});\n\n//# sourceMappingURL=app-page.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZwYWdlJnBhZ2U9JTJGcGFnZSZhcHBQYXRocz0lMkZwYWdlJnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGcGFnZS50c3gmYXBwRGlyPSUyRlVzZXJzJTJGa2llcmFuYmxhaXIlMkZnaXQlMkZmYSUyRmZsaWdodC1hc3N1cmFuY2UlMkZzcmMlMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRlVzZXJzJTJGa2llcmFuYmxhaXIlMkZnaXQlMkZmYSUyRmZsaWdodC1hc3N1cmFuY2UmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLHNCQUFzQixvSkFBa0c7QUFDeEgsc0JBQXNCLDBOQUFnRjtBQUN0RyxzQkFBc0IsME5BQWdGO0FBQ3RHLHNCQUFzQixnT0FBbUY7QUFDekcsb0JBQW9CLGdKQUFnRztBQUdsSDtBQUNzRDtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBLG9DQUFvQyxzZkFBMFA7QUFDOVI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLHNmQUEwUDtBQUM5UjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUN1QjtBQUM2RDtBQUNwRiw2QkFBNkIsbUJBQW1CO0FBQ2hEO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDdUQ7QUFDdkQ7QUFDTyx3QkFBd0IsdUdBQWtCO0FBQ2pEO0FBQ0EsY0FBYyxrRUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vZHVsZTAgPSAoKSA9PiBpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9raWVyYW5ibGFpci9naXQvZmEvZmxpZ2h0LWFzc3VyYW5jZS9zcmMvYXBwL2xheW91dC50c3hcIik7XG5jb25zdCBtb2R1bGUxID0gKCkgPT4gaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJuZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvbm90LWZvdW5kLWVycm9yXCIpO1xuY29uc3QgbW9kdWxlMiA9ICgpID0+IGltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwibmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2ZvcmJpZGRlbi1lcnJvclwiKTtcbmNvbnN0IG1vZHVsZTMgPSAoKSA9PiBpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIm5leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy91bmF1dGhvcml6ZWQtZXJyb3JcIik7XG5jb25zdCBwYWdlNCA9ICgpID0+IGltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL2tpZXJhbmJsYWlyL2dpdC9mYS9mbGlnaHQtYXNzdXJhbmNlL3NyYy9hcHAvcGFnZS50c3hcIik7XG5pbXBvcnQgeyBBcHBQYWdlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1tb2R1bGVzL2FwcC1wYWdlL21vZHVsZS5jb21waWxlZFwiIHdpdGgge1xuICAgICd0dXJib3BhY2stdHJhbnNpdGlvbic6ICduZXh0LXNzcidcbn07XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCI7XG4vLyBXZSBpbmplY3QgdGhlIHRyZWUgYW5kIHBhZ2VzIGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCB0cmVlID0ge1xuICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAnJyxcbiAgICAgICAge1xuICAgICAgICBjaGlsZHJlbjogWydfX1BBR0VfXycsIHt9LCB7XG4gICAgICAgICAgcGFnZTogW3BhZ2U0LCBcIi9Vc2Vycy9raWVyYW5ibGFpci9naXQvZmEvZmxpZ2h0LWFzc3VyYW5jZS9zcmMvYXBwL3BhZ2UudHN4XCJdLFxuICAgICAgICAgIG1ldGFkYXRhOiB7XG4gICAgaWNvbjogWyhhc3luYyAocHJvcHMpID0+IChhd2FpdCBpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIm5leHQtbWV0YWRhdGEtaW1hZ2UtbG9hZGVyP3R5cGU9ZmF2aWNvbiZzZWdtZW50PSZiYXNlUGF0aD0mcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyEvVXNlcnMva2llcmFuYmxhaXIvZ2l0L2ZhL2ZsaWdodC1hc3N1cmFuY2Uvc3JjL2FwcC9mYXZpY29uLmljbz9fX25leHRfbWV0YWRhdGFfX1wiKSkuZGVmYXVsdChwcm9wcykpXSxcbiAgICBhcHBsZTogW10sXG4gICAgb3BlbkdyYXBoOiBbXSxcbiAgICB0d2l0dGVyOiBbXSxcbiAgICBtYW5pZmVzdDogdW5kZWZpbmVkXG4gIH1cbiAgICAgICAgfV1cbiAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgJ2xheW91dCc6IFttb2R1bGUwLCBcIi9Vc2Vycy9raWVyYW5ibGFpci9naXQvZmEvZmxpZ2h0LWFzc3VyYW5jZS9zcmMvYXBwL2xheW91dC50c3hcIl0sXG4nbm90LWZvdW5kJzogW21vZHVsZTEsIFwibmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL25vdC1mb3VuZC1lcnJvclwiXSxcbidmb3JiaWRkZW4nOiBbbW9kdWxlMiwgXCJuZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvZm9yYmlkZGVuLWVycm9yXCJdLFxuJ3VuYXV0aG9yaXplZCc6IFttb2R1bGUzLCBcIm5leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy91bmF1dGhvcml6ZWQtZXJyb3JcIl0sXG4gICAgICAgIG1ldGFkYXRhOiB7XG4gICAgaWNvbjogWyhhc3luYyAocHJvcHMpID0+IChhd2FpdCBpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIm5leHQtbWV0YWRhdGEtaW1hZ2UtbG9hZGVyP3R5cGU9ZmF2aWNvbiZzZWdtZW50PSZiYXNlUGF0aD0mcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyEvVXNlcnMva2llcmFuYmxhaXIvZ2l0L2ZhL2ZsaWdodC1hc3N1cmFuY2Uvc3JjL2FwcC9mYXZpY29uLmljbz9fX25leHRfbWV0YWRhdGFfX1wiKSkuZGVmYXVsdChwcm9wcykpXSxcbiAgICBhcHBsZTogW10sXG4gICAgb3BlbkdyYXBoOiBbXSxcbiAgICB0d2l0dGVyOiBbXSxcbiAgICBtYW5pZmVzdDogdW5kZWZpbmVkXG4gIH1cbiAgICAgIH1cbiAgICAgIF1cbiAgICAgIH0uY2hpbGRyZW47XG5jb25zdCBwYWdlcyA9IFtcIi9Vc2Vycy9raWVyYW5ibGFpci9naXQvZmEvZmxpZ2h0LWFzc3VyYW5jZS9zcmMvYXBwL3BhZ2UudHN4XCJdO1xuZXhwb3J0IHsgdHJlZSwgcGFnZXMgfTtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgR2xvYmFsRXJyb3IgfSBmcm9tIFwibmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2Vycm9yLWJvdW5kYXJ5XCI7XG5jb25zdCBfX25leHRfYXBwX3JlcXVpcmVfXyA9IF9fd2VicGFja19yZXF1aXJlX19cbmNvbnN0IF9fbmV4dF9hcHBfbG9hZF9jaHVua19fID0gKCkgPT4gUHJvbWlzZS5yZXNvbHZlKClcbmV4cG9ydCBjb25zdCBfX25leHRfYXBwX18gPSB7XG4gICAgcmVxdWlyZTogX19uZXh0X2FwcF9yZXF1aXJlX18sXG4gICAgbG9hZENodW5rOiBfX25leHRfYXBwX2xvYWRfY2h1bmtfX1xufTtcbmV4cG9ydCAqIGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2FwcC1yZW5kZXIvZW50cnktYmFzZVwiO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUGFnZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUEFHRSxcbiAgICAgICAgcGFnZTogXCIvcGFnZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogJycsXG4gICAgICAgIGZpbGVuYW1lOiAnJyxcbiAgICAgICAgYXBwUGF0aHM6IFtdXG4gICAgfSxcbiAgICB1c2VybGFuZDoge1xuICAgICAgICBsb2FkZXJUcmVlOiB0cmVlXG4gICAgfVxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1wYWdlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fpage&page=%2Fpage&appPaths=%2Fpage&pagePath=private-next-app-dir%2Fpage.tsx&appDir=%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-page.js */ \"(rsc)/./node_modules/next/dist/client/components/client-page.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-segment.js */ \"(rsc)/./node_modules/next/dist/client/components/client-segment.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/error-boundary.js */ \"(rsc)/./node_modules/next/dist/client/components/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js */ \"(rsc)/./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/layout-router.js */ \"(rsc)/./node_modules/next/dist/client/components/layout-router.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/render-from-template-context.js */ \"(rsc)/./node_modules/next/dist/client/components/render-from-template-context.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/lib/metadata/metadata-boundary.js */ \"(rsc)/./node_modules/next/dist/lib/metadata/metadata-boundary.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGa2llcmFuYmxhaXIlMkZnaXQlMkZmYSUyRmZsaWdodC1hc3N1cmFuY2UlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZjbGllbnQtcGFnZS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRmtpZXJhbmJsYWlyJTJGZ2l0JTJGZmElMkZmbGlnaHQtYXNzdXJhbmNlJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGY2xpZW50LXNlZ21lbnQuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZraWVyYW5ibGFpciUyRmdpdCUyRmZhJTJGZmxpZ2h0LWFzc3VyYW5jZSUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRmVycm9yLWJvdW5kYXJ5LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGa2llcmFuYmxhaXIlMkZnaXQlMkZmYSUyRmZsaWdodC1hc3N1cmFuY2UlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZodHRwLWFjY2Vzcy1mYWxsYmFjayUyRmVycm9yLWJvdW5kYXJ5LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGa2llcmFuYmxhaXIlMkZnaXQlMkZmYSUyRmZsaWdodC1hc3N1cmFuY2UlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZsYXlvdXQtcm91dGVyLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGa2llcmFuYmxhaXIlMkZnaXQlMkZmYSUyRmZsaWdodC1hc3N1cmFuY2UlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZyZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGa2llcmFuYmxhaXIlMkZnaXQlMkZmYSUyRmZsaWdodC1hc3N1cmFuY2UlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmxpYiUyRm1ldGFkYXRhJTJGbWV0YWRhdGEtYm91bmRhcnkuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0Qmc2VydmVyPXRydWUhIiwibWFwcGluZ3MiOiJBQUFBLG9PQUF1STtBQUN2STtBQUNBLDBPQUEwSTtBQUMxSTtBQUNBLDBPQUEwSTtBQUMxSTtBQUNBLG9SQUErSjtBQUMvSjtBQUNBLHdPQUF5STtBQUN6STtBQUNBLHNRQUF3SjtBQUN4SjtBQUNBLHNPQUF3SSIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL2tpZXJhbmJsYWlyL2dpdC9mYS9mbGlnaHQtYXNzdXJhbmNlL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvY2xpZW50LXBhZ2UuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9raWVyYW5ibGFpci9naXQvZmEvZmxpZ2h0LWFzc3VyYW5jZS9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2NsaWVudC1zZWdtZW50LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMva2llcmFuYmxhaXIvZ2l0L2ZhL2ZsaWdodC1hc3N1cmFuY2Uvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9lcnJvci1ib3VuZGFyeS5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL2tpZXJhbmJsYWlyL2dpdC9mYS9mbGlnaHQtYXNzdXJhbmNlL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvaHR0cC1hY2Nlc3MtZmFsbGJhY2svZXJyb3ItYm91bmRhcnkuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9raWVyYW5ibGFpci9naXQvZmEvZmxpZ2h0LWFzc3VyYW5jZS9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2xheW91dC1yb3V0ZXIuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9raWVyYW5ibGFpci9naXQvZmEvZmxpZ2h0LWFzc3VyYW5jZS9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL3JlbmRlci1mcm9tLXRlbXBsYXRlLWNvbnRleHQuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9raWVyYW5ibGFpci9naXQvZmEvZmxpZ2h0LWFzc3VyYW5jZS9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2xpYi9tZXRhZGF0YS9tZXRhZGF0YS1ib3VuZGFyeS5qc1wiKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-page.js */ \"(ssr)/./node_modules/next/dist/client/components/client-page.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-segment.js */ \"(ssr)/./node_modules/next/dist/client/components/client-segment.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/error-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/layout-router.js */ \"(ssr)/./node_modules/next/dist/client/components/layout-router.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/render-from-template-context.js */ \"(ssr)/./node_modules/next/dist/client/components/render-from-template-context.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/lib/metadata/metadata-boundary.js */ \"(ssr)/./node_modules/next/dist/lib/metadata/metadata-boundary.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGa2llcmFuYmxhaXIlMkZnaXQlMkZmYSUyRmZsaWdodC1hc3N1cmFuY2UlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZjbGllbnQtcGFnZS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRmtpZXJhbmJsYWlyJTJGZ2l0JTJGZmElMkZmbGlnaHQtYXNzdXJhbmNlJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGY2xpZW50LXNlZ21lbnQuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZraWVyYW5ibGFpciUyRmdpdCUyRmZhJTJGZmxpZ2h0LWFzc3VyYW5jZSUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRmVycm9yLWJvdW5kYXJ5LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGa2llcmFuYmxhaXIlMkZnaXQlMkZmYSUyRmZsaWdodC1hc3N1cmFuY2UlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZodHRwLWFjY2Vzcy1mYWxsYmFjayUyRmVycm9yLWJvdW5kYXJ5LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGa2llcmFuYmxhaXIlMkZnaXQlMkZmYSUyRmZsaWdodC1hc3N1cmFuY2UlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZsYXlvdXQtcm91dGVyLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGa2llcmFuYmxhaXIlMkZnaXQlMkZmYSUyRmZsaWdodC1hc3N1cmFuY2UlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZyZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGa2llcmFuYmxhaXIlMkZnaXQlMkZmYSUyRmZsaWdodC1hc3N1cmFuY2UlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmxpYiUyRm1ldGFkYXRhJTJGbWV0YWRhdGEtYm91bmRhcnkuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0Qmc2VydmVyPXRydWUhIiwibWFwcGluZ3MiOiJBQUFBLG9PQUF1STtBQUN2STtBQUNBLDBPQUEwSTtBQUMxSTtBQUNBLDBPQUEwSTtBQUMxSTtBQUNBLG9SQUErSjtBQUMvSjtBQUNBLHdPQUF5STtBQUN6STtBQUNBLHNRQUF3SjtBQUN4SjtBQUNBLHNPQUF3SSIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL2tpZXJhbmJsYWlyL2dpdC9mYS9mbGlnaHQtYXNzdXJhbmNlL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvY2xpZW50LXBhZ2UuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9raWVyYW5ibGFpci9naXQvZmEvZmxpZ2h0LWFzc3VyYW5jZS9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2NsaWVudC1zZWdtZW50LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMva2llcmFuYmxhaXIvZ2l0L2ZhL2ZsaWdodC1hc3N1cmFuY2Uvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9lcnJvci1ib3VuZGFyeS5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL2tpZXJhbmJsYWlyL2dpdC9mYS9mbGlnaHQtYXNzdXJhbmNlL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvaHR0cC1hY2Nlc3MtZmFsbGJhY2svZXJyb3ItYm91bmRhcnkuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9raWVyYW5ibGFpci9naXQvZmEvZmxpZ2h0LWFzc3VyYW5jZS9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2xheW91dC1yb3V0ZXIuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9raWVyYW5ibGFpci9naXQvZmEvZmxpZ2h0LWFzc3VyYW5jZS9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL3JlbmRlci1mcm9tLXRlbXBsYXRlLWNvbnRleHQuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9raWVyYW5ibGFpci9naXQvZmEvZmxpZ2h0LWFzc3VyYW5jZS9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2xpYi9tZXRhZGF0YS9tZXRhZGF0YS1ib3VuZGFyeS5qc1wiKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Fdist%2Flib%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Ubuntu%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22weight%5C%22%3A%5B%5C%22300%5C%22%2C%5C%22400%5C%22%2C%5C%22500%5C%22%2C%5C%22700%5C%22%5D%2C%5C%22variable%5C%22%3A%5C%22--font-ubuntu%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22ubuntu%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fsrc%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Ubuntu%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22weight%5C%22%3A%5B%5C%22300%5C%22%2C%5C%22400%5C%22%2C%5C%22500%5C%22%2C%5C%22700%5C%22%5D%2C%5C%22variable%5C%22%3A%5C%22--font-ubuntu%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22ubuntu%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fsrc%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Ubuntu%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22weight%5C%22%3A%5B%5C%22300%5C%22%2C%5C%22400%5C%22%2C%5C%22500%5C%22%2C%5C%22700%5C%22%5D%2C%5C%22variable%5C%22%3A%5C%22--font-ubuntu%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22ubuntu%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fsrc%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Ubuntu%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22weight%5C%22%3A%5B%5C%22300%5C%22%2C%5C%22400%5C%22%2C%5C%22500%5C%22%2C%5C%22700%5C%22%5D%2C%5C%22variable%5C%22%3A%5C%22--font-ubuntu%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22ubuntu%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fsrc%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ (() => {



/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fsrc%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true!":
/*!*******************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fsrc%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!
  \*******************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/page.tsx */ \"(rsc)/./src/app/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGa2llcmFuYmxhaXIlMkZnaXQlMkZmYSUyRmZsaWdodC1hc3N1cmFuY2UlMkZzcmMlMkZhcHAlMkZwYWdlLnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsZ0pBQWdHIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMva2llcmFuYmxhaXIvZ2l0L2ZhL2ZsaWdodC1hc3N1cmFuY2Uvc3JjL2FwcC9wYWdlLnRzeFwiKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fsrc%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fsrc%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true!":
/*!*******************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fsrc%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!
  \*******************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/page.tsx */ \"(ssr)/./src/app/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGa2llcmFuYmxhaXIlMkZnaXQlMkZmYSUyRmZsaWdodC1hc3N1cmFuY2UlMkZzcmMlMkZhcHAlMkZwYWdlLnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsZ0pBQWdHIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMva2llcmFuYmxhaXIvZ2l0L2ZhL2ZsaWdodC1hc3N1cmFuY2Uvc3JjL2FwcC9wYWdlLnRzeFwiKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fsrc%2Fapp%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./src/app/components/AO/AODisplay.tsx":
/*!*********************************************!*\
  !*** ./src/app/components/AO/AODisplay.tsx ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _context_AreaOfOpsContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../context/AreaOfOpsContext */ \"(ssr)/./src/app/context/AreaOfOpsContext.tsx\");\n/* harmony import */ var _context_mapcontext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../context/mapcontext */ \"(ssr)/./src/app/context/mapcontext.tsx\");\n/* harmony import */ var _services_LayerManager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../services/LayerManager */ \"(ssr)/./src/app/services/LayerManager.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\n\n/**\n * A component that handles displaying the Area of Operations on the map.\n * Automatically updates when AO geometry changes or the map becomes ready.\n */ const AODisplay = ()=>{\n    const { aoGeometry, aoTerrainGrid } = (0,_context_AreaOfOpsContext__WEBPACK_IMPORTED_MODULE_1__.useAreaOfOpsContext)();\n    const { map, terrainLoaded } = (0,_context_mapcontext__WEBPACK_IMPORTED_MODULE_2__.useMapContext)();\n    // Display AO when geometry changes or map becomes ready\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"AODisplay.useEffect\": ()=>{\n            if (aoGeometry && map && terrainLoaded) {\n                console.log(\"Displaying AO on map\");\n                _services_LayerManager__WEBPACK_IMPORTED_MODULE_3__.layerManager.addAreaOfOperations(aoGeometry);\n                _services_LayerManager__WEBPACK_IMPORTED_MODULE_3__.layerManager.fitToAreaOfOperations(aoGeometry);\n            }\n        }\n    }[\"AODisplay.useEffect\"], [\n        aoGeometry,\n        map,\n        terrainLoaded\n    ]);\n    // Display terrain grid when it changes\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"AODisplay.useEffect\": ()=>{\n            if (aoTerrainGrid && aoTerrainGrid.length > 0 && map && terrainLoaded) {\n                console.log(\"Displaying AO terrain grid on map\");\n                _services_LayerManager__WEBPACK_IMPORTED_MODULE_3__.layerManager.addAreaOfOperationsTerrain(aoTerrainGrid);\n            }\n        }\n    }[\"AODisplay.useEffect\"], [\n        aoTerrainGrid,\n        map,\n        terrainLoaded\n    ]);\n    // This is a behavior-only component, so it doesn't render anything directly\n    return null;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AODisplay);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvYXBwL2NvbXBvbmVudHMvQU8vQU9EaXNwbGF5LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7NkRBQ2tDO0FBQ21DO0FBQ1o7QUFDRTtBQUUzRDs7O0NBR0MsR0FDRCxNQUFNSSxZQUFzQjtJQUMxQixNQUFNLEVBQUVDLFVBQVUsRUFBRUMsYUFBYSxFQUFFLEdBQUdMLDhFQUFtQkE7SUFDekQsTUFBTSxFQUFFTSxHQUFHLEVBQUVDLGFBQWEsRUFBRSxHQUFHTixrRUFBYUE7SUFFNUMsd0RBQXdEO0lBQ3hERixnREFBU0E7K0JBQUM7WUFDUixJQUFJSyxjQUFjRSxPQUFPQyxlQUFlO2dCQUN0Q0MsUUFBUUMsR0FBRyxDQUFDO2dCQUNaUCxnRUFBWUEsQ0FBQ1EsbUJBQW1CLENBQUNOO2dCQUNqQ0YsZ0VBQVlBLENBQUNTLHFCQUFxQixDQUFDUDtZQUNyQztRQUNGOzhCQUFHO1FBQUNBO1FBQVlFO1FBQUtDO0tBQWM7SUFFbkMsdUNBQXVDO0lBQ3ZDUixnREFBU0E7K0JBQUM7WUFDUixJQUFJTSxpQkFBaUJBLGNBQWNPLE1BQU0sR0FBRyxLQUFLTixPQUFPQyxlQUFlO2dCQUNyRUMsUUFBUUMsR0FBRyxDQUFDO2dCQUNaUCxnRUFBWUEsQ0FBQ1csMEJBQTBCLENBQUNSO1lBQzFDO1FBQ0Y7OEJBQUc7UUFBQ0E7UUFBZUM7UUFBS0M7S0FBYztJQUV0Qyw0RUFBNEU7SUFDNUUsT0FBTztBQUNUO0FBRUEsaUVBQWVKLFNBQVNBLEVBQUMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9raWVyYW5ibGFpci9naXQvZmEvZmxpZ2h0LWFzc3VyYW5jZS9zcmMvYXBwL2NvbXBvbmVudHMvQU8vQU9EaXNwbGF5LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcbmltcG9ydCB7IHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlQXJlYU9mT3BzQ29udGV4dCB9IGZyb20gXCIuLi8uLi9jb250ZXh0L0FyZWFPZk9wc0NvbnRleHRcIjtcbmltcG9ydCB7IHVzZU1hcENvbnRleHQgfSBmcm9tIFwiLi4vLi4vY29udGV4dC9tYXBjb250ZXh0XCI7XG5pbXBvcnQgeyBsYXllck1hbmFnZXIgfSBmcm9tIFwiLi4vLi4vc2VydmljZXMvTGF5ZXJNYW5hZ2VyXCI7XG5cbi8qKlxuICogQSBjb21wb25lbnQgdGhhdCBoYW5kbGVzIGRpc3BsYXlpbmcgdGhlIEFyZWEgb2YgT3BlcmF0aW9ucyBvbiB0aGUgbWFwLlxuICogQXV0b21hdGljYWxseSB1cGRhdGVzIHdoZW4gQU8gZ2VvbWV0cnkgY2hhbmdlcyBvciB0aGUgbWFwIGJlY29tZXMgcmVhZHkuXG4gKi9cbmNvbnN0IEFPRGlzcGxheTogUmVhY3QuRkMgPSAoKSA9PiB7XG4gIGNvbnN0IHsgYW9HZW9tZXRyeSwgYW9UZXJyYWluR3JpZCB9ID0gdXNlQXJlYU9mT3BzQ29udGV4dCgpO1xuICBjb25zdCB7IG1hcCwgdGVycmFpbkxvYWRlZCB9ID0gdXNlTWFwQ29udGV4dCgpO1xuICBcbiAgLy8gRGlzcGxheSBBTyB3aGVuIGdlb21ldHJ5IGNoYW5nZXMgb3IgbWFwIGJlY29tZXMgcmVhZHlcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoYW9HZW9tZXRyeSAmJiBtYXAgJiYgdGVycmFpbkxvYWRlZCkge1xuICAgICAgY29uc29sZS5sb2coXCJEaXNwbGF5aW5nIEFPIG9uIG1hcFwiKTtcbiAgICAgIGxheWVyTWFuYWdlci5hZGRBcmVhT2ZPcGVyYXRpb25zKGFvR2VvbWV0cnkpO1xuICAgICAgbGF5ZXJNYW5hZ2VyLmZpdFRvQXJlYU9mT3BlcmF0aW9ucyhhb0dlb21ldHJ5KTtcbiAgICB9XG4gIH0sIFthb0dlb21ldHJ5LCBtYXAsIHRlcnJhaW5Mb2FkZWRdKTtcbiAgXG4gIC8vIERpc3BsYXkgdGVycmFpbiBncmlkIHdoZW4gaXQgY2hhbmdlc1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChhb1RlcnJhaW5HcmlkICYmIGFvVGVycmFpbkdyaWQubGVuZ3RoID4gMCAmJiBtYXAgJiYgdGVycmFpbkxvYWRlZCkge1xuICAgICAgY29uc29sZS5sb2coXCJEaXNwbGF5aW5nIEFPIHRlcnJhaW4gZ3JpZCBvbiBtYXBcIik7XG4gICAgICBsYXllck1hbmFnZXIuYWRkQXJlYU9mT3BlcmF0aW9uc1RlcnJhaW4oYW9UZXJyYWluR3JpZCk7XG4gICAgfVxuICB9LCBbYW9UZXJyYWluR3JpZCwgbWFwLCB0ZXJyYWluTG9hZGVkXSk7XG4gIFxuICAvLyBUaGlzIGlzIGEgYmVoYXZpb3Itb25seSBjb21wb25lbnQsIHNvIGl0IGRvZXNuJ3QgcmVuZGVyIGFueXRoaW5nIGRpcmVjdGx5XG4gIHJldHVybiBudWxsO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQU9EaXNwbGF5OyJdLCJuYW1lcyI6WyJ1c2VFZmZlY3QiLCJ1c2VBcmVhT2ZPcHNDb250ZXh0IiwidXNlTWFwQ29udGV4dCIsImxheWVyTWFuYWdlciIsIkFPRGlzcGxheSIsImFvR2VvbWV0cnkiLCJhb1RlcnJhaW5HcmlkIiwibWFwIiwidGVycmFpbkxvYWRlZCIsImNvbnNvbGUiLCJsb2ciLCJhZGRBcmVhT2ZPcGVyYXRpb25zIiwiZml0VG9BcmVhT2ZPcGVyYXRpb25zIiwibGVuZ3RoIiwiYWRkQXJlYU9mT3BlcmF0aW9uc1RlcnJhaW4iXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./src/app/components/AO/AODisplay.tsx\n");

/***/ }),

/***/ "(ssr)/./src/app/components/AO/Hooks/useAreaOpsProcessor.ts":
/*!************************************************************!*\
  !*** ./src/app/components/AO/Hooks/useAreaOpsProcessor.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useAreaOpsProcessor: () => (/* binding */ useAreaOpsProcessor)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _turf_turf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @turf/turf */ \"(ssr)/./node_modules/@turf/helpers/dist/esm/index.js\");\n/* harmony import */ var _turf_turf__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @turf/turf */ \"(ssr)/./node_modules/@turf/buffer/dist/esm/index.js\");\n/* harmony import */ var _turf_turf__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @turf/turf */ \"(ssr)/./node_modules/@turf/bbox/dist/esm/index.js\");\n/* harmony import */ var _turf_turf__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @turf/turf */ \"(ssr)/./node_modules/@turf/point-grid/dist/esm/index.js\");\n/* harmony import */ var _turf_turf__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @turf/turf */ \"(ssr)/./node_modules/@turf/circle/dist/esm/index.js\");\n/* harmony import */ var _turf_turf__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @turf/turf */ \"(ssr)/./node_modules/@turf/center/dist/esm/index.js\");\n/* harmony import */ var _turf_clean_coords__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @turf/clean-coords */ \"(ssr)/./node_modules/@turf/clean-coords/dist/esm/index.js\");\n/* harmony import */ var _context_AreaOfOpsContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../context/AreaOfOpsContext */ \"(ssr)/./src/app/context/AreaOfOpsContext.tsx\");\n/* harmony import */ var _context_mapcontext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../context/mapcontext */ \"(ssr)/./src/app/context/mapcontext.tsx\");\n/* harmony import */ var _services_LayerManager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../services/LayerManager */ \"(ssr)/./src/app/services/LayerManager.ts\");\n/* harmony import */ var _components_Analyses_Types_GridAnalysisTypes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../components/Analyses/Types/GridAnalysisTypes */ \"(ssr)/./src/app/components/Analyses/Types/GridAnalysisTypes.ts\");\n// src/components/AO/Hooks/useAreaOpsProcessor.ts\n\n\n\n\n\n\n// FIXED: Import GridCell from unified location and helper function\n\nconst useAreaOpsProcessor = ()=>{\n    const { aoGeometry, setAoGeometry, setAoTerrainGrid, bufferDistance } = (0,_context_AreaOfOpsContext__WEBPACK_IMPORTED_MODULE_1__.useAreaOfOpsContext)();\n    const { map, terrainLoaded } = (0,_context_mapcontext__WEBPACK_IMPORTED_MODULE_2__.useMapContext)();\n    const processKML = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useAreaOpsProcessor.useCallback[processKML]\": (kmlText)=>{\n            try {\n                console.log(\"Processing KML text...\");\n                const parser = new DOMParser();\n                const kmlDom = parser.parseFromString(kmlText, \"text/xml\");\n                const coordsElement = kmlDom.querySelector(\"Polygon > outerBoundaryIs > LinearRing > coordinates\");\n                if (!coordsElement || !coordsElement.textContent) {\n                    throw new Error(\"No polygon coordinates found in KML\");\n                }\n                const coordsText = coordsElement.textContent.trim();\n                const coordinates = coordsText.split(/\\s+/).map({\n                    \"useAreaOpsProcessor.useCallback[processKML].coordinates\": (pair)=>{\n                        const [lon, lat] = pair.split(\",\").map(Number);\n                        return [\n                            lon,\n                            lat\n                        ];\n                    }\n                }[\"useAreaOpsProcessor.useCallback[processKML].coordinates\"]);\n                if (coordinates.length > 0) {\n                    const first = coordinates[0];\n                    const last = coordinates[coordinates.length - 1];\n                    if (first[0] !== last[0] || first[1] !== last[1]) {\n                        coordinates.push(first);\n                    }\n                }\n                const polygon = _turf_turf__WEBPACK_IMPORTED_MODULE_5__.polygon([\n                    coordinates\n                ]);\n                const featureCollection = _turf_turf__WEBPACK_IMPORTED_MODULE_5__.featureCollection([\n                    polygon\n                ]);\n                console.log(\"Processed KML into polygon with coordinates:\", coordinates.length);\n                if (map && terrainLoaded) {\n                    setAoGeometry(featureCollection);\n                } else {\n                    console.log(\"Waiting for map and terrain to load before setting AO\");\n                    const checkReady = setInterval({\n                        \"useAreaOpsProcessor.useCallback[processKML].checkReady\": ()=>{\n                            if (map && terrainLoaded) {\n                                setAoGeometry(featureCollection);\n                                clearInterval(checkReady);\n                            }\n                        }\n                    }[\"useAreaOpsProcessor.useCallback[processKML].checkReady\"], 100);\n                }\n                if (map && terrainLoaded) {\n                    _services_LayerManager__WEBPACK_IMPORTED_MODULE_3__.layerManager.addAreaOfOperations(featureCollection);\n                    _services_LayerManager__WEBPACK_IMPORTED_MODULE_3__.layerManager.fitToAreaOfOperations(featureCollection);\n                }\n                return featureCollection;\n            } catch (error) {\n                console.error(\"Error processing KML:\", error);\n                throw error;\n            }\n        }\n    }[\"useAreaOpsProcessor.useCallback[processKML]\"], [\n        map,\n        terrainLoaded,\n        setAoGeometry\n    ]);\n    const generateAOFromFlightPlan = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useAreaOpsProcessor.useCallback[generateAOFromFlightPlan]\": (flightPlan, makeVisible = false)=>{\n            console.log(\"Generating AO from flight plan...\");\n            if (!flightPlan?.features?.[0]?.geometry?.coordinates) {\n                console.error(\"Invalid flight plan data for AO generation\");\n                return null;\n            }\n            try {\n                const coordinates = flightPlan.features[0].geometry.coordinates;\n                console.log(\"Flight plan coordinates:\", JSON.stringify(coordinates));\n                // Validate coordinates\n                if (coordinates.length < 2) {\n                    console.error(\"Insufficient coordinates for LineString:\", coordinates);\n                    return null;\n                }\n                const invalidCoords = coordinates.find({\n                    \"useAreaOpsProcessor.useCallback[generateAOFromFlightPlan].invalidCoords\": ([lon, lat])=>isNaN(lon) || isNaN(lat) || lon < -180 || lon > 180 || lat < -90 || lat > 90\n                }[\"useAreaOpsProcessor.useCallback[generateAOFromFlightPlan].invalidCoords\"]);\n                if (invalidCoords) {\n                    console.error(\"Invalid coordinates detected:\", invalidCoords);\n                    return null;\n                }\n                const line = _turf_turf__WEBPACK_IMPORTED_MODULE_5__.lineString(coordinates.map({\n                    \"useAreaOpsProcessor.useCallback[generateAOFromFlightPlan].line\": (coord)=>[\n                            coord[0],\n                            coord[1]\n                        ]\n                }[\"useAreaOpsProcessor.useCallback[generateAOFromFlightPlan].line\"]));\n                const cleanedLine = (0,_turf_clean_coords__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(line);\n                const buffered = _turf_turf__WEBPACK_IMPORTED_MODULE_7__.buffer(cleanedLine, bufferDistance / 1000, {\n                    units: 'kilometers'\n                });\n                if (!buffered) {\n                    throw new Error(\"Buffering resulted in undefined geometry\");\n                }\n                const featureCollection = _turf_turf__WEBPACK_IMPORTED_MODULE_5__.featureCollection([\n                    buffered\n                ]);\n                console.log(`Generated AO from flight plan with ${coordinates.length} points and ${bufferDistance}m buffer`);\n                setAoGeometry(featureCollection);\n                if (map && terrainLoaded) {\n                    if (makeVisible) {\n                        _services_LayerManager__WEBPACK_IMPORTED_MODULE_3__.layerManager.addAreaOfOperations(featureCollection);\n                    } else {\n                        _services_LayerManager__WEBPACK_IMPORTED_MODULE_3__.layerManager.addAreaOfOperations(featureCollection);\n                        _services_LayerManager__WEBPACK_IMPORTED_MODULE_3__.layerManager.setLayerVisibility(_services_LayerManager__WEBPACK_IMPORTED_MODULE_3__.layerManager.MAP_LAYERS.AREA_OF_OPERATIONS_FILL, false);\n                        _services_LayerManager__WEBPACK_IMPORTED_MODULE_3__.layerManager.setLayerVisibility(_services_LayerManager__WEBPACK_IMPORTED_MODULE_3__.layerManager.MAP_LAYERS.AREA_OF_OPERATIONS_OUTLINE, false);\n                    }\n                }\n                return featureCollection;\n            } catch (error) {\n                console.warn(\"Failed to generate AO, proceeding without AO:\", error);\n                setAoGeometry(null);\n                return null;\n            }\n        }\n    }[\"useAreaOpsProcessor.useCallback[generateAOFromFlightPlan]\"], [\n        map,\n        terrainLoaded,\n        setAoGeometry,\n        bufferDistance\n    ]);\n    const showAreaOfOperations = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useAreaOpsProcessor.useCallback[showAreaOfOperations]\": ()=>{\n            if (!map || !aoGeometry) return false;\n            try {\n                _services_LayerManager__WEBPACK_IMPORTED_MODULE_3__.layerManager.setLayerVisibility(_services_LayerManager__WEBPACK_IMPORTED_MODULE_3__.layerManager.MAP_LAYERS.AREA_OF_OPERATIONS_FILL, true);\n                _services_LayerManager__WEBPACK_IMPORTED_MODULE_3__.layerManager.setLayerVisibility(_services_LayerManager__WEBPACK_IMPORTED_MODULE_3__.layerManager.MAP_LAYERS.AREA_OF_OPERATIONS_OUTLINE, true);\n                return true;\n            } catch (error) {\n                console.error(\"Error showing Area of Operations:\", error);\n                return false;\n            }\n        }\n    }[\"useAreaOpsProcessor.useCallback[showAreaOfOperations]\"], [\n        map,\n        aoGeometry\n    ]);\n    const generateTerrainGrid = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useAreaOpsProcessor.useCallback[generateTerrainGrid]\": async (gridSize = 30)=>{\n            if (!aoGeometry) {\n                console.error(\"Cannot generate terrain grid: Missing AO geometry\");\n                return null;\n            }\n            if (!map) {\n                console.error(\"Cannot generate terrain grid: Map not available\");\n                return null;\n            }\n            if (!terrainLoaded) {\n                console.error(\"Cannot generate terrain grid: Terrain Not Available\");\n                return null;\n            }\n            try {\n                console.log(\"Generating AO terrain grid...\");\n                showAreaOfOperations();\n                if (!aoGeometry.features || aoGeometry.features.length === 0) {\n                    console.error(\"Cannot generate terrain grid: AO geometry has no features\");\n                    return null;\n                }\n                const sourceGeometry = aoGeometry.features[0];\n                const bbox = _turf_turf__WEBPACK_IMPORTED_MODULE_8__.bbox(sourceGeometry);\n                const grid = _turf_turf__WEBPACK_IMPORTED_MODULE_9__.pointGrid(bbox, gridSize, {\n                    units: \"meters\",\n                    mask: sourceGeometry\n                });\n                const cells = [];\n                for(let i = 0; i < grid.features.length; i++){\n                    const point = grid.features[i];\n                    try {\n                        const cell = _turf_turf__WEBPACK_IMPORTED_MODULE_10__.circle(point.geometry.coordinates, gridSize / 2, {\n                            units: \"meters\",\n                            steps: 4\n                        });\n                        const center = _turf_turf__WEBPACK_IMPORTED_MODULE_11__.center(cell.geometry);\n                        let elevation = 0;\n                        try {\n                            elevation = map.queryTerrainElevation(center.geometry.coordinates) ?? 0;\n                        } catch (elevationError) {\n                            console.warn(`Error querying elevation for cell ${i}:`, elevationError);\n                        }\n                        // FIXED: Use the helper function to create properly typed GridCell\n                        const gridCell = (0,_components_Analyses_Types_GridAnalysisTypes__WEBPACK_IMPORTED_MODULE_4__.createGridCell)(`terrain-cell-${i}`, cell.geometry, elevation);\n                        cells.push(gridCell);\n                    } catch (cellError) {\n                        console.warn(`Error generating cell ${i}:`, cellError);\n                    }\n                }\n                console.log(`Generated terrain grid with ${cells.length} cells`);\n                setAoTerrainGrid(cells);\n                _services_LayerManager__WEBPACK_IMPORTED_MODULE_3__.layerManager.addAreaOfOperationsTerrain(cells);\n                return cells;\n            } catch (error) {\n                console.error(\"Error generating terrain grid:\", error);\n                return null;\n            }\n        }\n    }[\"useAreaOpsProcessor.useCallback[generateTerrainGrid]\"], [\n        aoGeometry,\n        map,\n        terrainLoaded,\n        setAoTerrainGrid,\n        showAreaOfOperations\n    ]);\n    const processAreaOfOperations = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useAreaOpsProcessor.useCallback[processAreaOfOperations]\": async ()=>{\n            if (!map || !terrainLoaded) {\n                console.error(\"Map not available for AO processing\");\n                return false;\n            }\n            if (aoGeometry) {\n                _services_LayerManager__WEBPACK_IMPORTED_MODULE_3__.layerManager.addAreaOfOperations(aoGeometry);\n                _services_LayerManager__WEBPACK_IMPORTED_MODULE_3__.layerManager.fitToAreaOfOperations(aoGeometry);\n                await generateTerrainGrid();\n                return true;\n            }\n            console.error(\"No AO geometry available to process\");\n            return false;\n        }\n    }[\"useAreaOpsProcessor.useCallback[processAreaOfOperations]\"], [\n        aoGeometry,\n        map,\n        terrainLoaded,\n        generateTerrainGrid\n    ]);\n    return {\n        processKML,\n        generateAOFromFlightPlan,\n        generateTerrainGrid,\n        processAreaOfOperations,\n        showAreaOfOperations\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/components/AO/Hooks/useAreaOpsProcessor.ts\n");

/***/ }),

/***/ "(ssr)/./src/app/components/Analyses/Hooks/useGridAnalysis.ts":
/*!**************************************************************!*\
  !*** ./src/app/components/Analyses/Hooks/useGridAnalysis.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useGridAnalysis: () => (/* binding */ useGridAnalysis)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mapbox_gl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mapbox-gl */ \"(ssr)/./node_modules/mapbox-gl/dist/mapbox-gl.js\");\n/* harmony import */ var mapbox_gl__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(mapbox_gl__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _context_mapcontext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../context/mapcontext */ \"(ssr)/./src/app/context/mapcontext.tsx\");\n/* harmony import */ var _context_MarkerContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../context/MarkerContext */ \"(ssr)/./src/app/context/MarkerContext.tsx\");\n/* harmony import */ var _context_LOSAnalysisContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../context/LOSAnalysisContext */ \"(ssr)/./src/app/context/LOSAnalysisContext.tsx\");\n/* harmony import */ var _services_LayerManager__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../services/LayerManager */ \"(ssr)/./src/app/services/LayerManager.ts\");\n/* harmony import */ var _Utils_GridAnalysisCore__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Utils/GridAnalysisCore */ \"(ssr)/./src/app/components/Analyses/Utils/GridAnalysisCore.ts\");\n/* harmony import */ var _hooks_useFlightPathSampling__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../hooks/useFlightPathSampling */ \"(ssr)/./src/app/hooks/useFlightPathSampling.ts\");\n/* harmony import */ var _Types_GridAnalysisTypes__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../Types/GridAnalysisTypes */ \"(ssr)/./src/app/components/Analyses/Types/GridAnalysisTypes.ts\");\n/**\n * useGridAnalysis.ts\n * \n * Optimized React hook for grid-based Line of Sight (LOS) analyses.\n * Provides an interface between UI components and the optimized GridAnalysisCore.\n * Maintains the same API for existing UI components while using the more\n * efficient implementations internally.\n * \n * This optimized hook replaces the existing useGridAnalysis.ts file while maintaining the same interface for the UI components. \n */ \n\n\n\n\n\n// Import from the optimized core engine\n\n\n\nfunction useGridAnalysis(options = {}) {\n    const { map, elevationService } = (0,_context_mapcontext__WEBPACK_IMPORTED_MODULE_2__.useMapContext)();\n    const { sampleFlightPath } = (0,_hooks_useFlightPathSampling__WEBPACK_IMPORTED_MODULE_7__.useFlightPathSampling)();\n    const { gcsLocation, observerLocation, repeaterLocation, gcsElevationOffset, observerElevationOffset, repeaterElevationOffset } = (0,_context_MarkerContext__WEBPACK_IMPORTED_MODULE_3__.useMarkersContext)();\n    const { gridSize, elosGridRange, isAnalyzing, setIsAnalyzing, setResults, setError, setProgress: setGlobalProgress } = (0,_context_LOSAnalysisContext__WEBPACK_IMPORTED_MODULE_4__.useLOSAnalysis)();\n    // State and refs\n    const [analysisInProgress, setAnalysisInProgress] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [lastAnalysisTime, setLastAnalysisTime] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n    const [progress, setProgress] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n    const abortControllerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const cacheRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(new Map());\n    /**\n   * Updates progress and notifies via callback\n   */ const updateProgress = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useGridAnalysis.useCallback[updateProgress]\": (value)=>{\n            setProgress(value);\n            setGlobalProgress(value);\n            if (options.onProgress) {\n                options.onProgress(value);\n            }\n        }\n    }[\"useGridAnalysis.useCallback[updateProgress]\"], [\n        options,\n        setGlobalProgress\n    ]);\n    /**\n   * Cleans up after analysis\n   */ const cleanupAnalysis = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useGridAnalysis.useCallback[cleanupAnalysis]\": ()=>{\n            setAnalysisInProgress(null);\n            setProgress(0);\n            if (abortControllerRef.current) {\n                abortControllerRef.current = null;\n            }\n        }\n    }[\"useGridAnalysis.useCallback[cleanupAnalysis]\"], []);\n    /**\n   * Aborts any running analysis\n   */ const abortAnalysis = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useGridAnalysis.useCallback[abortAnalysis]\": ()=>{\n            if (abortControllerRef.current) {\n                abortControllerRef.current.abort();\n                abortControllerRef.current = null;\n            }\n            setIsAnalyzing(false);\n            cleanupAnalysis();\n        }\n    }[\"useGridAnalysis.useCallback[abortAnalysis]\"], [\n        cleanupAnalysis,\n        setIsAnalyzing\n    ]);\n    /**\n   * Visualizes grid cells on the map\n   */ const visualizeGrid = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useGridAnalysis.useCallback[visualizeGrid]\": (analysisResults, layerId = _services_LayerManager__WEBPACK_IMPORTED_MODULE_5__.MAP_LAYERS.ELOS_GRID)=>{\n            if (!map) {\n                console.error('Map not initialized, cannot visualize grid');\n                return;\n            }\n            try {\n                const geojson = {\n                    type: 'FeatureCollection',\n                    features: analysisResults.cells.map({\n                        \"useGridAnalysis.useCallback[visualizeGrid]\": (cell)=>({\n                                type: 'Feature',\n                                geometry: cell.geometry,\n                                properties: cell.properties\n                            })\n                    }[\"useGridAnalysis.useCallback[visualizeGrid]\"])\n                };\n                if (map.getSource(layerId)) {\n                    const source = map.getSource(layerId);\n                    source.setData(geojson);\n                    return;\n                }\n                map.addSource(layerId, {\n                    type: 'geojson',\n                    data: geojson\n                });\n                // Define color ramp based on layer type\n                const colorRamp = layerId === _services_LayerManager__WEBPACK_IMPORTED_MODULE_5__.MAP_LAYERS.MERGED_VISIBILITY ? [\n                    'interpolate',\n                    [\n                        'linear'\n                    ],\n                    [\n                        'get',\n                        'visibility'\n                    ],\n                    0,\n                    '#d32f2f',\n                    50,\n                    '#1976d2',\n                    100,\n                    '#7cb342' // Green: Two or more stations\n                ] : [\n                    'interpolate',\n                    [\n                        'linear'\n                    ],\n                    [\n                        'get',\n                        'visibility'\n                    ],\n                    0,\n                    '#d32f2f',\n                    25,\n                    '#f57c00',\n                    50,\n                    '#fbc02d',\n                    75,\n                    '#7cb342',\n                    100,\n                    '#1976d2' // Blue\n                ];\n                map.addLayer({\n                    id: layerId,\n                    type: 'fill',\n                    source: layerId,\n                    paint: {\n                        'fill-color': colorRamp,\n                        'fill-opacity': [\n                            'interpolate',\n                            [\n                                'linear'\n                            ],\n                            [\n                                'zoom'\n                            ],\n                            10,\n                            0.7,\n                            15,\n                            0.5\n                        ]\n                    }\n                });\n                // Set up popup\n                const onMouseMove = {\n                    \"useGridAnalysis.useCallback[visualizeGrid].onMouseMove\": (e)=>{\n                        if (e.features && e.features.length > 0) {\n                            const feature = e.features[0];\n                            const vis = feature.properties?.visibility?.toFixed(1);\n                            const elev = feature.properties?.elevation?.toFixed(1);\n                            if (onMouseMove.popup) {\n                                onMouseMove.popup.remove();\n                            }\n                            onMouseMove.popup = new (mapbox_gl__WEBPACK_IMPORTED_MODULE_1___default().Popup)({\n                                closeButton: false,\n                                closeOnMove: true\n                            }).setLngLat(e.lngLat).setHTML(`\n                <div class=\"bg-white text-black p-2 rounded shadow\">\n                  <strong>Visibility Analysis</strong>\n                  <hr class=\"my-1 border-gray-300\"/>\n                  <div class=\"grid grid-cols-2 gap-1\">\n                    <span>Visibility:</span>\n                    <strong>${vis || 'N/A'}%</strong>\n                    <span>Terrain Elevation:</span>\n                    <strong>${elev || 'N/A'}m</strong>\n                    <span>Distance Range:</span>\n                    <strong>${elosGridRange}m</strong>\n                  </div>\n                </div>\n              `).addTo(map);\n                        }\n                    }\n                }[\"useGridAnalysis.useCallback[visualizeGrid].onMouseMove\"];\n                // Set up event handling\n                onMouseMove.popup = null;\n                const onMouseLeave = {\n                    \"useGridAnalysis.useCallback[visualizeGrid].onMouseLeave\": ()=>{\n                        if (onMouseMove.popup) {\n                            onMouseMove.popup.remove();\n                            onMouseMove.popup = null;\n                        }\n                    }\n                }[\"useGridAnalysis.useCallback[visualizeGrid].onMouseLeave\"];\n                map.off('mousemove', layerId, onMouseMove);\n                map.off('mouseleave', layerId, onMouseLeave);\n                map.on('mousemove', layerId, onMouseMove);\n                map.on('mouseleave', layerId, onMouseLeave);\n                _services_LayerManager__WEBPACK_IMPORTED_MODULE_5__.layerManager.registerLayer(layerId, true);\n            } catch (error) {\n                console.error('Error in visualization:', error);\n            }\n        }\n    }[\"useGridAnalysis.useCallback[visualizeGrid]\"], [\n        map,\n        elosGridRange\n    ]);\n    /**\n * Optimized flight path visibility analysis implementation\n */ const analyzeFlightPath = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useGridAnalysis.useCallback[analyzeFlightPath]\": async (flightPlan, options)=>{\n            if (!map) {\n                throw (0,_Utils_GridAnalysisCore__WEBPACK_IMPORTED_MODULE_6__.createError)('Map not initialized', 'MAP_INTERACTION');\n            }\n            setIsAnalyzing(true);\n            const startTime = performance.now();\n            setAnalysisInProgress(_Types_GridAnalysisTypes__WEBPACK_IMPORTED_MODULE_8__.AnalysisType.FLIGHT_PATH);\n            abortControllerRef.current = new AbortController();\n            try {\n                updateProgress(5);\n                // Validate flight plan\n                if (!flightPlan || !flightPlan.features || !flightPlan.features[0] || flightPlan.features[0].geometry.type !== 'LineString') {\n                    const error = new Error('Invalid flight plan geometry');\n                    throw error;\n                }\n                // Extract flight path feature\n                const flightPath = flightPlan.features[0];\n                // Get the original coordinates (we'll still need these for other operations)\n                const originalCoordinates = flightPath.geometry.coordinates;\n                // Determine altitude mode\n                const waypoints = flightPath.properties?.waypoints || [];\n                const altitudeMode = waypoints.length > 0 ? waypoints[0].altitudeMode : \"absolute\"; // Default\n                updateProgress(10);\n                // Generate sampled points at the specified resolution using your hook's sampleFlightPath\n                console.log(`[Flight Path Analysis] Sampling flight path at ${options?.samplingResolution || 10}m intervals`);\n                // Extract lineString directly\n                const lineString = flightPath.geometry;\n                const sampledPoints = await sampleFlightPath(lineString, {\n                    resolution: options?.samplingResolution || 10,\n                    progressCallback: {\n                        \"useGridAnalysis.useCallback[analyzeFlightPath]\": (progress)=>{\n                            updateProgress(10 + progress * 0.1);\n                            return false; // Don't abort\n                        }\n                    }[\"useGridAnalysis.useCallback[analyzeFlightPath]\"]\n                });\n                // Extract coordinates from the sampled points\n                const sampledCoordinates = sampledPoints.map({\n                    \"useGridAnalysis.useCallback[analyzeFlightPath].sampledCoordinates\": (point)=>point.position\n                }[\"useGridAnalysis.useCallback[analyzeFlightPath].sampledCoordinates\"]);\n                console.log(`[Flight Path Analysis] Generated ${sampledCoordinates.length} sample points from ${originalCoordinates.length} original waypoints`);\n                updateProgress(20);\n                // Generate grid using optimized core function\n                const cells = await (0,_Utils_GridAnalysisCore__WEBPACK_IMPORTED_MODULE_6__.generateGrid)(map, {\n                    flightPath,\n                    elosGridRange,\n                    gridSize,\n                    elevationService\n                });\n                if (!cells || !cells.length) {\n                    throw new Error('Generated grid is empty');\n                }\n                updateProgress(40);\n                // Process cells in optimized batches\n                const chunkSize = 100; // Larger batch size for efficiency\n                const results = [];\n                let visibleCellCount = 0;\n                let totalVisibility = 0;\n                for(let i = 0; i < cells.length; i += chunkSize){\n                    if (abortControllerRef.current?.signal.aborted) {\n                        throw (0,_Utils_GridAnalysisCore__WEBPACK_IMPORTED_MODULE_6__.createError)('Analysis aborted', 'VISIBILITY_ANALYSIS');\n                    }\n                    const chunk = cells.slice(i, i + chunkSize);\n                    // Process chunk in parallel\n                    const processedChunk = await Promise.all(chunk.map({\n                        \"useGridAnalysis.useCallback[analyzeFlightPath]\": async (cell)=>{\n                            try {\n                                const center = [\n                                    (cell.geometry.coordinates[0][0][0] + cell.geometry.coordinates[0][2][0]) / 2,\n                                    (cell.geometry.coordinates[0][0][1] + cell.geometry.coordinates[0][2][1]) / 2\n                                ];\n                                // IMPORTANT CHANGE: Pass sampled coordinates instead of original coordinates\n                                const visibility = await (0,_Utils_GridAnalysisCore__WEBPACK_IMPORTED_MODULE_6__.checkFlightPathLOS)(map, [\n                                    center[0],\n                                    center[1],\n                                    cell.properties.elevation || 0\n                                ], originalCoordinates, {\n                                    altitudeMode,\n                                    elevationService,\n                                    gridRange: elosGridRange,\n                                    sampledCoordinates\n                                });\n                                if (visibility > 0) visibleCellCount++;\n                                totalVisibility += visibility;\n                                return {\n                                    ...cell,\n                                    properties: {\n                                        ...cell.properties,\n                                        visibility,\n                                        fullyVisible: visibility === 100,\n                                        lastAnalyzed: Date.now()\n                                    }\n                                };\n                            } catch (e) {\n                                console.warn('Error processing cell:', e);\n                                return cell; // Return unmodified on error\n                            }\n                        }\n                    }[\"useGridAnalysis.useCallback[analyzeFlightPath]\"]));\n                    results.push(...processedChunk);\n                    const progressValue = 40 + Math.min(50, (i + chunkSize) / cells.length * 50);\n                    updateProgress(progressValue);\n                    await new Promise({\n                        \"useGridAnalysis.useCallback[analyzeFlightPath]\": (resolve)=>setTimeout(resolve, 0)\n                    }[\"useGridAnalysis.useCallback[analyzeFlightPath]\"]); // Let UI breathe\n                }\n                updateProgress(95);\n                const analysisTime = performance.now() - startTime;\n                const analysisResults = {\n                    cells: results,\n                    stats: {\n                        totalCells: cells.length,\n                        visibleCells: visibleCellCount,\n                        averageVisibility: totalVisibility / cells.length,\n                        analysisTime\n                    }\n                };\n                visualizeGrid(analysisResults, _services_LayerManager__WEBPACK_IMPORTED_MODULE_5__.MAP_LAYERS.ELOS_GRID);\n                updateProgress(100);\n                setLastAnalysisTime(Date.now());\n                // Log visibility distribution\n                const visibilityBuckets = {\n                    'zero': 0,\n                    '1-25': 0,\n                    '26-50': 0,\n                    '51-75': 0,\n                    '76-99': 0,\n                    'hundred': 0\n                };\n                results.forEach({\n                    \"useGridAnalysis.useCallback[analyzeFlightPath]\": (cell)=>{\n                        const vis = cell.properties.visibility;\n                        if (vis === 0) visibilityBuckets.zero++;\n                        else if (vis <= 25) visibilityBuckets['1-25']++;\n                        else if (vis <= 50) visibilityBuckets['26-50']++;\n                        else if (vis <= 75) visibilityBuckets['51-75']++;\n                        else if (vis < 100) visibilityBuckets['76-99']++;\n                        else visibilityBuckets.hundred++;\n                    }\n                }[\"useGridAnalysis.useCallback[analyzeFlightPath]\"]);\n                console.log(`[Debug] Final visibility distribution:`, visibilityBuckets);\n                return analysisResults;\n            } catch (error) {\n                console.error(`Flight path analysis error:`, error);\n                throw error;\n            } finally{\n                cleanupAnalysis();\n                setIsAnalyzing(false);\n            }\n        }\n    }[\"useGridAnalysis.useCallback[analyzeFlightPath]\"], [\n        map,\n        gridSize,\n        elosGridRange,\n        updateProgress,\n        visualizeGrid,\n        cleanupAnalysis,\n        setIsAnalyzing,\n        elevationService,\n        sampleFlightPath\n    ]);\n    /**\n   * Analyzes visibility from a single station\n   */ const analyzeStation = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useGridAnalysis.useCallback[analyzeStation]\": async ({ stationType, location, range, elevationOffset, markerId, layerId })=>{\n            if (!map) {\n                throw (0,_Utils_GridAnalysisCore__WEBPACK_IMPORTED_MODULE_6__.createError)('Map not initialized', 'MAP_INTERACTION');\n            }\n            setIsAnalyzing(true);\n            const startTime = performance.now();\n            try {\n                // Validate location data\n                if (!location || typeof location.lng !== 'number' || typeof location.lat !== 'number') {\n                    throw (0,_Utils_GridAnalysisCore__WEBPACK_IMPORTED_MODULE_6__.createError)(`${stationType.toUpperCase()} location not set or invalid`, 'INVALID_INPUT');\n                }\n                updateProgress(10);\n                // Generate grid using optimized core function\n                const cells = await (0,_Utils_GridAnalysisCore__WEBPACK_IMPORTED_MODULE_6__.generateGrid)(map, {\n                    center: [\n                        location.lng,\n                        location.lat\n                    ],\n                    range,\n                    gridSize,\n                    elevationService\n                });\n                if (!cells || !cells.length) {\n                    throw (0,_Utils_GridAnalysisCore__WEBPACK_IMPORTED_MODULE_6__.createError)('Failed to generate grid', 'GRID_GENERATION');\n                }\n                updateProgress(40);\n                // Get observer elevation\n                const stationElevation = location.elevation ?? await elevationService?.getElevation(location.lng, location.lat) ?? 0;\n                const stationPosition = [\n                    location.lng,\n                    location.lat,\n                    stationElevation + elevationOffset\n                ];\n                // Process in optimized batches\n                const chunkSize = 100;\n                let visibleCells = 0;\n                let totalVisibility = 0;\n                const updatedCells = [];\n                for(let i = 0; i < cells.length; i += chunkSize){\n                    if (abortControllerRef.current?.signal.aborted) {\n                        throw (0,_Utils_GridAnalysisCore__WEBPACK_IMPORTED_MODULE_6__.createError)('Analysis aborted', 'VISIBILITY_ANALYSIS');\n                    }\n                    const chunk = cells.slice(i, i + chunkSize);\n                    // Process in parallel\n                    const chunkResults = await Promise.all(chunk.map({\n                        \"useGridAnalysis.useCallback[analyzeStation]\": async (cell)=>{\n                            try {\n                                const center = [\n                                    (cell.geometry.coordinates[0][0][0] + cell.geometry.coordinates[0][2][0]) / 2,\n                                    (cell.geometry.coordinates[0][0][1] + cell.geometry.coordinates[0][2][1]) / 2\n                                ];\n                                const isVisible = await (0,_Utils_GridAnalysisCore__WEBPACK_IMPORTED_MODULE_6__.checkStationLOS)(map, stationPosition, [\n                                    center[0],\n                                    center[1],\n                                    cell.properties.elevation || 0\n                                ], {\n                                    elevationService\n                                });\n                                const visibility = isVisible ? 100 : 0;\n                                if (isVisible) {\n                                    visibleCells++;\n                                    totalVisibility += 100;\n                                }\n                                return {\n                                    ...cell,\n                                    properties: {\n                                        ...cell.properties,\n                                        visibility,\n                                        fullyVisible: isVisible,\n                                        lastAnalyzed: Date.now()\n                                    }\n                                };\n                            } catch (e) {\n                                console.warn('Error processing cell:', e);\n                                return cell; // Return unmodified on error\n                            }\n                        }\n                    }[\"useGridAnalysis.useCallback[analyzeStation]\"]));\n                    updatedCells.push(...chunkResults);\n                    const progressValue = 40 + (i + chunkSize) / cells.length * 50;\n                    updateProgress(progressValue);\n                    await new Promise({\n                        \"useGridAnalysis.useCallback[analyzeStation]\": (resolve)=>setTimeout(resolve, 0)\n                    }[\"useGridAnalysis.useCallback[analyzeStation]\"]); // Let UI breathe\n                }\n                const analysisTime = performance.now() - startTime;\n                updateProgress(95);\n                // Use the provided layerId or generate a default one\n                const effectiveLayerId = layerId || (stationType === 'gcs' ? _services_LayerManager__WEBPACK_IMPORTED_MODULE_5__.MAP_LAYERS.GCS_GRID : stationType === 'observer' ? _services_LayerManager__WEBPACK_IMPORTED_MODULE_5__.MAP_LAYERS.OBSERVER_GRID : _services_LayerManager__WEBPACK_IMPORTED_MODULE_5__.MAP_LAYERS.REPEATER_GRID);\n                const analysisResults = {\n                    cells: updatedCells,\n                    stats: {\n                        visibleCells: visibleCells,\n                        totalCells: cells.length,\n                        averageVisibility: cells.length > 0 ? totalVisibility / cells.length : 0,\n                        analysisTime\n                    }\n                };\n                // Visualize with the effective layer ID\n                visualizeGrid(analysisResults, effectiveLayerId);\n                updateProgress(100);\n                setLastAnalysisTime(Date.now());\n                return analysisResults;\n            } catch (error) {\n                console.error(`Station analysis error:`, error);\n                throw error;\n            } finally{\n                updateProgress(0);\n                cleanupAnalysis();\n                setIsAnalyzing(false);\n            }\n        }\n    }[\"useGridAnalysis.useCallback[analyzeStation]\"], [\n        map,\n        gridSize,\n        elevationService,\n        updateProgress,\n        visualizeGrid,\n        cleanupAnalysis,\n        setIsAnalyzing\n    ]);\n    /**\n   * Optimized merged analysis implementation\n   */ const analyzeMerged = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useGridAnalysis.useCallback[analyzeMerged]\": async ({ stations })=>{\n            if (!map) {\n                throw (0,_Utils_GridAnalysisCore__WEBPACK_IMPORTED_MODULE_6__.createError)('Map not initialized', 'MAP_INTERACTION');\n            }\n            setIsAnalyzing(true);\n            const startTime = performance.now();\n            try {\n                if (!stations || !Array.isArray(stations) || stations.length < 2) {\n                    throw new Error(\"At least two stations are required for merged analysis\");\n                }\n                // Validate stations\n                for (const station of stations){\n                    if (!station.location || typeof station.location.lng !== 'number' || typeof station.location.lat !== 'number') {\n                        throw new Error(`Invalid location data for station (${station.type})`);\n                    }\n                }\n                updateProgress(10);\n                // Generate combined bounding box\n                const bbox = (0,_Utils_GridAnalysisCore__WEBPACK_IMPORTED_MODULE_6__.generateCombinedBoundingBox)(stations);\n                const center = [\n                    (bbox[0] + bbox[2]) / 2,\n                    (bbox[1] + bbox[3]) / 2\n                ];\n                const maxRange = Math.max(...stations.map({\n                    \"useGridAnalysis.useCallback[analyzeMerged].maxRange\": (s)=>s.range\n                }[\"useGridAnalysis.useCallback[analyzeMerged].maxRange\"]));\n                // Prepare station positions with elevations\n                const stationPositions = await Promise.all(stations.map({\n                    \"useGridAnalysis.useCallback[analyzeMerged]\": async (station)=>{\n                        const elev = station.location.elevation ?? await elevationService?.getElevation(station.location.lng, station.location.lat) ?? 0;\n                        return {\n                            type: station.type,\n                            position: [\n                                station.location.lng,\n                                station.location.lat,\n                                elev + station.elevationOffset\n                            ]\n                        };\n                    }\n                }[\"useGridAnalysis.useCallback[analyzeMerged]\"]));\n                updateProgress(20);\n                // Generate grid - use larger grid size for better performance\n                const cells = await (0,_Utils_GridAnalysisCore__WEBPACK_IMPORTED_MODULE_6__.generateGrid)(map, {\n                    center,\n                    range: maxRange * 1.1,\n                    gridSize,\n                    elevationService\n                });\n                if (!cells.length) {\n                    throw new Error('Failed to generate grid for merged analysis');\n                }\n                updateProgress(40);\n                // Process in more efficient batches\n                const chunkSize = 100;\n                let visibleCells = 0;\n                let visibilitySum = 0;\n                for(let i = 0; i < cells.length; i += chunkSize){\n                    if (abortControllerRef.current?.signal.aborted) {\n                        throw (0,_Utils_GridAnalysisCore__WEBPACK_IMPORTED_MODULE_6__.createError)('Analysis aborted', 'VISIBILITY_ANALYSIS');\n                    }\n                    const chunk = cells.slice(i, i + chunkSize);\n                    // Process batch in parallel\n                    await Promise.all(chunk.map({\n                        \"useGridAnalysis.useCallback[analyzeMerged]\": async (cell, cellIndex)=>{\n                            try {\n                                const center = [\n                                    (cell.geometry.coordinates[0][0][0] + cell.geometry.coordinates[0][2][0]) / 2,\n                                    (cell.geometry.coordinates[0][0][1] + cell.geometry.coordinates[0][2][1]) / 2\n                                ];\n                                const targetPosition = [\n                                    center[0],\n                                    center[1],\n                                    cell.properties.elevation || 0\n                                ];\n                                let visibleStationCount = 0;\n                                // Check visibility from each station\n                                for (const station of stationPositions){\n                                    const isVisible = await (0,_Utils_GridAnalysisCore__WEBPACK_IMPORTED_MODULE_6__.checkStationLOS)(map, station.position, targetPosition, {\n                                        elevationService\n                                    });\n                                    if (isVisible) {\n                                        visibleStationCount++;\n                                    }\n                                }\n                                // Set visibility based on number of visible stations\n                                let visibilityPercentage = 0;\n                                if (visibleStationCount === 1) {\n                                    visibilityPercentage = 50;\n                                } else if (visibleStationCount >= 2) {\n                                    visibilityPercentage = 100;\n                                }\n                                cell.properties.visibility = visibilityPercentage;\n                                cell.properties.fullyVisible = visibleStationCount >= stationPositions.length;\n                                cell.properties.visibleStationCount = visibleStationCount;\n                                cell.properties.lastAnalyzed = Date.now();\n                                if (visibleStationCount > 0) {\n                                    visibleCells++;\n                                    visibilitySum += visibilityPercentage;\n                                }\n                            } catch (e) {\n                                console.warn('Error analyzing merged cell:', e);\n                            }\n                        }\n                    }[\"useGridAnalysis.useCallback[analyzeMerged]\"]));\n                    const progressValue = 40 + (i + chunkSize) / cells.length * 50;\n                    updateProgress(progressValue);\n                    await new Promise({\n                        \"useGridAnalysis.useCallback[analyzeMerged]\": (resolve)=>setTimeout(resolve, 0)\n                    }[\"useGridAnalysis.useCallback[analyzeMerged]\"]); // Let UI breathe\n                }\n                updateProgress(95);\n                const analysisTime = performance.now() - startTime;\n                const analysisResults = {\n                    cells,\n                    stats: {\n                        visibleCells,\n                        totalCells: cells.length,\n                        averageVisibility: cells.length > 0 ? visibilitySum / cells.length : 0,\n                        analysisTime\n                    }\n                };\n                visualizeGrid(analysisResults, _services_LayerManager__WEBPACK_IMPORTED_MODULE_5__.MAP_LAYERS.MERGED_VISIBILITY);\n                updateProgress(100);\n                setLastAnalysisTime(Date.now());\n                return analysisResults;\n            } catch (error) {\n                console.error(`Merged analysis error:`, error);\n                throw error;\n            } finally{\n                updateProgress(0);\n                cleanupAnalysis();\n                setIsAnalyzing(false);\n            }\n        }\n    }[\"useGridAnalysis.useCallback[analyzeMerged]\"], [\n        map,\n        gridSize,\n        elevationService,\n        updateProgress,\n        visualizeGrid,\n        cleanupAnalysis,\n        setIsAnalyzing\n    ]);\n    /**\n * Checks LOS between two stations - either by marker IDs or station types\n */ const checkStationToStationLOS = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useGridAnalysis.useCallback[checkStationToStationLOS]\": async (sourceStationData, targetStationData)=>{\n            if (!map) {\n                throw (0,_Utils_GridAnalysisCore__WEBPACK_IMPORTED_MODULE_6__.createError)('Map not initialized', 'MAP_INTERACTION');\n            }\n            setIsAnalyzing(true);\n            try {\n                // Handle string-based station types (backward compatibility)\n                if (typeof sourceStationData === 'string' && typeof targetStationData === 'string') {\n                    // Original implementation for string-based station types\n                    const sourceStation = sourceStationData;\n                    const targetStation = targetStationData;\n                    // Log the station types for debugging\n                    console.log('Using string-based station types:', {\n                        sourceStation,\n                        targetStation\n                    });\n                    const stations = {\n                        gcs: {\n                            location: gcsLocation,\n                            offset: gcsElevationOffset\n                        },\n                        observer: {\n                            location: observerLocation,\n                            offset: observerElevationOffset\n                        },\n                        repeater: {\n                            location: repeaterLocation,\n                            offset: repeaterElevationOffset\n                        }\n                    };\n                    // Ensure sourceStation and targetStation are valid strings\n                    if (![\n                        'gcs',\n                        'observer',\n                        'repeater'\n                    ].includes(sourceStation)) {\n                        throw new Error(`Invalid source station type: ${sourceStation}`);\n                    }\n                    if (![\n                        'gcs',\n                        'observer',\n                        'repeater'\n                    ].includes(targetStation)) {\n                        throw new Error(`Invalid target station type: ${targetStation}`);\n                    }\n                    const source = stations[sourceStation];\n                    const target = stations[targetStation];\n                    // Defensive null check before accessing properties\n                    if (!source?.location || !target?.location) {\n                        console.error('Station details:', {\n                            source: {\n                                type: sourceStation,\n                                data: source\n                            },\n                            target: {\n                                type: targetStation,\n                                data: target\n                            }\n                        });\n                        throw new Error(`Both ${sourceStation} and ${targetStation} must be on the map with valid locations.`);\n                    }\n                    updateProgress(20);\n                    // Use the renamed core function to avoid recursion\n                    const losData = await (0,_Utils_GridAnalysisCore__WEBPACK_IMPORTED_MODULE_6__.checkStationToStationLOS)(map, {\n                        location: source.location,\n                        elevationOffset: source.offset\n                    }, {\n                        location: target.location,\n                        elevationOffset: target.offset\n                    }, {\n                        elevationService\n                    });\n                    updateProgress(100);\n                    return losData;\n                } else if (typeof sourceStationData === 'object' && sourceStationData !== null && typeof targetStationData === 'object' && targetStationData !== null) {\n                    // New implementation for object-based station data\n                    console.log('Using object-based station data');\n                    const sourceStation = sourceStationData;\n                    const targetStation = targetStationData;\n                    // Validate input objects\n                    if (!sourceStation.location || !targetStation.location) {\n                        console.error('Invalid station data:', {\n                            sourceStation,\n                            targetStation\n                        });\n                        throw new Error('Both source and target stations must have valid location data');\n                    }\n                    updateProgress(20);\n                    // Directly use the core function with the station objects\n                    const losData = await (0,_Utils_GridAnalysisCore__WEBPACK_IMPORTED_MODULE_6__.checkStationToStationLOS)(map, {\n                        location: sourceStation.location,\n                        elevationOffset: sourceStation.elevationOffset\n                    }, {\n                        location: targetStation.location,\n                        elevationOffset: targetStation.elevationOffset\n                    }, {\n                        elevationService\n                    });\n                    updateProgress(100);\n                    return losData;\n                } else {\n                    throw new Error(`Invalid station data format. Expected either station type strings or station objects.`);\n                }\n            } catch (error) {\n                console.error(`Station-to-station LOS error:`, error);\n                throw error;\n            } finally{\n                updateProgress(0);\n                cleanupAnalysis();\n                setIsAnalyzing(false);\n            }\n        }\n    }[\"useGridAnalysis.useCallback[checkStationToStationLOS]\"], [\n        map,\n        gcsLocation,\n        observerLocation,\n        repeaterLocation,\n        gcsElevationOffset,\n        observerElevationOffset,\n        repeaterElevationOffset,\n        elevationService,\n        updateProgress,\n        cleanupAnalysis,\n        setIsAnalyzing\n    ]);\n    /**\n * Main analysis function that handles all analysis types\n */ const runAnalysis = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useGridAnalysis.useCallback[runAnalysis]\": async (type, options)=>{\n            if (isAnalyzing) {\n                throw (0,_Utils_GridAnalysisCore__WEBPACK_IMPORTED_MODULE_6__.createError)('Analysis already in progress', 'INVALID_INPUT');\n            }\n            try {\n                setIsAnalyzing(true);\n                setError(null);\n                let result;\n                switch(type){\n                    case _Types_GridAnalysisTypes__WEBPACK_IMPORTED_MODULE_8__.AnalysisType.FLIGHT_PATH:\n                        if (!options?.flightPlan) {\n                            throw (0,_Utils_GridAnalysisCore__WEBPACK_IMPORTED_MODULE_6__.createError)('Flight plan is required', 'INVALID_INPUT');\n                        }\n                        result = await analyzeFlightPath(options.flightPlan, {\n                            samplingResolution: options.samplingResolution\n                        });\n                        break;\n                    case _Types_GridAnalysisTypes__WEBPACK_IMPORTED_MODULE_8__.AnalysisType.STATION:\n                        if (!options?.stationType || !options?.location || !options?.range) {\n                            throw (0,_Utils_GridAnalysisCore__WEBPACK_IMPORTED_MODULE_6__.createError)('Station type, location, and range are required', 'INVALID_INPUT');\n                        }\n                        result = await analyzeStation({\n                            stationType: options.stationType,\n                            location: options.location,\n                            range: options.range,\n                            elevationOffset: options.elevationOffset || 0\n                        });\n                        break;\n                    case _Types_GridAnalysisTypes__WEBPACK_IMPORTED_MODULE_8__.AnalysisType.MERGED:\n                        if (!options?.stations || options.stations.length < 2) {\n                            throw (0,_Utils_GridAnalysisCore__WEBPACK_IMPORTED_MODULE_6__.createError)('At least two stations are required', 'INVALID_INPUT');\n                        }\n                        result = await analyzeMerged({\n                            stations: options.stations\n                        });\n                        break;\n                    case _Types_GridAnalysisTypes__WEBPACK_IMPORTED_MODULE_8__.AnalysisType.STATION_TO_STATION:\n                        if (!options?.sourceStation || !options?.targetStation) {\n                            throw (0,_Utils_GridAnalysisCore__WEBPACK_IMPORTED_MODULE_6__.createError)('Source and target stations are required', 'INVALID_INPUT');\n                        }\n                        // Pass the station data objects directly to checkStationToStationLOS\n                        const stationResult = await checkStationToStationLOS(options.sourceStation, options.targetStation);\n                        result = {\n                            cells: [],\n                            stats: {\n                                visibleCells: 0,\n                                totalCells: 0,\n                                averageVisibility: stationResult.result.clear ? 100 : 0,\n                                analysisTime: 0\n                            },\n                            stationLOSResult: stationResult.result,\n                            profile: stationResult.profile\n                        };\n                        break;\n                    default:\n                        throw (0,_Utils_GridAnalysisCore__WEBPACK_IMPORTED_MODULE_6__.createError)(`Unsupported analysis type: ${type}`, 'INVALID_INPUT');\n                }\n                const compatibleResult = {\n                    cells: result.cells,\n                    stats: result.stats,\n                    stationLOSResult: result.stationLOSResult\n                };\n                setResults(compatibleResult);\n                return result;\n            } catch (error) {\n                console.error(`Analysis error, type: ${type}:`, error);\n                setError(error instanceof Error ? error.message : 'Analysis failed');\n                throw error;\n            } finally{\n                setIsAnalyzing(false);\n            }\n        }\n    }[\"useGridAnalysis.useCallback[runAnalysis]\"], [\n        isAnalyzing,\n        setIsAnalyzing,\n        setError,\n        setResults,\n        analyzeFlightPath,\n        analyzeStation,\n        analyzeMerged,\n        checkStationToStationLOS\n    ]);\n    /**\n * Analyzes terrain grid with optimized performance\n */ const analyzeTerrainGrid = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useGridAnalysis.useCallback[analyzeTerrainGrid]\": async (gridCells, referenceAltitude = 120)=>{\n            if (!map) {\n                throw (0,_Utils_GridAnalysisCore__WEBPACK_IMPORTED_MODULE_6__.createError)('Map not initialized', 'MAP_INTERACTION');\n            }\n            if (isAnalyzing) {\n                throw (0,_Utils_GridAnalysisCore__WEBPACK_IMPORTED_MODULE_6__.createError)('Analysis already in progress', 'INVALID_INPUT');\n            }\n            try {\n                setIsAnalyzing(true);\n                setAnalysisInProgress(_Types_GridAnalysisTypes__WEBPACK_IMPORTED_MODULE_8__.AnalysisType.TERRAIN);\n                abortControllerRef.current = new AbortController();\n                const startTime = performance.now();\n                // Use the renamed core implementation\n                const result = await (0,_Utils_GridAnalysisCore__WEBPACK_IMPORTED_MODULE_6__.analyzeTerrainGrid)(gridCells, {\n                    batchSize: 1000,\n                    referenceAltitude,\n                    onProgress: {\n                        \"useGridAnalysis.useCallback[analyzeTerrainGrid]\": (progress)=>{\n                            updateProgress(progress);\n                            return abortControllerRef.current?.signal.aborted || false;\n                        }\n                    }[\"useGridAnalysis.useCallback[analyzeTerrainGrid]\"]\n                });\n                if (abortControllerRef.current?.signal.aborted) {\n                    throw (0,_Utils_GridAnalysisCore__WEBPACK_IMPORTED_MODULE_6__.createError)('Analysis aborted', 'USER_ABORT');\n                }\n                // Create analysis results in compatible format\n                const analysisResults = {\n                    cells: gridCells,\n                    stats: {\n                        visibleCells: gridCells.length,\n                        totalCells: gridCells.length,\n                        averageVisibility: 100,\n                        analysisTime: performance.now() - startTime,\n                        terrainStats: {\n                            highestElevation: result.highestElevation,\n                            lowestElevation: result.lowestElevation,\n                            averageElevation: result.averageElevation,\n                            elevationDistribution: result.elevationDistribution\n                        }\n                    }\n                };\n                return analysisResults;\n            } catch (error) {\n                console.error(`Terrain grid analysis error:`, error);\n                throw error;\n            } finally{\n                cleanupAnalysis();\n                setIsAnalyzing(false);\n            }\n        }\n    }[\"useGridAnalysis.useCallback[analyzeTerrainGrid]\"], [\n        map,\n        isAnalyzing,\n        updateProgress,\n        cleanupAnalysis,\n        setIsAnalyzing\n    ]);\n    // Return the same interface for backward compatibility\n    return {\n        isAnalyzing: isAnalyzing || analysisInProgress !== null,\n        currentAnalysisType: analysisInProgress,\n        progress,\n        lastAnalysisTime,\n        runAnalysis,\n        analyzeFlightPath,\n        analyzeStation,\n        analyzeMerged,\n        checkStationToStationLOS,\n        abortAnalysis,\n        visualizeGrid,\n        analyzeTerrainGrid\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/components/Analyses/Hooks/useGridAnalysis.ts\n");

/***/ }),

/***/ "(ssr)/./src/app/components/Analyses/Services/GridAnalysis/GridAnalysisController.tsx":
/*!**************************************************************************************!*\
  !*** ./src/app/components/Analyses/Services/GridAnalysis/GridAnalysisController.tsx ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Hooks_useGridAnalysis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Hooks/useGridAnalysis */ \"(ssr)/./src/app/components/Analyses/Hooks/useGridAnalysis.ts\");\n/* harmony import */ var _context_LOSAnalysisContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../context/LOSAnalysisContext */ \"(ssr)/./src/app/context/LOSAnalysisContext.tsx\");\n/* harmony import */ var _context_mapcontext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../context/mapcontext */ \"(ssr)/./src/app/context/mapcontext.tsx\");\n/* harmony import */ var _services_LayerManager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../services/LayerManager */ \"(ssr)/./src/app/services/LayerManager.ts\");\n/* harmony import */ var _Types_GridAnalysisTypes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../Types/GridAnalysisTypes */ \"(ssr)/./src/app/components/Analyses/Types/GridAnalysisTypes.ts\");\n/* harmony import */ var _context_MarkerContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../context/MarkerContext */ \"(ssr)/./src/app/context/MarkerContext.tsx\");\n/**\n * GridAnalysisController.tsx\n * \n * Optimized controller for grid-based LOS analysis that coordinates\n * between map, analysis hook, and UI components.\n * \n * Provides:\n * - A ref API for triggering analyses programmatically\n * - Progress tracking\n * - Error handling\n * - Proper resource management\n */ \n\n\n\n\n\n\n/**\n * Adapts analysis results from GridAnalysisTypes to LOSAnalysisContext format\n * This ensures consistent data structure throughout the application\n */ function adaptAnalysisResults(internalResults) {\n    // Create a new object with the basic properties copied\n    const results = {\n        cells: internalResults.cells,\n        stats: internalResults.stats ? {\n            visibleCells: internalResults.stats.visibleCells,\n            totalCells: internalResults.stats.totalCells,\n            averageVisibility: internalResults.stats.averageVisibility,\n            analysisTime: internalResults.stats.analysisTime,\n            // Copy terrainStats if present\n            terrainStats: internalResults.stats.terrainStats\n        } : null,\n        stationLOSResult: internalResults.stationLOSResult\n    };\n    // Convert flightPathVisibility if present\n    if (internalResults.flightPathVisibility) {\n        results.flightPathVisibility = {\n            visibleLength: internalResults.flightPathVisibility.visibleLength,\n            totalLength: internalResults.flightPathVisibility.totalLength,\n            coveragePercentage: internalResults.flightPathVisibility.coveragePercentage\n        };\n        // Convert stationStats from Record to Array format\n        if (internalResults.flightPathVisibility.stationStats) {\n            results.flightPathVisibility.stationStats = Object.entries(internalResults.flightPathVisibility.stationStats).map(([stationId, visibleLength])=>{\n                // Extract station type from ID (assuming format like \"gcs-123\")\n                const stationType = stationId.split('-')[0];\n                const totalLength = internalResults.flightPathVisibility?.totalLength || 0;\n                return {\n                    stationType,\n                    visibleLength,\n                    coveragePercentage: totalLength > 0 ? visibleLength / totalLength * 100 : 0\n                };\n            });\n        }\n    }\n    return results;\n}\n/**\n * Main controller component for grid analysis functionality\n */ const GridAnalysisController = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(({ flightPlan, onProgress, onError, onComplete }, ref)=>{\n    const { map, elevationService } = (0,_context_mapcontext__WEBPACK_IMPORTED_MODULE_3__.useMapContext)();\n    const { setResults, setError, setProgress, setIsAnalyzing, samplingResolution } = (0,_context_LOSAnalysisContext__WEBPACK_IMPORTED_MODULE_2__.useLOSAnalysis)();\n    const [internalProgress, setInternalProgress] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n    // Use the markers collection instead of individual locations\n    const { markers } = (0,_context_MarkerContext__WEBPACK_IMPORTED_MODULE_6__.useMarkersContext)();\n    // Initialize the grid analysis hook with progress tracking\n    const { runAnalysis, abortAnalysis, progress, analyzeTerrainGrid } = (0,_Hooks_useGridAnalysis__WEBPACK_IMPORTED_MODULE_1__.useGridAnalysis)({\n        onProgress: {\n            \"GridAnalysisController.useGridAnalysis\": (value)=>{\n                setInternalProgress(value);\n                if (onProgress) onProgress(value);\n                setProgress(value);\n            }\n        }[\"GridAnalysisController.useGridAnalysis\"]\n    });\n    // Clean up layers when needed\n    const cleanup = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"GridAnalysisController.useCallback[cleanup]\": ()=>{\n            if (!map) return;\n            // Define which layer types to clean up (exclude FLIGHT_PATH)\n            const layersToClean = Object.values(_services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.MAP_LAYERS).filter({\n                \"GridAnalysisController.useCallback[cleanup].layersToClean\": (layerId)=>layerId !== _services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.MAP_LAYERS.FLIGHT_PATH\n            }[\"GridAnalysisController.useCallback[cleanup].layersToClean\"]);\n            // Clean up analysis layers - now need to find layers with dynamic prefixes\n            layersToClean.forEach({\n                \"GridAnalysisController.useCallback[cleanup]\": (layerId)=>{\n                    // Remove exact matches\n                    if (map.getLayer(layerId)) {\n                        _services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.layerManager.removeLayer(layerId);\n                    }\n                    // For marker-specific layers (those with ID pattern like \"gcs-grid-123\")\n                    // we can find and remove them by checking all layers\n                    const layers = map.getStyle().layers || [];\n                    layers.forEach({\n                        \"GridAnalysisController.useCallback[cleanup]\": (layer)=>{\n                            if (layer.id.startsWith(`${layerId}-`)) {\n                                _services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.layerManager.removeLayer(layer.id);\n                            }\n                        }\n                    }[\"GridAnalysisController.useCallback[cleanup]\"]);\n                }\n            }[\"GridAnalysisController.useCallback[cleanup]\"]);\n        }\n    }[\"GridAnalysisController.useCallback[cleanup]\"], [\n        map\n    ]);\n    // Expose methods through the ref\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle)(ref, {\n        \"GridAnalysisController.useImperativeHandle\": ()=>({\n                // Flight path analysis\n                async runFlightPathAnalysis () {\n                    if (!flightPlan) {\n                        const message = 'No flight plan available';\n                        setError(message);\n                        return {\n                            cells: [],\n                            stats: null\n                        }; // Return empty results\n                    }\n                    try {\n                        setIsAnalyzing(true);\n                        cleanup();\n                        // Pass sampling resolution to analysis function\n                        const internalResults = await runAnalysis(_Types_GridAnalysisTypes__WEBPACK_IMPORTED_MODULE_5__.AnalysisType.FLIGHT_PATH, {\n                            flightPlan,\n                            samplingResolution\n                        });\n                        // Convert to context format\n                        const contextResults = adaptAnalysisResults(internalResults);\n                        setResults(contextResults);\n                        if (onComplete) onComplete(contextResults);\n                        return contextResults;\n                    } catch (error) {\n                        const message = error instanceof Error ? error.message : \"Unknown error\";\n                        setError(message);\n                        if (onError) onError(error instanceof Error ? error : new Error(message));\n                        return {\n                            cells: [],\n                            stats: null\n                        }; // Return empty results\n                    } finally{\n                        setIsAnalyzing(false);\n                    }\n                },\n                // Station analysis\n                async runStationAnalysis (options) {\n                    try {\n                        // Validate location\n                        if (!options.location || typeof options.location.lng !== 'number' || typeof options.location.lat !== 'number') {\n                            const errorMsg = `${options.stationType.toUpperCase()} location not set or invalid`;\n                            setError(errorMsg);\n                            throw new Error(errorMsg);\n                        }\n                        setIsAnalyzing(true);\n                        // Create a unique layer ID using marker type and ID\n                        const layerPrefix = options.stationType === 'gcs' ? _services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.MAP_LAYERS.GCS_GRID : options.stationType === 'observer' ? _services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.MAP_LAYERS.OBSERVER_GRID : _services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.MAP_LAYERS.REPEATER_GRID;\n                        const layerId = options.markerId ? `${layerPrefix}-${options.markerId}` : layerPrefix;\n                        // Remove existing layer if present\n                        _services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.layerManager.removeLayer(layerId);\n                        // Run the analysis with the unique layer ID\n                        const internalResults = await runAnalysis(_Types_GridAnalysisTypes__WEBPACK_IMPORTED_MODULE_5__.AnalysisType.STATION, {\n                            ...options,\n                            layerId\n                        });\n                        // Convert to context format\n                        const contextResults = adaptAnalysisResults(internalResults);\n                        setResults(contextResults);\n                        if (onComplete) onComplete(contextResults);\n                        return contextResults;\n                    } catch (error) {\n                        const message = error instanceof Error ? error.message : \"Unknown error\";\n                        setError(message);\n                        if (onError) onError(error instanceof Error ? error : new Error(message));\n                        throw error;\n                    } finally{\n                        setIsAnalyzing(false);\n                    }\n                },\n                // Merged analysis - update to use markers collection\n                async runMergedAnalysis (stations) {\n                    try {\n                        setIsAnalyzing(true);\n                        _services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.layerManager.removeLayer(_services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.MAP_LAYERS.MERGED_VISIBILITY);\n                        // Use the provided stations array directly\n                        const stationsToUse = stations || markers.map({\n                            \"GridAnalysisController.useImperativeHandle\": (marker)=>({\n                                    type: marker.type,\n                                    location: marker.location,\n                                    range: 500,\n                                    elevationOffset: marker.elevationOffset\n                                })\n                        }[\"GridAnalysisController.useImperativeHandle\"]);\n                        const internalResults = await runAnalysis(_Types_GridAnalysisTypes__WEBPACK_IMPORTED_MODULE_5__.AnalysisType.MERGED, {\n                            stations: stationsToUse\n                        });\n                        // Convert to context format\n                        const contextResults = adaptAnalysisResults(internalResults);\n                        setResults(contextResults);\n                        if (onComplete) onComplete(contextResults);\n                        return contextResults;\n                    } catch (error) {\n                        const message = error instanceof Error ? error.message : \"Unknown error\";\n                        setError(message);\n                        if (onError) onError(error instanceof Error ? error : new Error(message));\n                        throw error;\n                    } finally{\n                        setIsAnalyzing(false);\n                    }\n                },\n                // Station-to-station LOS check - update to use marker IDs\n                async checkStationToStationLOS (sourceMarkerId, targetMarkerId) {\n                    try {\n                        setIsAnalyzing(true);\n                        // Find markers by ID\n                        const sourceMarker = markers.find({\n                            \"GridAnalysisController.useImperativeHandle.sourceMarker\": (m)=>m.id === sourceMarkerId\n                        }[\"GridAnalysisController.useImperativeHandle.sourceMarker\"]);\n                        const targetMarker = markers.find({\n                            \"GridAnalysisController.useImperativeHandle.targetMarker\": (m)=>m.id === targetMarkerId\n                        }[\"GridAnalysisController.useImperativeHandle.targetMarker\"]);\n                        if (!sourceMarker || !targetMarker) {\n                            throw new Error(\"One or both markers not found\");\n                        }\n                        // Create clean objects with only the needed properties\n                        // This avoids passing full markers which might have circular references\n                        const sourceStationData = {\n                            type: sourceMarker.type,\n                            location: {\n                                ...sourceMarker.location\n                            },\n                            elevationOffset: sourceMarker.elevationOffset\n                        };\n                        const targetStationData = {\n                            type: targetMarker.type,\n                            location: {\n                                ...targetMarker.location\n                            },\n                            elevationOffset: targetMarker.elevationOffset\n                        };\n                        const losData = await runAnalysis(_Types_GridAnalysisTypes__WEBPACK_IMPORTED_MODULE_5__.AnalysisType.STATION_TO_STATION, {\n                            sourceStation: sourceStationData,\n                            targetStation: targetStationData\n                        });\n                        // Create internal results format\n                        const internalResults = {\n                            cells: [],\n                            stats: {\n                                visibleCells: 0,\n                                totalCells: 0,\n                                averageVisibility: losData.stationLOSResult?.clear ? 100 : 0,\n                                analysisTime: 0\n                            },\n                            stationLOSResult: losData.stationLOSResult\n                        };\n                        // Convert to context format\n                        const contextResults = adaptAnalysisResults(internalResults);\n                        setResults(contextResults);\n                        if (onComplete) onComplete(contextResults);\n                        return {\n                            result: losData.stationLOSResult,\n                            profile: losData.profile || []\n                        };\n                    } catch (error) {\n                        const message = error instanceof Error ? error.message : \"Unknown error\";\n                        setError(message);\n                        if (onError) onError(error instanceof Error ? error : new Error(message));\n                        throw error;\n                    } finally{\n                        setIsAnalyzing(false);\n                    }\n                },\n                // Flight path visibility analysis - update to use markers collection\n                async runFlightPathVisibilityAnalysis (options = {}) {\n                    if (!flightPlan) {\n                        const message = 'No flight plan available';\n                        setError(message);\n                        return {\n                            cells: [],\n                            stats: null\n                        }; // Return empty results\n                    }\n                    try {\n                        setIsAnalyzing(true);\n                        // Remove previous visibility layer\n                        _services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.layerManager.removeLayer(_services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.MAP_LAYERS.FLIGHT_PATH_VISIBILITY);\n                        // Import the visibility analysis dynamically (only when needed)\n                        const { analyzeFlightPathVisibility, addVisibilityLayer } = await __webpack_require__.e(/*! import() */ \"_ssr_src_app_components_Analyses_LOSAnalyses_Utils_FlightPathVisibilityEngine_ts\").then(__webpack_require__.bind(__webpack_require__, /*! ../../LOSAnalyses/Utils/FlightPathVisibilityEngine */ \"(ssr)/./src/app/components/Analyses/LOSAnalyses/Utils/FlightPathVisibilityEngine.ts\"));\n                        // Filter markers if markerIds is provided\n                        const markersToUse = options.markerIds ? markers.filter({\n                            \"GridAnalysisController.useImperativeHandle\": (marker)=>options.markerIds?.includes(marker.id)\n                        }[\"GridAnalysisController.useImperativeHandle\"]) : markers;\n                        // Run the analysis with selected markers\n                        const visibilityResults = await analyzeFlightPathVisibility(map, flightPlan, markersToUse, elevationService, {\n                            sampleInterval: options.sampleInterval || 10,\n                            minimumOffset: options.minimumOffset || 1,\n                            onProgress: {\n                                \"GridAnalysisController.useImperativeHandle\": (progress)=>{\n                                    setProgress(progress);\n                                    if (onProgress) onProgress(progress);\n                                }\n                            }[\"GridAnalysisController.useImperativeHandle\"]\n                        });\n                        // Always add the visibility layer when analysis completes\n                        if (map) {\n                            // First ensure any old layer is removed\n                            _services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.layerManager.removeLayer(_services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.MAP_LAYERS.FLIGHT_PATH_VISIBILITY);\n                            // Add the new visibility layer\n                            addVisibilityLayer(map, visibilityResults.segments);\n                            // Apply visibility based on option (visible by default)\n                            _services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.layerManager.setLayerVisibility(_services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.MAP_LAYERS.FLIGHT_PATH_VISIBILITY, options.showLayer !== false);\n                        }\n                        // Create the internal results object\n                        const internalResults = {\n                            cells: [],\n                            stats: {\n                                visibleCells: 0,\n                                totalCells: 0,\n                                averageVisibility: visibilityResults.stats.coveragePercentage,\n                                analysisTime: visibilityResults.stats.analysisTime\n                            },\n                            flightPathVisibility: {\n                                visibleLength: visibilityResults.stats.visibleLength,\n                                totalLength: visibilityResults.stats.totalLength,\n                                coveragePercentage: visibilityResults.stats.coveragePercentage,\n                                // Convert the array-based stats to a Record format for internal use\n                                stationStats: visibilityResults.stats.stationStats?.reduce({\n                                    \"GridAnalysisController.useImperativeHandle\": (acc, stat)=>{\n                                        acc[`${stat.stationType}-${Math.random().toString(36).substr(2, 9)}`] = stat.visibleLength;\n                                        return acc;\n                                    }\n                                }[\"GridAnalysisController.useImperativeHandle\"], {})\n                            }\n                        };\n                        // Convert to context format\n                        const contextResults = adaptAnalysisResults(internalResults);\n                        setResults(contextResults);\n                        if (onComplete) onComplete(contextResults);\n                        return contextResults;\n                    } catch (error) {\n                        const message = error instanceof Error ? error.message : \"Unknown error\";\n                        setError(message);\n                        if (onError) onError(error instanceof Error ? error : new Error(message));\n                        return {\n                            cells: [],\n                            stats: null\n                        }; // Return empty results\n                    } finally{\n                        setIsAnalyzing(false);\n                        setProgress(0);\n                    }\n                },\n                /**\n       * Analyzes a grid of terrain cells to generate elevation statistics\n       * @param gridCells - The grid cells to analyze\n       * @param options - Analysis options including reference altitude and progress tracking\n       * @returns Analysis results with terrain statistics\n       */ async analyzeTerrainGrid (gridCells, options) {\n                    try {\n                        setIsAnalyzing(true);\n                        const startTime = performance.now();\n                        // The hook's analyzeTerrainGrid expects a number for referenceAltitude, not an object\n                        // Just pass the referenceAltitude value directly\n                        const result = await analyzeTerrainGrid(gridCells, options?.referenceAltitude || 120);\n                        // For the progress tracking, we'll need to add a listener in the useEffect\n                        if (options?.onProgress || onProgress) {\n                            const progressHandler = {\n                                \"GridAnalysisController.useImperativeHandle.progressHandler\": (progress)=>{\n                                    if (options?.onProgress) {\n                                        return options.onProgress(progress) || false;\n                                    }\n                                    if (onProgress) {\n                                        onProgress(progress);\n                                    }\n                                    return false;\n                                }\n                            }[\"GridAnalysisController.useImperativeHandle.progressHandler\"];\n                            // Register progress handling here if needed\n                            setProgress(0); // Start at 0%\n                        }\n                        // Create internal results format\n                        const internalResults = {\n                            cells: gridCells,\n                            stats: {\n                                visibleCells: gridCells.length,\n                                totalCells: gridCells.length,\n                                averageVisibility: 100,\n                                analysisTime: performance.now() - startTime,\n                                terrainStats: {\n                                    highestElevation: result.highestElevation,\n                                    lowestElevation: result.lowestElevation,\n                                    averageElevation: result.averageElevation,\n                                    elevationDistribution: result.elevationDistribution,\n                                    sampleElevations: result.elevations // Include sample elevations\n                                }\n                            }\n                        };\n                        // Convert to context format\n                        const contextResults = adaptAnalysisResults(internalResults);\n                        // Set results and notify completion\n                        setResults(contextResults);\n                        if (onComplete) onComplete(contextResults);\n                        return contextResults;\n                    } catch (error) {\n                        const message = error instanceof Error ? error.message : \"Unknown error\";\n                        setError(message);\n                        if (onError) onError(error instanceof Error ? error : new Error(message));\n                        throw error;\n                    } finally{\n                        setIsAnalyzing(false);\n                    }\n                },\n                // Abort any running analysis\n                abortAnalysis () {\n                    abortAnalysis();\n                }\n            })\n    }[\"GridAnalysisController.useImperativeHandle\"], [\n        map,\n        flightPlan,\n        runAnalysis,\n        abortAnalysis,\n        cleanup,\n        setResults,\n        setError,\n        setIsAnalyzing,\n        onComplete,\n        onError,\n        elevationService,\n        markers,\n        samplingResolution,\n        analyzeTerrainGrid,\n        onProgress,\n        setProgress\n    ]);\n    // The controller doesn't render anything, it just manages state\n    return null;\n});\nGridAnalysisController.displayName = 'GridAnalysisController';\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (GridAnalysisController);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/components/Analyses/Services/GridAnalysis/GridAnalysisController.tsx\n");

/***/ }),

/***/ "(ssr)/./src/app/components/Analyses/Types/GridAnalysisTypes.ts":
/*!****************************************************************!*\
  !*** ./src/app/components/Analyses/Types/GridAnalysisTypes.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AnalysisType: () => (/* binding */ AnalysisType),\n/* harmony export */   convertAOCellToAnalysisCell: () => (/* binding */ convertAOCellToAnalysisCell),\n/* harmony export */   convertAnalysisCellToAOCell: () => (/* binding */ convertAnalysisCellToAOCell),\n/* harmony export */   createGridCell: () => (/* binding */ createGridCell)\n/* harmony export */ });\n// src/app/components/Analyses/Types/GridAnalysisTypes.ts\n/**\n * GridAnalysisTypes.ts\n *\n * UNIFIED type definitions for the grid analysis system.\n * This file consolidates all types to prevent conflicts between\n * Area of Operations (AO) and Line of Sight (LOS) analysis systems.\n *\n * These types are used by:\n * - useGridAnalysis hook\n * - Analysis module implementations  \n * - UI components displaying analysis results\n * - Area of Operations terrain grids\n * - LayerManager for map display\n */ // Basic coordinate types\n// Analysis types\nvar AnalysisType = /*#__PURE__*/ function(AnalysisType) {\n    AnalysisType[\"FLIGHT_PATH\"] = \"flight_path\";\n    AnalysisType[\"STATION\"] = \"station\";\n    AnalysisType[\"MERGED\"] = \"merged\";\n    AnalysisType[\"STATION_TO_STATION\"] = \"station_to_station\";\n    AnalysisType[\"FLIGHT_PATH_VISIBILITY\"] = \"flight_path_visibility\";\n    AnalysisType[\"TERRAIN\"] = \"terrain\"; // Added new terrain analysis type\n    return AnalysisType;\n}({});\n// HELPER FUNCTIONS for backward compatibility\n/**\n * Converts AO-style GridCell to unified GridCell format\n * Used when AO system passes terrain grids to analysis system\n */ function convertAOCellToAnalysisCell(aoCell) {\n    return {\n        id: aoCell.id,\n        geometry: aoCell.geometry,\n        properties: {\n            // Set default analysis values\n            visibility: 0,\n            fullyVisible: false,\n            lastAnalyzed: Date.now(),\n            // Copy elevation from AO cell (now required, not optional)\n            elevation: aoCell.properties.elevation,\n            // Copy any additional properties\n            ...aoCell.properties\n        }\n    };\n}\n/**\n * Converts unified GridCell back to AO-style format\n * Used when analysis system returns data to AO system\n */ function convertAnalysisCellToAOCell(analysisCell) {\n    return {\n        id: analysisCell.id,\n        geometry: analysisCell.geometry,\n        properties: {\n            elevation: analysisCell.properties.elevation,\n            // Copy additional properties except analysis-specific ones\n            ...Object.fromEntries(Object.entries(analysisCell.properties).filter(([key])=>![\n                    'visibility',\n                    'fullyVisible',\n                    'lastAnalyzed',\n                    'visibleStationCount'\n                ].includes(key)))\n        }\n    };\n}\n/**\n * Creates a new GridCell with default analysis properties\n * Used when generating fresh grid cells for analysis\n */ function createGridCell(id, geometry, elevation, additionalProperties = {}) {\n    return {\n        id,\n        geometry,\n        properties: {\n            visibility: 0,\n            fullyVisible: false,\n            lastAnalyzed: Date.now(),\n            elevation,\n            ...additionalProperties\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/components/Analyses/Types/GridAnalysisTypes.ts\n");

/***/ }),

/***/ "(ssr)/./src/app/components/Analyses/Utils/GridAnalysisCore.ts":
/*!***************************************************************!*\
  !*** ./src/app/components/Analyses/Utils/GridAnalysisCore.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analyzeTerrainGrid: () => (/* binding */ analyzeTerrainGrid),\n/* harmony export */   batchQueryElevations: () => (/* binding */ batchQueryElevations),\n/* harmony export */   checkFlightPathLOS: () => (/* binding */ checkFlightPathLOS),\n/* harmony export */   checkLineOfSight: () => (/* binding */ checkLineOfSight),\n/* harmony export */   checkStationLOS: () => (/* binding */ checkStationLOS),\n/* harmony export */   checkStationToLocationLOS: () => (/* binding */ checkStationToLocationLOS),\n/* harmony export */   checkStationToStationLOS: () => (/* binding */ checkStationToStationLOS),\n/* harmony export */   createError: () => (/* binding */ createError),\n/* harmony export */   generateCombinedBoundingBox: () => (/* binding */ generateCombinedBoundingBox),\n/* harmony export */   generateGrid: () => (/* binding */ generateGrid),\n/* harmony export */   getLOSProfile: () => (/* binding */ getLOSProfile),\n/* harmony export */   isValidBounds: () => (/* binding */ isValidBounds),\n/* harmony export */   processFlightPath: () => (/* binding */ processFlightPath),\n/* harmony export */   queryElevation: () => (/* binding */ queryElevation)\n/* harmony export */ });\n/* harmony import */ var _turf_turf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @turf/turf */ \"(ssr)/./node_modules/@turf/helpers/dist/esm/index.js\");\n/* harmony import */ var _turf_turf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @turf/turf */ \"(ssr)/./node_modules/@turf/buffer/dist/esm/index.js\");\n/* harmony import */ var _turf_turf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @turf/turf */ \"(ssr)/./node_modules/@turf/bbox/dist/esm/index.js\");\n/* harmony import */ var _turf_turf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @turf/turf */ \"(ssr)/./node_modules/@turf/point-grid/dist/esm/index.js\");\n/* harmony import */ var _turf_turf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @turf/turf */ \"(ssr)/./node_modules/@turf/circle/dist/esm/index.js\");\n/* harmony import */ var _turf_turf__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @turf/turf */ \"(ssr)/./node_modules/@turf/distance/dist/esm/index.js\");\n/* harmony import */ var _hooks_useFlightPathSampling__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../hooks/useFlightPathSampling */ \"(ssr)/./src/app/hooks/useFlightPathSampling.ts\");\n/**\n * GridAnalysisCore.ts\n * \n * High-performance core engine for Line of Sight (LOS) analysis.\n * Provides optimized implementations for grid generation, elevation queries,\n * and visibility calculations with minimal overhead.\n * The GridAnalysisCore.ts that I've just provided will replace the following existing files:\ngridAnalysisUtils.ts (completely replaced)\nParts of useGridAnalysis.ts (specifically the core analysis algorithms)\n */ \n\n// Simple LRU cache for elevation data\nclass ElevationCache {\n    constructor(maxSize = 10000){\n        this.cache = new Map();\n        this.maxSize = maxSize;\n    }\n    getKey(lon, lat) {\n        return `${lon.toFixed(4)}|${lat.toFixed(4)}`;\n    }\n    get(lon, lat) {\n        return this.cache.get(this.getKey(lon, lat));\n    }\n    set(lon, lat, elevation) {\n        const key = this.getKey(lon, lat);\n        this.cache.set(key, elevation);\n        // Simple LRU: remove oldest entry if cache is full\n        if (this.cache.size > this.maxSize) {\n            const firstKey = this.cache.keys().next().value;\n            if (firstKey) this.cache.delete(firstKey);\n        }\n    }\n    clear() {\n        this.cache.clear();\n    }\n}\n// Shared cache instance\nconst elevationCache = new ElevationCache();\n/**\n * Creates an error with additional metadata\n */ function createError(message, code, details) {\n    const error = new Error(message);\n    error.code = code;\n    error.details = details;\n    return error;\n}\n/**\n * Optimized terrain elevation query function\n */ async function queryElevation(map, coordinates, elevationService) {\n    const [lon, lat] = coordinates;\n    // Check cache first for fastest response\n    const cachedElevation = elevationCache.get(lon, lat);\n    if (cachedElevation !== undefined) {\n        return cachedElevation;\n    }\n    let elevation = null;\n    // Try elevation service if available\n    if (elevationService) {\n        try {\n            elevation = await elevationService.getElevation(lon, lat);\n            if (elevation !== null && elevation !== undefined && elevation !== 0) {\n                elevationCache.set(lon, lat, elevation);\n                return elevation;\n            }\n        } catch (e) {\n        // Fall through to direct query\n        }\n    }\n    // Direct map query as fallback\n    try {\n        elevation = map.queryTerrainElevation(coordinates) ?? null;\n        if (elevation !== null && elevation !== undefined) {\n            elevationCache.set(lon, lat, elevation);\n            return elevation;\n        }\n    } catch (e) {\n        console.warn(`Terrain query error at [${lon}, ${lat}]:`, e);\n    }\n    // Last resort fallback\n    return 0;\n}\n/**\n * Optimized batch elevation query\n */ async function batchQueryElevations(map, coordinates, elevationService) {\n    if (elevationService && typeof elevationService.batchGetElevations === 'function') {\n        try {\n            return await elevationService.batchGetElevations(coordinates);\n        } catch (e) {\n            console.warn('Batch elevation query failed, falling back to individual queries:', e);\n        }\n    }\n    // Process in larger batches for better performance\n    const BATCH_SIZE = 100;\n    const results = [];\n    for(let i = 0; i < coordinates.length; i += BATCH_SIZE){\n        const batch = coordinates.slice(i, i + BATCH_SIZE);\n        const batchResults = await Promise.all(batch.map((coords)=>queryElevation(map, coords, elevationService)));\n        results.push(...batchResults);\n    }\n    return results;\n}\n/**\n * Checks if bounding box coordinates are valid\n */ function isValidBounds(bounds) {\n    return bounds.length === 4 && bounds[0] >= -180 && bounds[1] >= -90 && bounds[2] <= 180 && bounds[3] <= 90;\n}\n/**\n * Generates a grid of cells for analysis.\n * Optimized for performance with batched elevation queries.\n */ async function generateGrid(map, options) {\n    const { center, range, flightPath, elosGridRange, gridSize, elevationService } = options;\n    const startTime = performance.now();\n    try {\n        let grid;\n        // Marker-based grid generation\n        if (center && range) {\n            if (typeof range !== 'number' || range <= 0 || isNaN(range)) {\n                throw createError('Invalid range for marker grid', 'INVALID_INPUT');\n            }\n            const point = _turf_turf__WEBPACK_IMPORTED_MODULE_1__.point(center);\n            const buffer = _turf_turf__WEBPACK_IMPORTED_MODULE_2__.buffer(point, range, {\n                units: 'meters'\n            });\n            if (!buffer) throw createError('Failed to create buffer', 'INVALID_INPUT');\n            const bounds = _turf_turf__WEBPACK_IMPORTED_MODULE_3__.bbox(buffer);\n            if (!isValidBounds(bounds)) {\n                throw createError('Invalid bounds for marker grid', 'GRID_GENERATION');\n            }\n            grid = _turf_turf__WEBPACK_IMPORTED_MODULE_4__.pointGrid(bounds, gridSize, {\n                units: 'meters',\n                mask: buffer\n            });\n            console.log(`Generated marker grid with ${grid.features.length} points`);\n        } else if (flightPath && elosGridRange) {\n            if (typeof elosGridRange !== 'number' || elosGridRange <= 0 || isNaN(elosGridRange)) {\n                throw createError('Invalid elosGridRange', 'INVALID_INPUT');\n            }\n            const bounds = _turf_turf__WEBPACK_IMPORTED_MODULE_3__.bbox(flightPath);\n            const margin = _turf_turf__WEBPACK_IMPORTED_MODULE_1__.lengthToDegrees(elosGridRange, 'meters');\n            const extendedBounds = [\n                bounds[0] - margin,\n                bounds[1] - margin,\n                bounds[2] + margin,\n                bounds[3] + margin\n            ];\n            if (!isValidBounds(extendedBounds)) {\n                throw createError('Invalid extended bounds', 'GRID_GENERATION');\n            }\n            const maskOptions = {\n                units: 'meters',\n                mask: _turf_turf__WEBPACK_IMPORTED_MODULE_2__.buffer(flightPath, elosGridRange, {\n                    units: 'meters'\n                })\n            };\n            grid = _turf_turf__WEBPACK_IMPORTED_MODULE_4__.pointGrid(extendedBounds, gridSize, maskOptions);\n            console.log(`Generated flight path grid with ${grid.features.length} points`);\n        } else {\n            throw createError('Invalid grid generation parameters', 'INVALID_INPUT');\n        }\n        // Extract coordinates for batch elevation query\n        const gridCoordinates = grid.features.map((feature)=>feature.geometry.coordinates);\n        // Batch query elevations\n        console.time('GridElevationQuery');\n        const elevations = await batchQueryElevations(map, gridCoordinates, elevationService);\n        console.timeEnd('GridElevationQuery');\n        // Create cells with elevations\n        const cells = grid.features.map((point, index)=>{\n            const cell = _turf_turf__WEBPACK_IMPORTED_MODULE_5__.circle(point.geometry.coordinates, gridSize / 2, {\n                units: 'meters',\n                steps: 4\n            });\n            return {\n                id: `cell-${index}`,\n                geometry: cell.geometry,\n                properties: {\n                    visibility: 0,\n                    fullyVisible: false,\n                    elevation: elevations[index],\n                    lastAnalyzed: Date.now()\n                }\n            };\n        });\n        console.log(`Grid generation completed in ${performance.now() - startTime}ms`);\n        return cells;\n    } catch (error) {\n        console.error('Error in generateGrid:', error);\n        throw createError('Failed to generate analysis grid', 'GRID_GENERATION', error);\n    }\n}\n/**\n * Processes the flight path with regular sampling\n * @param map - Mapbox map instance\n * @param flightPath - Flight path feature\n * @param samplingResolution - Distance between samples in meters\n * @param elevationService - Optional elevation service for terrain querying\n * @param onProgress - Optional progress callback\n * @returns Array of sampled points along the flight path\n */ async function processFlightPath(map, flightPath, samplingResolution = 10, elevationService, onProgress) {\n    // Extract the LineString from the flight path feature\n    const lineString = flightPath.geometry;\n    // Sample the flight path at the specified resolution\n    const sampledPoints = await (0,_hooks_useFlightPathSampling__WEBPACK_IMPORTED_MODULE_0__.sampleFlightPath)(lineString, {\n        resolution: samplingResolution,\n        progressCallback: onProgress ? (progress)=>{\n            onProgress(progress * 0.5); // Use half of progress for sampling\n            return false; // Never abort from here\n        } : undefined\n    });\n    // Query terrain elevations for all sampled points if needed\n    if (onProgress) onProgress(50); // Mark sampling as complete\n    // Extract and return the 3D coordinates\n    const sampledCoordinates = sampledPoints.map((point)=>point.position);\n    if (onProgress) onProgress(100); // Mark processing as complete\n    return sampledCoordinates;\n}\n/**\n * Checks line of sight between a source point and a target point.\n * Optimized version with early termination.\n */ async function checkLineOfSight(map, sourcePoint, targetPoint, options = {}) {\n    const [sourceLng, sourceLat, sourceAlt] = sourcePoint;\n    const [targetLng, targetLat, targetAlt] = targetPoint;\n    // Validate inputs\n    if (sourcePoint.some((v)=>typeof v !== 'number' || isNaN(v)) || targetPoint.some((v)=>typeof v !== 'number' || isNaN(v))) {\n        console.error('Invalid coordinates:', {\n            sourcePoint,\n            targetPoint\n        });\n        return false;\n    }\n    const minimumOffset = options.minimumOffset ?? 1;\n    const distance = _turf_turf__WEBPACK_IMPORTED_MODULE_6__.distance([\n        sourceLng,\n        sourceLat\n    ], [\n        targetLng,\n        targetLat\n    ], {\n        units: 'meters'\n    });\n    // Adaptive sampling based on distance\n    const sampleCount = options.sampleCount ?? Math.min(Math.max(5, Math.ceil(distance / 50)), 20);\n    // Add the minimum offset to target altitude\n    const adjustedTargetAlt = targetAlt + minimumOffset;\n    // Local elevation cache for this specific LOS check\n    const localCache = new Map();\n    // Get elevation with local caching\n    const getElevation = async (lng, lat)=>{\n        const key = `${lng.toFixed(6)}|${lat.toFixed(6)}`;\n        if (localCache.has(key)) return localCache.get(key);\n        const elev = await queryElevation(map, [\n            lng,\n            lat\n        ], options.elevationService);\n        localCache.set(key, elev);\n        return elev;\n    };\n    // Check each sample point along the line\n    for(let i = 1; i < sampleCount; i++){\n        const fraction = i / sampleCount;\n        // Interpolate position\n        const lng = sourceLng + fraction * (targetLng - sourceLng);\n        const lat = sourceLat + fraction * (targetLat - sourceLat);\n        // Calculate height along the line of sight at this point\n        const losHeight = sourceAlt + fraction * (adjustedTargetAlt - sourceAlt);\n        // Get terrain height at this point\n        const terrainHeight = await getElevation(lng, lat);\n        // If terrain is higher than LOS, the line is blocked\n        if (terrainHeight > losHeight) {\n            return false;\n        }\n    }\n    // If we've checked all sample points and none block the line, we have LOS\n    return true;\n}\n/**\n * Checks LOS for Station Analysis from a station to a single grid cell.\n */ async function checkStationLOS(map, sourcePoint, targetPoint, options = {}) {\n    return checkLineOfSight(map, sourcePoint, targetPoint, options);\n}\n/**\n * Get LOS profile data between two points\n */ async function getLOSProfile(map, sourcePoint, targetPoint, options = {}) {\n    const [sourceLng, sourceLat, sourceAlt] = sourcePoint;\n    const [targetLng, targetLat, targetAlt] = targetPoint;\n    const minimumOffset = options.minimumOffset ?? 3;\n    const point1 = _turf_turf__WEBPACK_IMPORTED_MODULE_1__.point([\n        sourceLng,\n        sourceLat\n    ]);\n    const point2 = _turf_turf__WEBPACK_IMPORTED_MODULE_1__.point([\n        targetLng,\n        targetLat\n    ]);\n    const totalDistance = _turf_turf__WEBPACK_IMPORTED_MODULE_6__.distance(point1, point2, {\n        units: 'meters'\n    });\n    const sampleDistance = options.sampleDistance ?? 10;\n    const sampleCount = Math.ceil(totalDistance / sampleDistance);\n    const profile = [];\n    let isObstructed = false;\n    // Batch coordinates for efficient querying\n    const sampleCoords = [];\n    for(let i = 0; i <= sampleCount; i++){\n        const fraction = i / sampleCount;\n        const lng = sourceLng + fraction * (targetLng - sourceLng);\n        const lat = sourceLat + fraction * (targetLat - sourceLat);\n        sampleCoords.push([\n            lng,\n            lat\n        ]);\n    }\n    // Batch query elevations\n    const terrainElevations = await batchQueryElevations(map, sampleCoords, options.elevationService);\n    // Create profile points\n    for(let i = 0; i <= sampleCount; i++){\n        const fraction = i / sampleCount;\n        const losAltitude = sourceAlt - (sourceAlt - (targetAlt + minimumOffset)) * fraction;\n        const terrain = terrainElevations[i];\n        profile.push({\n            distance: fraction * totalDistance,\n            terrain,\n            los: losAltitude\n        });\n        if (terrain > losAltitude) {\n            isObstructed = true;\n        }\n    }\n    // debuggin Add at the end of the getLOSProfile function before returning\n    console.log('Generated profile:', {\n        pointCount: profile.length,\n        clear: !isObstructed,\n        samplePoints: profile.slice(0, 3)\n    });\n    return {\n        profile,\n        clear: !isObstructed\n    };\n}\n/**\n * Checks visibility along flight path from a single location\n * Only considers flight path points within specified grid range\n */ async function checkFlightPathLOS(map, sourcePoint, flightCoordinates, options = {}) {\n    const { sampleCount = 20, minimumOffset = 1, altitudeMode = \"absolute\", gridRange = 500, sampledCoordinates// This will be used if provided\n     } = options;\n    // Use provided sampled coordinates if available, otherwise use raw coordinates\n    const coordinatesToCheck = sampledCoordinates || flightCoordinates;\n    if (!Array.isArray(sourcePoint) || sourcePoint.length !== 3 || sourcePoint.some((v)=>typeof v !== 'number' || isNaN(v))) {\n        throw createError('Source point must be a valid [lon, lat, alt] array', 'INVALID_INPUT');\n    }\n    if (!Array.isArray(coordinatesToCheck) || !coordinatesToCheck.every((point)=>Array.isArray(point) && point.length === 3 && point.every((v)=>typeof v === 'number' && !isNaN(v)))) {\n        throw createError('Flight coordinates must be an array of [lon, lat, alt] arrays', 'INVALID_INPUT');\n    }\n    // Filter flight coordinates by distance to only check relevant ones\n    const relevantCoordinates = [];\n    for (const fpPoint of coordinatesToCheck){\n        // Calculate distance from cell to flight point\n        const distance = _turf_turf__WEBPACK_IMPORTED_MODULE_6__.distance([\n            sourcePoint[0],\n            sourcePoint[1]\n        ], [\n            fpPoint[0],\n            fpPoint[1]\n        ], {\n            units: 'meters'\n        });\n        // Only consider points within the grid range\n        if (distance <= gridRange) {\n            relevantCoordinates.push(fpPoint);\n        }\n    }\n    // If no relevant flight coordinates, cell is not visible\n    if (relevantCoordinates.length === 0) {\n        return 0;\n    }\n    let visibleCount = 0;\n    // Check visibility only for relevant coordinates\n    for (const targetPoint of relevantCoordinates){\n        try {\n            if (altitudeMode === \"terrain\" || altitudeMode === \"relative\") {\n                const terrainElevation = await queryElevation(map, [\n                    targetPoint[0],\n                    targetPoint[1]\n                ], options.elevationService);\n                const adjustedTargetPoint = [\n                    targetPoint[0],\n                    targetPoint[1],\n                    terrainElevation + targetPoint[2]\n                ];\n                const isVisible = await checkLineOfSight(map, sourcePoint, adjustedTargetPoint, {\n                    sampleCount,\n                    minimumOffset,\n                    elevationService: options.elevationService\n                });\n                if (isVisible) visibleCount++;\n            } else {\n                const isVisible = await checkLineOfSight(map, sourcePoint, targetPoint, {\n                    sampleCount,\n                    minimumOffset,\n                    elevationService: options.elevationService\n                });\n                if (isVisible) visibleCount++;\n            }\n        } catch (e) {\n            console.warn('Error checking LOS for point:', targetPoint, e);\n        // Continue to next point\n        }\n    }\n    const visibilityPercentage = relevantCoordinates.length > 0 ? visibleCount / relevantCoordinates.length * 100 : 0;\n    return visibilityPercentage;\n}\n/**\n * Generate a combined bounding box for multiple stations\n */ function generateCombinedBoundingBox(stations) {\n    if (!stations.length) {\n        throw new Error('No stations provided for analysis');\n    }\n    const bboxes = stations.map((station)=>{\n        const point = _turf_turf__WEBPACK_IMPORTED_MODULE_1__.point([\n            station.location.lng,\n            station.location.lat\n        ]);\n        const buffer = _turf_turf__WEBPACK_IMPORTED_MODULE_2__.buffer(point, station.range, {\n            units: 'meters'\n        });\n        return _turf_turf__WEBPACK_IMPORTED_MODULE_3__.bbox(buffer);\n    });\n    const combinedBbox = [\n        180,\n        90,\n        -180,\n        -90\n    ];\n    bboxes.forEach((bbox)=>{\n        combinedBbox[0] = Math.min(combinedBbox[0], bbox[0]);\n        combinedBbox[1] = Math.min(combinedBbox[1], bbox[1]);\n        combinedBbox[2] = Math.max(combinedBbox[2], bbox[2]);\n        combinedBbox[3] = Math.max(combinedBbox[3], bbox[3]);\n    });\n    return combinedBbox;\n}\n/**\n * Checks if station has line of sight to all provided locations\n */ async function checkStationToLocationLOS(map, stationLocation, stationElevationOffset, targetLocations, options = {}) {\n    if (!stationLocation || typeof stationLocation.lng !== 'number' || typeof stationLocation.lat !== 'number') {\n        throw createError('Invalid station location', 'INVALID_INPUT');\n    }\n    if (!targetLocations || !targetLocations.length) {\n        return {\n            visibleLocations: [],\n            visibilityPercentage: 0\n        };\n    }\n    // Get station elevation if not available\n    const stationElevation = stationLocation.elevation ?? await queryElevation(map, [\n        stationLocation.lng,\n        stationLocation.lat\n    ], options.elevationService);\n    const stationPoint = [\n        stationLocation.lng,\n        stationLocation.lat,\n        stationElevation + stationElevationOffset\n    ];\n    const visibleLocations = [];\n    // Check visibility to each target location\n    for (const targetLocation of targetLocations){\n        try {\n            if (!targetLocation || typeof targetLocation.lng !== 'number' || typeof targetLocation.lat !== 'number') {\n                continue; // Skip invalid locations\n            }\n            // Get target elevation if not available\n            const targetElevation = targetLocation.elevation ?? await queryElevation(map, [\n                targetLocation.lng,\n                targetLocation.lat\n            ], options.elevationService);\n            const targetPoint = [\n                targetLocation.lng,\n                targetLocation.lat,\n                targetElevation\n            ];\n            const isVisible = await checkLineOfSight(map, stationPoint, targetPoint, {\n                elevationService: options.elevationService\n            });\n            if (isVisible) {\n                visibleLocations.push(targetLocation);\n            }\n        } catch (e) {\n            console.warn('Error checking LOS to location:', targetLocation, e);\n        }\n    }\n    const visibilityPercentage = targetLocations.length > 0 ? visibleLocations.length / targetLocations.length * 100 : 0;\n    return {\n        visibleLocations,\n        visibilityPercentage\n    };\n}\n/**\n * Checks line of sight between two stations\n */ async function checkStationToStationLOS(map, sourceStation, targetStation, options = {}) {\n    if (!sourceStation.location || !targetStation.location || typeof sourceStation.location.lng !== 'number' || typeof sourceStation.location.lat !== 'number' || typeof targetStation.location.lng !== 'number' || typeof targetStation.location.lat !== 'number') {\n        throw createError('Both station locations must be set and valid', 'INVALID_INPUT');\n    }\n    // Get source station elevation if not available\n    const sourceElevation = sourceStation.location.elevation ?? await queryElevation(map, [\n        sourceStation.location.lng,\n        sourceStation.location.lat\n    ], options.elevationService);\n    // Get target station elevation if not available\n    const targetElevation = targetStation.location.elevation ?? await queryElevation(map, [\n        targetStation.location.lng,\n        targetStation.location.lat\n    ], options.elevationService);\n    const sourcePoint = [\n        sourceStation.location.lng,\n        sourceStation.location.lat,\n        sourceElevation + sourceStation.elevationOffset\n    ];\n    const targetPoint = [\n        targetStation.location.lng,\n        targetStation.location.lat,\n        targetElevation + targetStation.elevationOffset\n    ];\n    const { profile, clear } = await getLOSProfile(map, sourcePoint, targetPoint, {\n        sampleDistance: 10,\n        minimumOffset: 3,\n        elevationService: options.elevationService\n    });\n    let obstructionFraction = null;\n    let obstructionDistance = null;\n    if (!clear) {\n        for(let i = 0; i < profile.length; i++){\n            if (profile[i].terrain > profile[i].los) {\n                obstructionFraction = i / (profile.length - 1);\n                obstructionDistance = profile[i].distance;\n                break;\n            }\n        }\n    }\n    const result = {\n        clear,\n        obstructionFraction: obstructionFraction ?? undefined,\n        obstructionDistance: obstructionDistance ?? undefined\n    };\n    return {\n        result,\n        profile\n    };\n}\n/**\n * Analyzes a terrain grid efficiently for elevation statistics\n * Uses a batched approach to prevent call stack overflow with large areas\n */ async function analyzeTerrainGrid(gridCells, options = {}) {\n    const { batchSize = 1000, onProgress } = options;\n    if (!gridCells || gridCells.length === 0) {\n        throw createError('No grid cells provided for analysis', 'INVALID_INPUT');\n    }\n    console.log(`Analyzing terrain grid with ${gridCells.length} cells`);\n    // For very large datasets, use a reduced set of elevation points for statistics\n    // to prevent memory issues, but still analyze all points for highest/lowest\n    const totalCells = gridCells.length;\n    const useReducedSet = totalCells > 10000;\n    const sampleInterval = useReducedSet ? Math.ceil(totalCells / 10000) : 1;\n    let highestElevation = -Infinity;\n    let lowestElevation = Infinity;\n    let elevationSum = 0;\n    const elevationCounts = {};\n    const sampleElevations = [];\n    // Process in batches to prevent stack overflow\n    for(let i = 0; i < totalCells; i += batchSize){\n        // Check for abort if callback provided\n        if (onProgress) {\n            const progressValue = Math.round(i / totalCells * 100);\n            const shouldAbort = onProgress(progressValue);\n            if (shouldAbort) {\n                throw createError('Analysis aborted by user', 'USER_ABORT');\n            }\n        }\n        // Process current batch\n        const endIndex = Math.min(i + batchSize, totalCells);\n        const batchCells = gridCells.slice(i, endIndex);\n        for(let j = 0; j < batchCells.length; j++){\n            const elevation = batchCells[j].properties.elevation;\n            // Update highest and lowest\n            highestElevation = Math.max(highestElevation, elevation);\n            lowestElevation = Math.min(lowestElevation, elevation);\n            // Only include in average and distribution if part of reduced set or using full set\n            if (!useReducedSet || (i + j) % sampleInterval === 0) {\n                elevationSum += elevation;\n                // Add to sample array\n                sampleElevations.push(elevation);\n                // Update distribution count\n                // Round to nearest 10m for reasonable histogram\n                const elevationBucket = Math.round(elevation / 10) * 10;\n                const bucketKey = elevationBucket.toString();\n                elevationCounts[bucketKey] = (elevationCounts[bucketKey] || 0) + 1;\n            }\n        }\n        // Yield to event loop to prevent stack overflow and UI freezing\n        await new Promise((resolve)=>setTimeout(resolve, 0));\n    }\n    // Calculate averages based on the sample set\n    const averageElevation = sampleElevations.length > 0 ? elevationSum / sampleElevations.length : 0;\n    // Report completion\n    if (onProgress) {\n        onProgress(100);\n    }\n    return {\n        highestElevation,\n        lowestElevation,\n        averageElevation,\n        elevationDistribution: elevationCounts,\n        elevations: sampleElevations\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/components/Analyses/Utils/GridAnalysisCore.ts\n");

/***/ }),

/***/ "(ssr)/./src/app/components/Map/AnalysisStatus.tsx":
/*!***************************************************!*\
  !*** ./src/app/components/Map/AnalysisStatus.tsx ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_Loader_lucide_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! __barrel_optimize__?names=Loader!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/loader.js\");\n/* harmony import */ var _context_LOSAnalysisContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../context/LOSAnalysisContext */ \"(ssr)/./src/app/context/LOSAnalysisContext.tsx\");\n/* harmony import */ var _context_ObstacleAnalysisContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../context/ObstacleAnalysisContext */ \"(ssr)/./src/app/context/ObstacleAnalysisContext.tsx\");\n// components/Map/AnalysisStatus.tsx\n\n\n\n\n\nconst AnalysisStatus = ({ onStopLOS, onStopObstacle })=>{\n    // Get status from both analysis contexts\n    const { isAnalyzing: isLOSAnalyzing, error: losError, setError: setLOSError, progress: losProgress } = (0,_context_LOSAnalysisContext__WEBPACK_IMPORTED_MODULE_2__.useLOSAnalysis)();\n    const { status: obstacleStatus, progress: obstacleProgress, error: obstacleError, cancelAnalysis } = (0,_context_ObstacleAnalysisContext__WEBPACK_IMPORTED_MODULE_3__.useObstacleAnalysis)();\n    const isObstacleAnalyzing = obstacleStatus === 'loading';\n    // Debug log to verify obstacle analysis progress updates\n    react__WEBPACK_IMPORTED_MODULE_1___default().useEffect({\n        \"AnalysisStatus.useEffect\": ()=>{\n            if (isObstacleAnalyzing && obstacleProgress > 0) {\n                console.log(\"AnalysisStatus received obstacle progress:\", obstacleProgress);\n            }\n        }\n    }[\"AnalysisStatus.useEffect\"], [\n        isObstacleAnalyzing,\n        obstacleProgress\n    ]);\n    // If nothing is active, don't show anything\n    if (!isLOSAnalyzing && !isObstacleAnalyzing && !losError && !obstacleError) return null;\n    // Determine which analysis is active\n    let activeAnalysis = null;\n    if (isObstacleAnalyzing) {\n        activeAnalysis = {\n            type: 'Terrain Analysis',\n            progress: obstacleProgress,\n            message: 'Analyzing flight path...',\n            note: 'This may take a moment for complex routes.',\n            onStop: ()=>{\n                if (onStopObstacle) onStopObstacle();\n                cancelAnalysis();\n            }\n        };\n    } else if (isLOSAnalyzing) {\n        activeAnalysis = {\n            type: 'Analysing Visibility',\n            progress: losProgress,\n            message: 'This may take a few moments...',\n            note: 'Larger areas required longer analysis times.',\n            onStop: onStopLOS || (()=>{})\n        };\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"analysis-status-container\",\n        children: [\n            activeAnalysis && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"fixed top-4 left-1/2 transform -translate-x-1/2 bg-white shadow-xl rounded-lg border border-gray-300 p-4 z-[1000] w-80\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center justify-between mb-3\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex items-center gap-2\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Loader_lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                        className: \"w-5 h-5 animate-spin text-blue-500\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/AnalysisStatus.tsx\",\n                                        lineNumber: 73,\n                                        columnNumber: 15\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                                className: \"font-medium text-gray-900 text-sm\",\n                                                children: activeAnalysis.type\n                                            }, void 0, false, {\n                                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/AnalysisStatus.tsx\",\n                                                lineNumber: 75,\n                                                columnNumber: 17\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                className: \"text-xs text-gray-600\",\n                                                children: activeAnalysis.message\n                                            }, void 0, false, {\n                                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/AnalysisStatus.tsx\",\n                                                lineNumber: 76,\n                                                columnNumber: 17\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/AnalysisStatus.tsx\",\n                                        lineNumber: 74,\n                                        columnNumber: 15\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/AnalysisStatus.tsx\",\n                                lineNumber: 72,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: activeAnalysis.onStop,\n                                className: \"text-xs px-2 py-1 bg-red-500 text-white rounded hover:bg-red-600 transition-colors\",\n                                children: \"Cancel\"\n                            }, void 0, false, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/AnalysisStatus.tsx\",\n                                lineNumber: 79,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/AnalysisStatus.tsx\",\n                        lineNumber: 71,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mb-1\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex justify-between mb-1\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-xs text-gray-600\",\n                                        children: \"Progress\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/AnalysisStatus.tsx\",\n                                        lineNumber: 89,\n                                        columnNumber: 15\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-xs font-medium\",\n                                        children: [\n                                            Math.round(activeAnalysis.progress),\n                                            \"%\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/AnalysisStatus.tsx\",\n                                        lineNumber: 90,\n                                        columnNumber: 15\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/AnalysisStatus.tsx\",\n                                lineNumber: 88,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-full bg-gray-200 rounded-full h-2.5\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"bg-blue-600 h-2.5 rounded-full\",\n                                    style: {\n                                        width: `${Math.round(activeAnalysis.progress)}%`\n                                    }\n                                }, void 0, false, {\n                                    fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/AnalysisStatus.tsx\",\n                                    lineNumber: 93,\n                                    columnNumber: 15\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/AnalysisStatus.tsx\",\n                                lineNumber: 92,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/AnalysisStatus.tsx\",\n                        lineNumber: 87,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-xs text-gray-500 mt-2\",\n                        children: activeAnalysis.note\n                    }, void 0, false, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/AnalysisStatus.tsx\",\n                        lineNumber: 100,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/AnalysisStatus.tsx\",\n                lineNumber: 70,\n                columnNumber: 9\n            }, undefined),\n            losError && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"fixed bottom-4 left-4 bg-red-500 text-white px-4 py-2 rounded-lg shadow-lg flex items-center z-[1000]\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        children: \"⚠️\"\n                    }, void 0, false, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/AnalysisStatus.tsx\",\n                        lineNumber: 106,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"ml-2\",\n                        children: losError\n                    }, void 0, false, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/AnalysisStatus.tsx\",\n                        lineNumber: 107,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: ()=>setLOSError(null),\n                        className: \"ml-2 hover:opacity-75\",\n                        children: \"✕\"\n                    }, void 0, false, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/AnalysisStatus.tsx\",\n                        lineNumber: 108,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/AnalysisStatus.tsx\",\n                lineNumber: 105,\n                columnNumber: 9\n            }, undefined),\n            obstacleError && !losError && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"fixed bottom-4 left-4 bg-red-500 text-white px-4 py-2 rounded-lg shadow-lg flex items-center z-[1000]\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        children: \"⚠️\"\n                    }, void 0, false, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/AnalysisStatus.tsx\",\n                        lineNumber: 116,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"ml-2\",\n                        children: obstacleError\n                    }, void 0, false, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/AnalysisStatus.tsx\",\n                        lineNumber: 117,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: ()=>cancelAnalysis(),\n                        className: \"ml-2 hover:opacity-75\",\n                        children: \"✕\"\n                    }, void 0, false, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/AnalysisStatus.tsx\",\n                        lineNumber: 118,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/AnalysisStatus.tsx\",\n                lineNumber: 115,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/AnalysisStatus.tsx\",\n        lineNumber: 68,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AnalysisStatus);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/components/Map/AnalysisStatus.tsx\n");

/***/ }),

/***/ "(ssr)/./src/app/components/Map/DBYDLayerHandler.tsx":
/*!*****************************************************!*\
  !*** ./src/app/components/Map/DBYDLayerHandler.tsx ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _context_mapcontext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../context/mapcontext */ \"(ssr)/./src/app/context/mapcontext.tsx\");\n/* harmony import */ var _context_AreaOfOpsContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../context/AreaOfOpsContext */ \"(ssr)/./src/app/context/AreaOfOpsContext.tsx\");\n/* harmony import */ var _turf_turf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @turf/turf */ \"(ssr)/./node_modules/@turf/bbox/dist/esm/index.js\");\n/* harmony import */ var _AO_Hooks_useAreaOpsProcessor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../AO/Hooks/useAreaOpsProcessor */ \"(ssr)/./src/app/components/AO/Hooks/useAreaOpsProcessor.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\n\n\nconst services = [\n    \"LUAL_Network_HV_Feature_Public\",\n    \"LUAL_Network_LV_Feature_Public\",\n    \"LUAL_Network_SWER_Feature_Public\",\n    \"LUAL_Network_Other_Feature_Public\",\n    \"LUAL_Network_Device_Feature_View\"\n];\nconst serviceLayerMapping = {\n    LUAL_Network_HV_Feature_Public: {\n        sourceId: \"byda-hv-source\",\n        layerId: \"byda-hv-layer\",\n        color: \"#ff0000\"\n    },\n    LUAL_Network_LV_Feature_Public: {\n        sourceId: \"byda-lv-source\",\n        layerId: \"byda-lv-layer\",\n        color: \"#ff0000\"\n    },\n    LUAL_Network_SWER_Feature_Public: {\n        sourceId: \"byda-swer-source\",\n        layerId: \"byda-swer-layer\",\n        color: \"#ff0000\"\n    },\n    LUAL_Network_Other_Feature_Public: {\n        sourceId: \"byda-other-source\",\n        layerId: \"byda-other-layer\",\n        color: \"#ff0000\"\n    },\n    LUAL_Network_Device_Feature_View: {\n        sourceId: \"byda-device-source\",\n        layerId: \"byda-device-layer\",\n        color: \"#ff0000\"\n    }\n};\nconst baseUrl = \"https://services-ap1.arcgis.com/ug6sGLFkytbXYo4f/ArcGIS/rest/services\";\nconst serviceQueryParams = {\n    LUAL_Network_HV_Feature_Public: {\n        where: \"ASSET_TYPE IN ('US','OH')\",\n        outFields: \"OPERATING_VOLTAGE,OWNER\"\n    },\n    LUAL_Network_LV_Feature_Public: {\n        where: \"ASSET_TYPE IN ('US','OH')\",\n        outFields: \"OPERATING_VOLTAGE,OWNER\"\n    },\n    LUAL_Network_SWER_Feature_Public: {\n        where: \"ASSET_TYPE IN ('US','OH')\",\n        outFields: \"OWNER,OPERATING_VOLTAGE\"\n    },\n    LUAL_Network_Other_Feature_Public: {\n        where: \"ASSET_TYPE IN ('US','OH')\",\n        outFields: \"OWNER,OPERATING_VOLTAGE\"\n    },\n    LUAL_Network_Device_Feature_View: {\n        where: \"1=1\",\n        outFields: \"OWNER,ASSET_TYPE\"\n    }\n};\nconst DBYDLayerHandler = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(({ map }, ref)=>{\n    const geometryType = \"esriGeometryEnvelope\";\n    const inSR = \"4326\";\n    const spatialRel = \"esriSpatialRelIntersects\";\n    const f = \"geojson\";\n    // Instead of destructuring \"layerManager\", extract the functions provided by the context.\n    const { setLayerVisibility } = (0,_context_mapcontext__WEBPACK_IMPORTED_MODULE_1__.useMapContext)();\n    const { aoGeometry } = (0,_context_AreaOfOpsContext__WEBPACK_IMPORTED_MODULE_2__.useAreaOfOpsContext)();\n    const { showAreaOfOperations } = (0,_AO_Hooks_useAreaOpsProcessor__WEBPACK_IMPORTED_MODULE_3__.useAreaOpsProcessor)();\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    // Initialize layers on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"DBYDLayerHandler.useEffect\": ()=>{\n            if (!map) return;\n            services.forEach({\n                \"DBYDLayerHandler.useEffect\": (service)=>{\n                    const { sourceId, layerId, color } = serviceLayerMapping[service];\n                    // Add empty GeoJSON source if it doesn't exist\n                    if (!map.getSource(sourceId)) {\n                        map.addSource(sourceId, {\n                            type: \"geojson\",\n                            data: {\n                                type: \"FeatureCollection\",\n                                features: []\n                            }\n                        });\n                    }\n                    // Add layer if it doesn't exist\n                    if (!map.getLayer(layerId)) {\n                        map.addLayer({\n                            id: layerId,\n                            type: \"line\",\n                            source: sourceId,\n                            layout: {\n                                visibility: \"none\"\n                            },\n                            paint: {\n                                \"line-color\": color,\n                                \"line-width\": 2\n                            }\n                        });\n                    // If you need to register this layer in a centralized LayerManager, consider calling that here.\n                    }\n                }\n            }[\"DBYDLayerHandler.useEffect\"]);\n            // Cleanup: Optionally remove layers and sources on unmount\n            return ({\n                \"DBYDLayerHandler.useEffect\": ()=>{\n                    // Add comprehensive map validation before cleanup\n                    if (!map || !map.getStyle || !map.getLayer || !map.getSource) {\n                        console.warn(\"[DBYDLayerHandler] Map not available or already destroyed during cleanup\");\n                        return;\n                    }\n                    try {\n                        // Check if map is still loaded\n                        if (!map.loaded()) {\n                            console.warn(\"[DBYDLayerHandler] Map not loaded during cleanup\");\n                            return;\n                        }\n                    } catch (mapStateError) {\n                        console.warn(\"[DBYDLayerHandler] Error checking map state during cleanup:\", mapStateError);\n                        return;\n                    }\n                    services.forEach({\n                        \"DBYDLayerHandler.useEffect\": (service)=>{\n                            const { sourceId, layerId } = serviceLayerMapping[service];\n                            try {\n                                if (map.getLayer && map.getLayer(layerId)) {\n                                    map.removeLayer(layerId);\n                                }\n                            } catch (layerError) {\n                                console.warn(`[DBYDLayerHandler] Error removing layer ${layerId}:`, layerError);\n                            }\n                            try {\n                                if (map.getSource && map.getSource(sourceId)) {\n                                    map.removeSource(sourceId);\n                                }\n                            } catch (sourceError) {\n                                console.warn(`[DBYDLayerHandler] Error removing source ${sourceId}:`, sourceError);\n                            }\n                        }\n                    }[\"DBYDLayerHandler.useEffect\"]);\n                }\n            })[\"DBYDLayerHandler.useEffect\"];\n        }\n    }[\"DBYDLayerHandler.useEffect\"], [\n        map\n    ]);\n    const fetchLayers = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"DBYDLayerHandler.useCallback[fetchLayers]\": ()=>{\n            if (!map) {\n                console.warn(\"[DBYDLayerHandler] No map instance. Aborting fetch.\");\n                return;\n            }\n            if (!aoGeometry) {\n                console.warn(\"[DBYDLayerHandler] No AO geometry. Aborting fetch.\");\n                return;\n            }\n            // Show Area of Operations when BYDA layers are fetched\n            try {\n                showAreaOfOperations();\n            } catch (error) {\n                console.warn(\"[DBYDLayerHandler] Failed to show Area of Operations:\", error);\n            }\n            const boundingBox = _turf_turf__WEBPACK_IMPORTED_MODULE_4__.bbox(aoGeometry);\n            const geometry = boundingBox.join(\",\");\n            services.forEach({\n                \"DBYDLayerHandler.useCallback[fetchLayers]\": (service)=>{\n                    const params = serviceQueryParams[service];\n                    const queryParams = new URLSearchParams({\n                        where: params.where,\n                        geometry,\n                        geometryType,\n                        inSR,\n                        spatialRel,\n                        outFields: params.outFields,\n                        returnGeometry: \"true\",\n                        f\n                    });\n                    const queryUrl = `${baseUrl}/${service}/FeatureServer/0/query?${queryParams.toString()}`;\n                    fetch(queryUrl).then({\n                        \"DBYDLayerHandler.useCallback[fetchLayers]\": (res)=>{\n                            return res.json();\n                        }\n                    }[\"DBYDLayerHandler.useCallback[fetchLayers]\"]).then({\n                        \"DBYDLayerHandler.useCallback[fetchLayers]\": (data)=>{\n                            const mapping = serviceLayerMapping[service];\n                            if (!mapping) return;\n                            const { sourceId, layerId } = mapping;\n                            if (!map.getSource(sourceId)) {\n                                map.addSource(sourceId, {\n                                    type: \"geojson\",\n                                    data: {\n                                        type: \"FeatureCollection\",\n                                        features: []\n                                    }\n                                });\n                            }\n                            if (data.features && data.features.length > 0) {\n                                const existingSource = map.getSource(sourceId);\n                                if (existingSource) {\n                                    existingSource.setData(data);\n                                    setLayerVisibility(layerId, true);\n                                } else {\n                                    console.warn(`[DBYDLayerHandler] Source \"${sourceId}\" not found after re-adding.`);\n                                }\n                            } else {\n                                const existingSource = map.getSource(sourceId);\n                                if (existingSource) {\n                                    existingSource.setData({\n                                        type: \"FeatureCollection\",\n                                        features: []\n                                    });\n                                }\n                            }\n                        }\n                    }[\"DBYDLayerHandler.useCallback[fetchLayers]\"]).catch({\n                        \"DBYDLayerHandler.useCallback[fetchLayers]\": (error)=>{\n                            console.error(`[DBYDLayerHandler] Error with ${service}:`, error);\n                            setError(`Failed to fetch ${service}: ${error.message}`);\n                        }\n                    }[\"DBYDLayerHandler.useCallback[fetchLayers]\"]);\n                }\n            }[\"DBYDLayerHandler.useCallback[fetchLayers]\"]);\n        }\n    }[\"DBYDLayerHandler.useCallback[fetchLayers]\"], [\n        map,\n        aoGeometry,\n        setLayerVisibility,\n        showAreaOfOperations\n    ]);\n    // Expose fetchLayers to parent via ref\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle)(ref, {\n        \"DBYDLayerHandler.useImperativeHandle\": ()=>({\n                fetchLayers\n            })\n    }[\"DBYDLayerHandler.useImperativeHandle\"], [\n        fetchLayers\n    ]);\n    return null;\n});\nDBYDLayerHandler.displayName = \"DBYDLayerHandler\";\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DBYDLayerHandler);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/components/Map/DBYDLayerHandler.tsx\n");

/***/ }),

/***/ "(ssr)/./src/app/components/Map/FlightPathDisplay.tsx":
/*!******************************************************!*\
  !*** ./src/app/components/Map/FlightPathDisplay.tsx ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mapbox_gl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mapbox-gl */ \"(ssr)/./node_modules/mapbox-gl/dist/mapbox-gl.js\");\n/* harmony import */ var mapbox_gl__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(mapbox_gl__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _context_FlightPlanContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../context/FlightPlanContext */ \"(ssr)/./src/app/context/FlightPlanContext.tsx\");\n/* harmony import */ var _context_mapcontext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../context/mapcontext */ \"(ssr)/./src/app/context/mapcontext.tsx\");\n/* harmony import */ var _hooks_useLayers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../hooks/useLayers */ \"(ssr)/./src/app/hooks/useLayers.ts\");\n/* harmony import */ var _context_FlightConfigurationContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../context/FlightConfigurationContext */ \"(ssr)/./src/app/context/FlightConfigurationContext.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\n\n\n\nconst FLIGHT_SOURCE_ID = 'flightplan-data';\nconst FLIGHT_LINE_LAYER_ID = 'flightplan-line';\n/**\n * Displays the flight path, start/end markers, and (when re-enabled) the available range marker on the map.\n * @component\n */ const FlightPathDisplay = ()=>{\n    const { flightPlan } = (0,_context_FlightPlanContext__WEBPACK_IMPORTED_MODULE_2__.useFlightPlanContext)();\n    const { map, terrainLoaded } = (0,_context_mapcontext__WEBPACK_IMPORTED_MODULE_3__.useMapContext)();\n    const { addFlightPath } = (0,_hooks_useLayers__WEBPACK_IMPORTED_MODULE_4__.useLayers)();\n    const { config, metrics } = (0,_context_FlightConfigurationContext__WEBPACK_IMPORTED_MODULE_5__.useFlightConfiguration)();\n    const startMarkerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const endMarkerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const availableRangeMarkerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    // —— Draw (or redraw) the flight‐path & start/end markers\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"FlightPathDisplay.useEffect\": ()=>{\n            if (!map || !terrainLoaded || !flightPlan || !flightPlan.properties?.processed) {\n                return;\n            }\n            // —— CLEAN UP any previous flight‐plan before drawing the new one\n            if (map.getLayer(FLIGHT_LINE_LAYER_ID)) {\n                map.removeLayer(FLIGHT_LINE_LAYER_ID);\n            }\n            if (map.getSource(FLIGHT_SOURCE_ID)) {\n                map.removeSource(FLIGHT_SOURCE_ID);\n            }\n            // —— Now invoke your hook to add the new source + layer\n            addFlightPath(flightPlan);\n            try {\n                const coords = flightPlan.features[0].geometry.coordinates;\n                if (coords.length > 0) {\n                    // —— Start marker\n                    const [startLon, startLat] = coords[0];\n                    if (startMarkerRef.current) {\n                        startMarkerRef.current.remove();\n                        startMarkerRef.current = null;\n                    }\n                    startMarkerRef.current = new (mapbox_gl__WEBPACK_IMPORTED_MODULE_1___default().Marker)({\n                        color: '#00FF00',\n                        scale: 1.2\n                    }).setLngLat([\n                        startLon,\n                        startLat\n                    ]).setPopup(new (mapbox_gl__WEBPACK_IMPORTED_MODULE_1___default().Popup)({\n                        offset: 25,\n                        className: 'custom-popup'\n                    }).setHTML('<strong style=\"color:black;background:white;padding:4px;\">Start</strong>')).addTo(map);\n                    startMarkerRef.current.togglePopup();\n                    // —— End marker\n                    const [endLon, endLat] = coords[coords.length - 1];\n                    if (endMarkerRef.current) {\n                        endMarkerRef.current.remove();\n                        endMarkerRef.current = null;\n                    }\n                    endMarkerRef.current = new (mapbox_gl__WEBPACK_IMPORTED_MODULE_1___default().Marker)({\n                        color: '#0000FF',\n                        scale: 1.2\n                    }).setLngLat([\n                        endLon,\n                        endLat\n                    ]).setPopup(new (mapbox_gl__WEBPACK_IMPORTED_MODULE_1___default().Popup)({\n                        offset: 25,\n                        className: 'custom-popup'\n                    }).setHTML('<strong style=\"color:black;background:white;padding:4px;\">Finish</strong>')).addTo(map);\n                    endMarkerRef.current.togglePopup();\n                }\n            } catch (err) {\n                console.error('Error creating start/end markers:', err);\n            }\n        }\n    }[\"FlightPathDisplay.useEffect\"], [\n        map,\n        terrainLoaded,\n        flightPlan,\n        addFlightPath\n    ]);\n    /*\n   * —— Available Range Marker (DISABLED)\n   * This block computes and displays a marker indicating the point where the battery would run out.\n  useEffect(() => {\n    if (!map || !terrainLoaded || !flightPlan || !flightPlan.properties?.processed) {\n      return;\n    }\n    const coords = flightPlan.features[0].geometry.coordinates;\n    const totalDistance = flightPlan.properties.totalDistance;\n    if (!coords.length || !totalDistance) return;\n\n    const dischargeRate = parseFloat(config.dischargeRate);\n    const assumedSpeed = parseFloat(config.assumedSpeed);\n    if (!dischargeRate || !assumedSpeed) return;\n\n    const availableTimeMin = metrics.availableBatteryCapacity / dischargeRate;\n    const availableDistKm = (availableTimeMin / 60) * assumedSpeed;\n\n    // —— Remove marker entirely if we can complete the route\n    if (availableDistKm >= totalDistance) {\n      if (availableRangeMarkerRef.current) {\n        availableRangeMarkerRef.current.remove();\n        availableRangeMarkerRef.current = null;\n      }\n      return;\n    }\n\n    // —— Otherwise place/update a red marker at the cutoff point\n    const line = turf.lineString(coords.map(c => [c[0], c[1]] as [number, number]));\n    const cutoffPt = turf.along(line, availableDistKm, { units: 'kilometers' });\n    const [lng, lat] = cutoffPt.geometry.coordinates as [number, number];\n\n    if (availableRangeMarkerRef.current) {\n      availableRangeMarkerRef.current.setLngLat([lng, lat]);\n    } else {\n      availableRangeMarkerRef.current = new mapboxgl.Marker({ color: 'red' })\n        .setLngLat([lng, lat])\n        .setPopup(new mapboxgl.Popup({ closeButton: false })\n          .setHTML('<strong style=\"color:black;background:white;padding:4px;\">Available Range Limit</strong>'))\n        .addTo(map);\n      availableRangeMarkerRef.current.togglePopup();\n    }\n  }, [map, terrainLoaded, flightPlan, config, metrics]);\n  */ (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"FlightPathDisplay.useEffect\": ()=>{\n            // Capture the current ref values for cleanup\n            const startMarker = startMarkerRef.current;\n            const endMarker = endMarkerRef.current;\n            const availableRangeMarker = availableRangeMarkerRef.current;\n            return ({\n                \"FlightPathDisplay.useEffect\": ()=>{\n                    // Use the captured references in cleanup\n                    startMarker?.remove();\n                    endMarker?.remove();\n                    availableRangeMarker?.remove();\n                }\n            })[\"FlightPathDisplay.useEffect\"];\n        }\n    }[\"FlightPathDisplay.useEffect\"], []);\n    return null;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FlightPathDisplay);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/components/Map/FlightPathDisplay.tsx\n");

/***/ }),

/***/ "(ssr)/./src/app/components/Map/Hooks/useFlightPlanProcessor.tsx":
/*!*****************************************************************!*\
  !*** ./src/app/components/Map/Hooks/useFlightPlanProcessor.tsx ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useFlightPlanProcessor: () => (/* binding */ useFlightPlanProcessor)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _turf_turf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @turf/turf */ \"(ssr)/./node_modules/@turf/helpers/dist/esm/index.js\");\n/* harmony import */ var _turf_turf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @turf/turf */ \"(ssr)/./node_modules/@turf/distance/dist/esm/index.js\");\n/* harmony import */ var _turf_turf__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @turf/turf */ \"(ssr)/./node_modules/@turf/along/dist/esm/index.js\");\n/* harmony import */ var _turf_turf__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @turf/turf */ \"(ssr)/./node_modules/@turf/length/dist/esm/index.js\");\n/* harmony import */ var _context_mapcontext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../context/mapcontext */ \"(ssr)/./src/app/context/mapcontext.tsx\");\n/* harmony import */ var _AO_Hooks_useAreaOpsProcessor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../AO/Hooks/useAreaOpsProcessor */ \"(ssr)/./src/app/components/AO/Hooks/useAreaOpsProcessor.ts\");\n/* harmony import */ var _utils_TerrainUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../utils/TerrainUtils */ \"(ssr)/./src/app/utils/TerrainUtils.ts\");\n// src/components/Map/Hooks/useFlightPlanProcessor.tsx\n/* __next_internal_client_entry_do_not_use__ useFlightPlanProcessor auto */ \n\n\n\n\n/**\n * Hook to process flight plans, integrating elevation data using direct map queries.\n * Uses a two-stage approach to handle elevation loading race conditions.\n * @returns Functions and state for processing flight plans.\n */ const useFlightPlanProcessor = ()=>{\n    const { map } = (0,_context_mapcontext__WEBPACK_IMPORTED_MODULE_1__.useMapContext)();\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [isProcessing, setIsProcessing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const { generateAOFromFlightPlan } = (0,_AO_Hooks_useAreaOpsProcessor__WEBPACK_IMPORTED_MODULE_2__.useAreaOpsProcessor)();\n    /**\n   * Densifies a terrain-following segment by interpolating points.\n   * Memoized to prevent unnecessary re-creation and maintain stable dependencies.\n   */ const densifyTerrainSegment = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useFlightPlanProcessor.useCallback[densifyTerrainSegment]\": async (segmentCoords, waypoints, elevations)=>{\n            if (!map) throw new Error('Map not initialized');\n            if (segmentCoords.length < 2) return segmentCoords;\n            const coords2D = segmentCoords.map({\n                \"useFlightPlanProcessor.useCallback[densifyTerrainSegment].coords2D\": ([lon, lat])=>[\n                        lon,\n                        lat\n                    ]\n            }[\"useFlightPlanProcessor.useCallback[densifyTerrainSegment].coords2D\"]);\n            const line = _turf_turf__WEBPACK_IMPORTED_MODULE_4__.lineString(coords2D);\n            const cumDist = [\n                0\n            ];\n            for(let i = 1; i < segmentCoords.length; i++){\n                cumDist.push(cumDist[i - 1] + _turf_turf__WEBPACK_IMPORTED_MODULE_5__.distance(coords2D[i - 1], coords2D[i], {\n                    units: 'meters'\n                }));\n            }\n            const totalLen = cumDist[cumDist.length - 1];\n            const step = 10; // 10 meter steps\n            const densified = [];\n            const points = [];\n            for(let d = 0; d <= totalLen; d += step){\n                const pt = _turf_turf__WEBPACK_IMPORTED_MODULE_6__.along(line, d, {\n                    units: 'meters'\n                });\n                points.push(pt.geometry.coordinates);\n            }\n            // Clear cache to avoid stale values\n            (0,_utils_TerrainUtils__WEBPACK_IMPORTED_MODULE_3__.clearElevationCache)();\n            // Preload tiles\n            await (0,_utils_TerrainUtils__WEBPACK_IMPORTED_MODULE_3__.preloadTiles)(map, points);\n            // Use dynamic test points\n            await (0,_utils_TerrainUtils__WEBPACK_IMPORTED_MODULE_3__.ensureDEMLoaded)(map, points.slice(0, 3));\n            const interpElevations = await (0,_utils_TerrainUtils__WEBPACK_IMPORTED_MODULE_3__.getReliableTerrainElevations)(map, points);\n            // Log elevations for debugging\n            console.log(`[${new Date().toISOString()}] [FlightPlanProcessor] Interpolated elevations:`, interpElevations);\n            // Add terrain and waypoint altitude\n            for(let i = 0; i < points.length; i++){\n                const [lon, lat] = points[i];\n                const elev = interpElevations[i];\n                // Interpolate waypoint altitude\n                let waypointAlt = waypoints[0].originalAltitude;\n                if (waypoints.length > 1) {\n                    const d = i * step;\n                    const segmentIdx = cumDist.findIndex({\n                        \"useFlightPlanProcessor.useCallback[densifyTerrainSegment]\": (cd)=>cd > d\n                    }[\"useFlightPlanProcessor.useCallback[densifyTerrainSegment]\"]) - 1;\n                    const idx = Math.max(0, segmentIdx);\n                    const nextIdx = Math.min(waypoints.length - 1, idx + 1);\n                    if (idx === nextIdx) {\n                        waypointAlt = waypoints[idx].originalAltitude;\n                    } else {\n                        const segStart = cumDist[idx];\n                        const segEnd = cumDist[nextIdx];\n                        const ratio = (d - segStart) / (segEnd - segStart);\n                        waypointAlt = waypoints[idx].originalAltitude + ratio * (waypoints[nextIdx].originalAltitude - waypoints[idx].originalAltitude);\n                    }\n                }\n                densified.push([\n                    lon,\n                    lat,\n                    elev + waypointAlt\n                ]);\n            }\n            return densified;\n        }\n    }[\"useFlightPlanProcessor.useCallback[densifyTerrainSegment]\"], [\n        map\n    ]);\n    /**\n * Updates a flight plan with real terrain elevations\n */ const updateFlightPlanElevations = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useFlightPlanProcessor.useCallback[updateFlightPlanElevations]\": async (plan)=>{\n            if (!map) throw new Error('Map not initialized');\n            console.log(`[${new Date().toISOString()}] [FlightPlanProcessor] Updating flight plan with real elevations...`);\n            const updatedPlan = structuredClone(plan);\n            const coordinates = updatedPlan.features[0].geometry.coordinates;\n            const waypoints = updatedPlan.features[0].properties.waypoints;\n            // Extract 2D coordinates for all points\n            const coords2D = coordinates.map({\n                \"useFlightPlanProcessor.useCallback[updateFlightPlanElevations].coords2D\": (coord)=>[\n                        coord[0],\n                        coord[1]\n                    ]\n            }[\"useFlightPlanProcessor.useCallback[updateFlightPlanElevations].coords2D\"]);\n            // Get home position\n            const homeLngLat = [\n                updatedPlan.properties.homePosition.longitude,\n                updatedPlan.properties.homePosition.latitude\n            ];\n            const allCoords = [\n                homeLngLat,\n                ...coords2D\n            ];\n            // Clear cache to avoid stale values\n            (0,_utils_TerrainUtils__WEBPACK_IMPORTED_MODULE_3__.clearElevationCache)();\n            // Preload tiles\n            await (0,_utils_TerrainUtils__WEBPACK_IMPORTED_MODULE_3__.preloadTiles)(map, allCoords);\n            // Use dynamic test points\n            await (0,_utils_TerrainUtils__WEBPACK_IMPORTED_MODULE_3__.ensureDEMLoaded)(map, allCoords.slice(0, 3));\n            const elevations = await (0,_utils_TerrainUtils__WEBPACK_IMPORTED_MODULE_3__.getReliableTerrainElevations)(map, allCoords, {\n                \"useFlightPlanProcessor.useCallback[updateFlightPlanElevations]\": (progress)=>console.log(`Elevation update progress: ${progress}%`)\n            }[\"useFlightPlanProcessor.useCallback[updateFlightPlanElevations]\"]);\n            // Log elevations for debugging\n            console.log(`[${new Date().toISOString()}] [FlightPlanProcessor] Elevations:`, elevations);\n            const homeTerrainElev = elevations[0];\n            console.log(`[${new Date().toISOString()}] [FlightPlanProcessor] Home terrain elevation = ${homeTerrainElev.toFixed(1)}m`);\n            if (homeTerrainElev <= -0.5) {\n                console.warn(`[${new Date().toISOString()}] [FlightPlanProcessor] Invalid home elevation (${homeTerrainElev.toFixed(1)}m), possible DEM query failure`);\n            }\n            const waypointElevations = elevations.slice(1);\n            // Group waypoints by altitude mode\n            const segments = [];\n            let currentSegment = [];\n            waypoints.forEach({\n                \"useFlightPlanProcessor.useCallback[updateFlightPlanElevations]\": (wp, idx)=>{\n                    if (idx >= coordinates.length) return;\n                    const coord = coordinates[idx];\n                    const elevation = waypointElevations[idx];\n                    const item = {\n                        waypoint: wp,\n                        coordinate: coord,\n                        elevation\n                    };\n                    if (currentSegment.length && wp.altitudeMode !== currentSegment[currentSegment.length - 1].waypoint.altitudeMode) {\n                        segments.push(currentSegment);\n                        currentSegment = [\n                            item\n                        ];\n                    } else {\n                        currentSegment.push(item);\n                    }\n                }\n            }[\"useFlightPlanProcessor.useCallback[updateFlightPlanElevations]\"]);\n            if (currentSegment.length) segments.push(currentSegment);\n            console.log(`[${new Date().toISOString()}] [FlightPlanProcessor] Built ${segments.length} segments with real elevations`);\n            const processedCoords = [];\n            const originalCoords = [];\n            // Process each segment\n            for (const segment of segments){\n                const mode = segment[0].waypoint.altitudeMode;\n                if (mode === 'terrain') {\n                    console.log(`[${new Date().toISOString()}] [FlightPlanProcessor] Processing terrain segment with real elevations`);\n                    // For terrain mode, densify the segment\n                    const densified = await densifyTerrainSegment(segment.map({\n                        \"useFlightPlanProcessor.useCallback[updateFlightPlanElevations]\": (item)=>item.coordinate\n                    }[\"useFlightPlanProcessor.useCallback[updateFlightPlanElevations]\"]), segment.map({\n                        \"useFlightPlanProcessor.useCallback[updateFlightPlanElevations]\": (item)=>item.waypoint\n                    }[\"useFlightPlanProcessor.useCallback[updateFlightPlanElevations]\"]), segment.map({\n                        \"useFlightPlanProcessor.useCallback[updateFlightPlanElevations]\": (item)=>item.elevation\n                    }[\"useFlightPlanProcessor.useCallback[updateFlightPlanElevations]\"]));\n                    processedCoords.push(...densified);\n                    // Original coordinates just need the elevation added\n                    for (const { waypoint, coordinate, elevation } of segment){\n                        const alt = elevation + waypoint.originalAltitude;\n                        originalCoords.push([\n                            coordinate[0],\n                            coordinate[1],\n                            alt\n                        ]);\n                        console.log(`[${new Date().toISOString()}] [FlightPlanProcessor] Original point [${coordinate[0]}, ${coordinate[1]}] alt=${alt.toFixed(1)}`);\n                    }\n                } else if (mode === 'relative') {\n                    console.log(`[${new Date().toISOString()}] [FlightPlanProcessor] Processing relative segment with real elevations`);\n                    // For relative mode, add terrain elevation to waypoint altitude\n                    for (const { waypoint, coordinate, elevation } of segment){\n                        const alt = elevation + waypoint.originalAltitude;\n                        processedCoords.push([\n                            coordinate[0],\n                            coordinate[1],\n                            alt\n                        ]);\n                        originalCoords.push([\n                            coordinate[0],\n                            coordinate[1],\n                            alt\n                        ]);\n                    }\n                } else {\n                    console.log(`[${new Date().toISOString()}] [FlightPlanProcessor] Processing absolute segment`);\n                    // For absolute mode, just use the waypoint altitude\n                    for (const { waypoint, coordinate } of segment){\n                        const alt = waypoint.originalAltitude;\n                        processedCoords.push([\n                            coordinate[0],\n                            coordinate[1],\n                            alt\n                        ]);\n                        originalCoords.push([\n                            coordinate[0],\n                            coordinate[1],\n                            alt\n                        ]);\n                    }\n                }\n            }\n            // We'll keep the same distances from the placeholder version\n            const waypointDistances = plan.waypointDistances || [];\n            const originalWaypointDistances = plan.originalWaypointDistances || [];\n            // Update flight plan\n            updatedPlan.properties.homePosition.altitude = homeTerrainElev + (waypoints[0]?.originalAltitude || 0);\n            updatedPlan.properties.processed = true;\n            updatedPlan.properties.placeholder = false;\n            updatedPlan.features[0].geometry.coordinates = processedCoords;\n            updatedPlan.features[0].properties.originalCoordinates = originalCoords;\n            updatedPlan.waypointDistances = waypointDistances;\n            updatedPlan.originalWaypointDistances = originalWaypointDistances;\n            return updatedPlan;\n        }\n    }[\"useFlightPlanProcessor.useCallback[updateFlightPlanElevations]\"], [\n        map,\n        densifyTerrainSegment\n    ]);\n    /**\n   * Processes a flight plan by resolving altitudes with terrain data.\n   * Uses a two-stage approach to handle DEM loading race conditions.\n   * @param flightPlan - The flight plan data to process.\n   * @returns The processed flight plan with updated coordinates.\n   */ const processFlightPlan = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useFlightPlanProcessor.useCallback[processFlightPlan]\": async (flightPlan)=>{\n            if (!map) {\n                console.error('processFlightPlan: Map not initialized');\n                throw new Error('Map not initialized');\n            }\n            if (flightPlan.properties?.processed) {\n                return flightPlan;\n            }\n            console.log(`[${new Date().toISOString()}] [FlightPlanProcessor] Starting two-stage flight plan processing`);\n            setIsProcessing(true);\n            setError(null);\n            try {\n                // STAGE 1: Initial load with placeholder elevations\n                console.log(`[${new Date().toISOString()}] [FlightPlanProcessor] STAGE 1 - Initial load with placeholders`);\n                const newPlan = structuredClone(flightPlan);\n                const coordinates = newPlan.features[0].geometry.coordinates;\n                const waypoints = newPlan.features[0].properties.waypoints;\n                // Apply placeholder elevation of 25m for each coordinate\n                // This is a reasonable default for urban areas like Sydney\n                const PLACEHOLDER_ELEVATION = 25;\n                const processedCoords = [];\n                const originalCoords = [];\n                // Process waypoints with placeholder elevations\n                waypoints.forEach({\n                    \"useFlightPlanProcessor.useCallback[processFlightPlan]\": (wp, idx)=>{\n                        if (idx >= coordinates.length) return;\n                        const coord = coordinates[idx];\n                        const [lon, lat, originalAlt] = coord;\n                        let altitude = wp.originalAltitude;\n                        if (wp.altitudeMode === 'terrain' || wp.altitudeMode === 'relative') {\n                            // For terrain/relative modes, add placeholder elevation\n                            altitude = PLACEHOLDER_ELEVATION + originalAlt;\n                        }\n                        processedCoords.push([\n                            lon,\n                            lat,\n                            altitude\n                        ]);\n                        originalCoords.push([\n                            lon,\n                            lat,\n                            altitude\n                        ]);\n                    }\n                }[\"useFlightPlanProcessor.useCallback[processFlightPlan]\"]);\n                // Calculate distances (same as before)\n                let totalDistance = 0;\n                const waypointDistances = [\n                    0\n                ];\n                for(let i = 1; i < processedCoords.length; i++){\n                    const line = _turf_turf__WEBPACK_IMPORTED_MODULE_4__.lineString([\n                        processedCoords[i - 1].slice(0, 2),\n                        processedCoords[i].slice(0, 2)\n                    ]);\n                    totalDistance += _turf_turf__WEBPACK_IMPORTED_MODULE_7__.length(line, {\n                        units: 'kilometers'\n                    });\n                    waypointDistances.push(totalDistance * 1000); // Convert to meters\n                }\n                // Update flight plan with placeholder data\n                newPlan.properties.homePosition.altitude = PLACEHOLDER_ELEVATION + (waypoints[0]?.originalAltitude || 0);\n                newPlan.properties.totalDistance = totalDistance;\n                newPlan.properties.processed = true; // Mark as processed so we don't repeat Stage 1\n                newPlan.properties.placeholder = true; // Mark that this is placeholder data\n                newPlan.features[0].geometry.coordinates = processedCoords;\n                newPlan.features[0].properties.originalCoordinates = originalCoords;\n                newPlan.waypointDistances = waypointDistances;\n                newPlan.originalWaypointDistances = [\n                    ...waypointDistances\n                ];\n                // Generate AO with placeholder data\n                try {\n                    await generateAOFromFlightPlan(newPlan, false);\n                } catch (aoError) {\n                    console.warn(`[${new Date().toISOString()}] [FlightPlanProcessor] Failed to generate AO with placeholder data`, aoError);\n                }\n                // STAGE 2: Update with real elevations in the background\n                console.log(`[${new Date().toISOString()}] [FlightPlanProcessor] STAGE 2 - Starting terrain elevation update`);\n                // Ensure DEM is properly loaded before proceeding\n                await (0,_utils_TerrainUtils__WEBPACK_IMPORTED_MODULE_3__.ensureDEMLoaded)(map);\n                // Now get accurate elevations and update the plan\n                const updatedPlan = await updateFlightPlanElevations(newPlan);\n                // Generate AO with real data\n                try {\n                    await generateAOFromFlightPlan(updatedPlan, false);\n                } catch (aoError) {\n                    console.warn(`[${new Date().toISOString()}] [FlightPlanProcessor] Failed to generate AO with real elevations`, aoError);\n                }\n                console.log(`[${new Date().toISOString()}] [FlightPlanProcessor] Complete with real elevations`);\n                return updatedPlan;\n            } catch (err) {\n                console.error(`[${new Date().toISOString()}] [FlightPlanProcessor] Error`, err);\n                setError('Failed to process flight plan: ' + (err instanceof Error ? err.message : String(err)));\n                throw err;\n            } finally{\n                setIsProcessing(false);\n            }\n        }\n    }[\"useFlightPlanProcessor.useCallback[processFlightPlan]\"], [\n        map,\n        generateAOFromFlightPlan,\n        updateFlightPlanElevations\n    ]);\n    return {\n        processFlightPlan,\n        generateAOFromFlightPlan,\n        isProcessing,\n        error,\n        setError\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/components/Map/Hooks/useFlightPlanProcessor.tsx\n");

/***/ }),

/***/ "(ssr)/./src/app/components/Map/Hooks/useMap.ts":
/*!************************************************!*\
  !*** ./src/app/components/Map/Hooks/useMap.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMap: () => (/* binding */ useMap)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mapbox_gl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mapbox-gl */ \"(ssr)/./node_modules/mapbox-gl/dist/mapbox-gl.js\");\n/* harmony import */ var mapbox_gl__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(mapbox_gl__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ useMap auto */ \n\nconst waitForDEM = (map, timeoutMs = 20000)=>{\n    return new Promise((resolve, reject)=>{\n        const timeout = setTimeout(()=>{\n            console.warn(\"⚠️ DEM load timeout reached, proceeding anyway\");\n            resolve();\n        }, timeoutMs);\n        const checkDEM = ()=>{\n            if (map.isSourceLoaded(\"mapbox-dem\")) {\n                console.log(\"✅ DEM source loaded successfully\");\n                clearTimeout(timeout);\n                resolve();\n            } else {\n                map.once(\"sourcedata\", checkDEM);\n            }\n        };\n        checkDEM();\n    });\n};\nconst useMap = (containerId, options)=>{\n    const mapRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const [terrainLoaded, setTerrainLoaded] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [mapError, setMapError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const centerString = JSON.stringify(options.center);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useMap.useEffect\": ()=>{\n            if (!containerId) {\n                setMapError(new Error(\"No containerId provided\"));\n                return;\n            }\n            let isInitializing = true;\n            let mapInstance = null;\n            try {\n                (mapbox_gl__WEBPACK_IMPORTED_MODULE_1___default().accessToken) = \"pk.eyJ1IjoiaW50ZWxhZXJvIiwiYSI6ImNtM2EwZzY3ODB5bDgyam9yOTZ1ajE2YWsifQ.b9w33legWjEDzezOZx1N4g\" || 0;\n                if (!(mapbox_gl__WEBPACK_IMPORTED_MODULE_1___default().accessToken)) {\n                    throw new Error(\"Mapbox access token is not set\");\n                }\n                const container = document.getElementById(containerId);\n                if (!container) {\n                    throw new Error(`Container with id \"${containerId}\" not found`);\n                }\n                const map = new (mapbox_gl__WEBPACK_IMPORTED_MODULE_1___default().Map)({\n                    container,\n                    style: options.style,\n                    center: JSON.parse(centerString),\n                    zoom: options.zoom,\n                    projection: options.projection\n                });\n                mapInstance = map;\n                map.once('style.load', {\n                    \"useMap.useEffect\": ()=>{\n                        try {\n                            if (!map.getSource(\"mapbox-dem\")) {\n                                map.addSource(\"mapbox-dem\", {\n                                    type: \"raster-dem\",\n                                    url: \"mapbox://mapbox.mapbox-terrain-dem-v1\",\n                                    tileSize: 512,\n                                    maxzoom: 15\n                                });\n                            }\n                            map.setTerrain({\n                                source: \"mapbox-dem\",\n                                exaggeration: 1.5\n                            });\n                            Promise.all([\n                                new Promise({\n                                    \"useMap.useEffect\": (resolve)=>{\n                                        if (map.loaded()) {\n                                            resolve(true);\n                                        } else {\n                                            map.once(\"load\", {\n                                                \"useMap.useEffect\": ()=>resolve(true)\n                                            }[\"useMap.useEffect\"]);\n                                        }\n                                    }\n                                }[\"useMap.useEffect\"]),\n                                waitForDEM(map).then({\n                                    \"useMap.useEffect\": ()=>true\n                                }[\"useMap.useEffect\"]).catch({\n                                    \"useMap.useEffect\": ()=>false\n                                }[\"useMap.useEffect\"])\n                            ]).then({\n                                \"useMap.useEffect\": ([mapLoaded, demLoaded])=>{\n                                    if (!isInitializing) return;\n                                    mapRef.current = map;\n                                    setTerrainLoaded(true);\n                                    setTimeout({\n                                        \"useMap.useEffect\": ()=>{\n                                            // Add comprehensive validation before calling resize\n                                            if (map && map.loaded) {\n                                                try {\n                                                    // Check if map is still loaded and container exists\n                                                    const container = map.getContainer();\n                                                    const canvas = map.getCanvas();\n                                                    if (container && canvas && map.loaded()) {\n                                                        map.resize();\n                                                    } else {\n                                                        console.warn(\"Map resize skipped: container or canvas not available\");\n                                                    }\n                                                } catch (resizeError) {\n                                                    console.warn(\"Error during map resize:\", resizeError);\n                                                }\n                                            }\n                                        }\n                                    }[\"useMap.useEffect\"], 100);\n                                }\n                            }[\"useMap.useEffect\"]).catch({\n                                \"useMap.useEffect\": (error)=>{\n                                    setMapError(error instanceof Error ? error : new Error(String(error)));\n                                }\n                            }[\"useMap.useEffect\"]);\n                        } catch (error) {\n                            setMapError(error instanceof Error ? error : new Error(String(error)));\n                        }\n                    }\n                }[\"useMap.useEffect\"]);\n            } catch (error) {\n                setMapError(error instanceof Error ? error : new Error(String(error)));\n            }\n            return ({\n                \"useMap.useEffect\": ()=>{\n                    isInitializing = false;\n                    if (mapInstance) {\n                        try {\n                            // Check if map has a remove method and is still valid\n                            if (mapInstance.remove && typeof mapInstance.remove === 'function') {\n                                mapInstance.remove();\n                            } else {\n                                console.warn(\"Map already destroyed, skipping cleanup\");\n                            }\n                        } catch (err) {\n                            console.warn(\"Error removing map:\", err);\n                        }\n                    }\n                    mapRef.current = null;\n                }\n            })[\"useMap.useEffect\"];\n        }\n    }[\"useMap.useEffect\"], [\n        containerId,\n        options.style,\n        centerString,\n        options.zoom,\n        options.projection\n    ]);\n    return {\n        map: mapRef.current,\n        terrainLoaded,\n        error: mapError\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvYXBwL2NvbXBvbmVudHMvTWFwL0hvb2tzL3VzZU1hcC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs0REFDb0Q7QUFDbkI7QUFFakMsTUFBTUksYUFBYSxDQUFDQyxLQUFtQkMsWUFBWSxLQUFLO0lBQ3RELE9BQU8sSUFBSUMsUUFBUSxDQUFDQyxTQUFTQztRQUMzQixNQUFNQyxVQUFVQyxXQUFXO1lBQ3pCQyxRQUFRQyxJQUFJLENBQUM7WUFDYkw7UUFDRixHQUFHRjtRQUVILE1BQU1RLFdBQVc7WUFDZixJQUFJVCxJQUFJVSxjQUFjLENBQUMsZUFBZTtnQkFDcENILFFBQVFJLEdBQUcsQ0FBQztnQkFDWkMsYUFBYVA7Z0JBQ2JGO1lBQ0YsT0FBTztnQkFDTEgsSUFBSWEsSUFBSSxDQUFDLGNBQWNKO1lBQ3pCO1FBQ0Y7UUFFQUE7SUFDRjtBQUNGO0FBRU8sTUFBTUssU0FBUyxDQUFDQyxhQUFxQkM7SUFDMUMsTUFBTUMsU0FBU3JCLDZDQUFNQSxDQUFzQjtJQUMzQyxNQUFNLENBQUNzQixlQUFlQyxpQkFBaUIsR0FBR3RCLCtDQUFRQSxDQUFDO0lBQ25ELE1BQU0sQ0FBQ3VCLFVBQVVDLFlBQVksR0FBR3hCLCtDQUFRQSxDQUFlO0lBQ3ZELE1BQU15QixlQUFlQyxLQUFLQyxTQUFTLENBQUNSLFFBQVFTLE1BQU07SUFFbEQ5QixnREFBU0E7NEJBQUM7WUFDUixJQUFJLENBQUNvQixhQUFhO2dCQUNoQk0sWUFBWSxJQUFJSyxNQUFNO2dCQUN0QjtZQUNGO1lBRUEsSUFBSUMsaUJBQWlCO1lBQ3JCLElBQUlDLGNBQW1DO1lBRXZDLElBQUk7Z0JBQ0Y5Qiw4REFBb0IsR0FBR2dDLDhGQUEyQyxJQUFJLENBQUU7Z0JBQ3hFLElBQUksQ0FBQ2hDLDhEQUFvQixFQUFFO29CQUN6QixNQUFNLElBQUk0QixNQUFNO2dCQUNsQjtnQkFFQSxNQUFNTyxZQUFZQyxTQUFTQyxjQUFjLENBQUNwQjtnQkFDMUMsSUFBSSxDQUFDa0IsV0FBVztvQkFDZCxNQUFNLElBQUlQLE1BQU0sQ0FBQyxtQkFBbUIsRUFBRVgsWUFBWSxXQUFXLENBQUM7Z0JBQ2hFO2dCQUVBLE1BQU1mLE1BQU0sSUFBSUYsc0RBQVksQ0FBQztvQkFDM0JtQztvQkFDQUksT0FBT3JCLFFBQVFxQixLQUFLO29CQUNwQlosUUFBUUYsS0FBS2UsS0FBSyxDQUFDaEI7b0JBQ25CaUIsTUFBTXZCLFFBQVF1QixJQUFJO29CQUNsQkMsWUFBWXhCLFFBQVF3QixVQUFVO2dCQUNoQztnQkFFQVosY0FBYzVCO2dCQUVkQSxJQUFJYSxJQUFJLENBQUM7d0NBQWM7d0JBQ3JCLElBQUk7NEJBQ0YsSUFBSSxDQUFDYixJQUFJeUMsU0FBUyxDQUFDLGVBQWU7Z0NBQ2hDekMsSUFBSTBDLFNBQVMsQ0FBQyxjQUFjO29DQUMxQkMsTUFBTTtvQ0FDTkMsS0FBSztvQ0FDTEMsVUFBVTtvQ0FDVkMsU0FBUztnQ0FDWDs0QkFDRjs0QkFFQTlDLElBQUkrQyxVQUFVLENBQUM7Z0NBQ2JDLFFBQVE7Z0NBQ1JDLGNBQWM7NEJBQ2hCOzRCQUVBL0MsUUFBUWdELEdBQUcsQ0FBQztnQ0FDVixJQUFJaEQ7d0RBQWlCLENBQUNDO3dDQUNwQixJQUFJSCxJQUFJbUQsTUFBTSxJQUFJOzRDQUNoQmhELFFBQVE7d0NBQ1YsT0FBTzs0Q0FDTEgsSUFBSWEsSUFBSSxDQUFDO29FQUFRLElBQU1WLFFBQVE7O3dDQUNqQztvQ0FDRjs7Z0NBQ0FKLFdBQVdDLEtBQUtvRCxJQUFJO3dEQUFDLElBQU07dURBQU1DLEtBQUs7d0RBQUMsSUFBTTs7NkJBQzlDLEVBQ0VELElBQUk7b0RBQUMsQ0FBQyxDQUFDRSxXQUFXQyxVQUFVO29DQUMzQixJQUFJLENBQUM1QixnQkFBZ0I7b0NBQ3JCVixPQUFPdUMsT0FBTyxHQUFHeEQ7b0NBQ2pCbUIsaUJBQWlCO29DQUNqQmI7NERBQVc7NENBQ1QscURBQXFEOzRDQUNyRCxJQUFJTixPQUFPQSxJQUFJbUQsTUFBTSxFQUFFO2dEQUNyQixJQUFJO29EQUNGLG9EQUFvRDtvREFDcEQsTUFBTWxCLFlBQVlqQyxJQUFJeUQsWUFBWTtvREFDbEMsTUFBTUMsU0FBUzFELElBQUkyRCxTQUFTO29EQUU1QixJQUFJMUIsYUFBYXlCLFVBQVUxRCxJQUFJbUQsTUFBTSxJQUFJO3dEQUN2Q25ELElBQUk0RCxNQUFNO29EQUNaLE9BQU87d0RBQ0xyRCxRQUFRQyxJQUFJLENBQUM7b0RBQ2Y7Z0RBQ0YsRUFBRSxPQUFPcUQsYUFBYTtvREFDcEJ0RCxRQUFRQyxJQUFJLENBQUMsNEJBQTRCcUQ7Z0RBQzNDOzRDQUNGO3dDQUNGOzJEQUFHO2dDQUNMO21EQUNDUixLQUFLO29EQUFDLENBQUNTO29DQUNOekMsWUFBWXlDLGlCQUFpQnBDLFFBQVFvQyxRQUFRLElBQUlwQyxNQUFNcUMsT0FBT0Q7Z0NBQ2hFOzt3QkFDSixFQUFFLE9BQU9BLE9BQU87NEJBQ2R6QyxZQUFZeUMsaUJBQWlCcEMsUUFBUW9DLFFBQVEsSUFBSXBDLE1BQU1xQyxPQUFPRDt3QkFDaEU7b0JBQ0Y7O1lBQ0YsRUFBRSxPQUFPQSxPQUFPO2dCQUNkekMsWUFBWXlDLGlCQUFpQnBDLFFBQVFvQyxRQUFRLElBQUlwQyxNQUFNcUMsT0FBT0Q7WUFDaEU7WUFFQTtvQ0FBTztvQkFDTG5DLGlCQUFpQjtvQkFDakIsSUFBSUMsYUFBYTt3QkFDZixJQUFJOzRCQUNGLHNEQUFzRDs0QkFDdEQsSUFBSUEsWUFBWW9DLE1BQU0sSUFBSSxPQUFPcEMsWUFBWW9DLE1BQU0sS0FBSyxZQUFZO2dDQUNsRXBDLFlBQVlvQyxNQUFNOzRCQUNwQixPQUFPO2dDQUNMekQsUUFBUUMsSUFBSSxDQUFDOzRCQUNmO3dCQUNGLEVBQUUsT0FBT3lELEtBQUs7NEJBQ1oxRCxRQUFRQyxJQUFJLENBQUMsdUJBQXVCeUQ7d0JBQ3RDO29CQUNGO29CQUNBaEQsT0FBT3VDLE9BQU8sR0FBRztnQkFDbkI7O1FBQ0Y7MkJBQUc7UUFBQ3pDO1FBQWFDLFFBQVFxQixLQUFLO1FBQUVmO1FBQWNOLFFBQVF1QixJQUFJO1FBQUV2QixRQUFRd0IsVUFBVTtLQUFDO0lBRS9FLE9BQU87UUFDTHhDLEtBQUtpQixPQUFPdUMsT0FBTztRQUNuQnRDO1FBQ0E0QyxPQUFPMUM7SUFDVDtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIi9Vc2Vycy9raWVyYW5ibGFpci9naXQvZmEvZmxpZ2h0LWFzc3VyYW5jZS9zcmMvYXBwL2NvbXBvbmVudHMvTWFwL0hvb2tzL3VzZU1hcC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcbmltcG9ydCB7IHVzZUVmZmVjdCwgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBtYXBib3hnbCBmcm9tICdtYXBib3gtZ2wnO1xuXG5jb25zdCB3YWl0Rm9yREVNID0gKG1hcDogbWFwYm94Z2wuTWFwLCB0aW1lb3V0TXMgPSAyMDAwMCk6IFByb21pc2U8dm9pZD4gPT4ge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGNvbnN0IHRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIGNvbnNvbGUud2FybihcIuKaoO+4jyBERU0gbG9hZCB0aW1lb3V0IHJlYWNoZWQsIHByb2NlZWRpbmcgYW55d2F5XCIpO1xuICAgICAgcmVzb2x2ZSgpO1xuICAgIH0sIHRpbWVvdXRNcyk7XG5cbiAgICBjb25zdCBjaGVja0RFTSA9ICgpID0+IHtcbiAgICAgIGlmIChtYXAuaXNTb3VyY2VMb2FkZWQoXCJtYXBib3gtZGVtXCIpKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwi4pyFIERFTSBzb3VyY2UgbG9hZGVkIHN1Y2Nlc3NmdWxseVwiKTtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xuICAgICAgICByZXNvbHZlKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBtYXAub25jZShcInNvdXJjZWRhdGFcIiwgY2hlY2tERU0pO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBjaGVja0RFTSgpO1xuICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCB1c2VNYXAgPSAoY29udGFpbmVySWQ6IHN0cmluZywgb3B0aW9uczogbWFwYm94Z2wuTWFwYm94T3B0aW9ucykgPT4ge1xuICBjb25zdCBtYXBSZWYgPSB1c2VSZWY8bWFwYm94Z2wuTWFwIHwgbnVsbD4obnVsbCk7XG4gIGNvbnN0IFt0ZXJyYWluTG9hZGVkLCBzZXRUZXJyYWluTG9hZGVkXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW21hcEVycm9yLCBzZXRNYXBFcnJvcl0gPSB1c2VTdGF0ZTxFcnJvciB8IG51bGw+KG51bGwpO1xuICBjb25zdCBjZW50ZXJTdHJpbmcgPSBKU09OLnN0cmluZ2lmeShvcHRpb25zLmNlbnRlcik7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIWNvbnRhaW5lcklkKSB7XG4gICAgICBzZXRNYXBFcnJvcihuZXcgRXJyb3IoXCJObyBjb250YWluZXJJZCBwcm92aWRlZFwiKSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgbGV0IGlzSW5pdGlhbGl6aW5nID0gdHJ1ZTtcbiAgICBsZXQgbWFwSW5zdGFuY2U6IG1hcGJveGdsLk1hcCB8IG51bGwgPSBudWxsO1xuXG4gICAgdHJ5IHtcbiAgICAgIG1hcGJveGdsLmFjY2Vzc1Rva2VuID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfTUFQQk9YX0FDQ0VTU19UT0tFTiB8fCAnJztcbiAgICAgIGlmICghbWFwYm94Z2wuYWNjZXNzVG9rZW4pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTWFwYm94IGFjY2VzcyB0b2tlbiBpcyBub3Qgc2V0XCIpO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChjb250YWluZXJJZCk7XG4gICAgICBpZiAoIWNvbnRhaW5lcikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENvbnRhaW5lciB3aXRoIGlkIFwiJHtjb250YWluZXJJZH1cIiBub3QgZm91bmRgKTtcbiAgICAgIH1cblxuICAgICAgY29uc3QgbWFwID0gbmV3IG1hcGJveGdsLk1hcCh7XG4gICAgICAgIGNvbnRhaW5lciwgLy8gUGFzcyBET00gZWxlbWVudCBkaXJlY3RseVxuICAgICAgICBzdHlsZTogb3B0aW9ucy5zdHlsZSxcbiAgICAgICAgY2VudGVyOiBKU09OLnBhcnNlKGNlbnRlclN0cmluZyksXG4gICAgICAgIHpvb206IG9wdGlvbnMuem9vbSxcbiAgICAgICAgcHJvamVjdGlvbjogb3B0aW9ucy5wcm9qZWN0aW9uLFxuICAgICAgfSk7XG5cbiAgICAgIG1hcEluc3RhbmNlID0gbWFwO1xuXG4gICAgICBtYXAub25jZSgnc3R5bGUubG9hZCcsICgpID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBpZiAoIW1hcC5nZXRTb3VyY2UoXCJtYXBib3gtZGVtXCIpKSB7XG4gICAgICAgICAgICBtYXAuYWRkU291cmNlKFwibWFwYm94LWRlbVwiLCB7XG4gICAgICAgICAgICAgIHR5cGU6IFwicmFzdGVyLWRlbVwiLFxuICAgICAgICAgICAgICB1cmw6IFwibWFwYm94Oi8vbWFwYm94Lm1hcGJveC10ZXJyYWluLWRlbS12MVwiLFxuICAgICAgICAgICAgICB0aWxlU2l6ZTogNTEyLFxuICAgICAgICAgICAgICBtYXh6b29tOiAxNSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIG1hcC5zZXRUZXJyYWluKHtcbiAgICAgICAgICAgIHNvdXJjZTogXCJtYXBib3gtZGVtXCIsXG4gICAgICAgICAgICBleGFnZ2VyYXRpb246IDEuNSxcbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIFByb21pc2UuYWxsKFtcbiAgICAgICAgICAgIG5ldyBQcm9taXNlPGJvb2xlYW4+KChyZXNvbHZlKSA9PiB7XG4gICAgICAgICAgICAgIGlmIChtYXAubG9hZGVkKCkpIHtcbiAgICAgICAgICAgICAgICByZXNvbHZlKHRydWUpO1xuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIG1hcC5vbmNlKFwibG9hZFwiLCAoKSA9PiByZXNvbHZlKHRydWUpKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICB3YWl0Rm9yREVNKG1hcCkudGhlbigoKSA9PiB0cnVlKS5jYXRjaCgoKSA9PiBmYWxzZSksXG4gICAgICAgICAgXSlcbiAgICAgICAgICAgIC50aGVuKChbbWFwTG9hZGVkLCBkZW1Mb2FkZWRdKSA9PiB7XG4gICAgICAgICAgICAgIGlmICghaXNJbml0aWFsaXppbmcpIHJldHVybjtcbiAgICAgICAgICAgICAgbWFwUmVmLmN1cnJlbnQgPSBtYXA7XG4gICAgICAgICAgICAgIHNldFRlcnJhaW5Mb2FkZWQodHJ1ZSk7XG4gICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgIC8vIEFkZCBjb21wcmVoZW5zaXZlIHZhbGlkYXRpb24gYmVmb3JlIGNhbGxpbmcgcmVzaXplXG4gICAgICAgICAgICAgICAgaWYgKG1hcCAmJiBtYXAubG9hZGVkKSB7XG4gICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAvLyBDaGVjayBpZiBtYXAgaXMgc3RpbGwgbG9hZGVkIGFuZCBjb250YWluZXIgZXhpc3RzXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRhaW5lciA9IG1hcC5nZXRDb250YWluZXIoKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgY2FudmFzID0gbWFwLmdldENhbnZhcygpO1xuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNvbnRhaW5lciAmJiBjYW52YXMgJiYgbWFwLmxvYWRlZCgpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgbWFwLnJlc2l6ZSgpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihcIk1hcCByZXNpemUgc2tpcHBlZDogY29udGFpbmVyIG9yIGNhbnZhcyBub3QgYXZhaWxhYmxlXCIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9IGNhdGNoIChyZXNpemVFcnJvcikge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oXCJFcnJvciBkdXJpbmcgbWFwIHJlc2l6ZTpcIiwgcmVzaXplRXJyb3IpO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSwgMTAwKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICAgICAgICAgIHNldE1hcEVycm9yKGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvciA6IG5ldyBFcnJvcihTdHJpbmcoZXJyb3IpKSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICBzZXRNYXBFcnJvcihlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IgOiBuZXcgRXJyb3IoU3RyaW5nKGVycm9yKSkpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgc2V0TWFwRXJyb3IoZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yIDogbmV3IEVycm9yKFN0cmluZyhlcnJvcikpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgaXNJbml0aWFsaXppbmcgPSBmYWxzZTtcbiAgICAgIGlmIChtYXBJbnN0YW5jZSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIC8vIENoZWNrIGlmIG1hcCBoYXMgYSByZW1vdmUgbWV0aG9kIGFuZCBpcyBzdGlsbCB2YWxpZFxuICAgICAgICAgIGlmIChtYXBJbnN0YW5jZS5yZW1vdmUgJiYgdHlwZW9mIG1hcEluc3RhbmNlLnJlbW92ZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgbWFwSW5zdGFuY2UucmVtb3ZlKCk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihcIk1hcCBhbHJlYWR5IGRlc3Ryb3llZCwgc2tpcHBpbmcgY2xlYW51cFwiKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgIGNvbnNvbGUud2FybihcIkVycm9yIHJlbW92aW5nIG1hcDpcIiwgZXJyKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbWFwUmVmLmN1cnJlbnQgPSBudWxsO1xuICAgIH07XG4gIH0sIFtjb250YWluZXJJZCwgb3B0aW9ucy5zdHlsZSwgY2VudGVyU3RyaW5nLCBvcHRpb25zLnpvb20sIG9wdGlvbnMucHJvamVjdGlvbl0pO1xuXG4gIHJldHVybiB7XG4gICAgbWFwOiBtYXBSZWYuY3VycmVudCxcbiAgICB0ZXJyYWluTG9hZGVkLFxuICAgIGVycm9yOiBtYXBFcnJvcixcbiAgfTtcbn07Il0sIm5hbWVzIjpbInVzZUVmZmVjdCIsInVzZVJlZiIsInVzZVN0YXRlIiwibWFwYm94Z2wiLCJ3YWl0Rm9yREVNIiwibWFwIiwidGltZW91dE1zIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJ0aW1lb3V0Iiwic2V0VGltZW91dCIsImNvbnNvbGUiLCJ3YXJuIiwiY2hlY2tERU0iLCJpc1NvdXJjZUxvYWRlZCIsImxvZyIsImNsZWFyVGltZW91dCIsIm9uY2UiLCJ1c2VNYXAiLCJjb250YWluZXJJZCIsIm9wdGlvbnMiLCJtYXBSZWYiLCJ0ZXJyYWluTG9hZGVkIiwic2V0VGVycmFpbkxvYWRlZCIsIm1hcEVycm9yIiwic2V0TWFwRXJyb3IiLCJjZW50ZXJTdHJpbmciLCJKU09OIiwic3RyaW5naWZ5IiwiY2VudGVyIiwiRXJyb3IiLCJpc0luaXRpYWxpemluZyIsIm1hcEluc3RhbmNlIiwiYWNjZXNzVG9rZW4iLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfTUFQQk9YX0FDQ0VTU19UT0tFTiIsImNvbnRhaW5lciIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJNYXAiLCJzdHlsZSIsInBhcnNlIiwiem9vbSIsInByb2plY3Rpb24iLCJnZXRTb3VyY2UiLCJhZGRTb3VyY2UiLCJ0eXBlIiwidXJsIiwidGlsZVNpemUiLCJtYXh6b29tIiwic2V0VGVycmFpbiIsInNvdXJjZSIsImV4YWdnZXJhdGlvbiIsImFsbCIsImxvYWRlZCIsInRoZW4iLCJjYXRjaCIsIm1hcExvYWRlZCIsImRlbUxvYWRlZCIsImN1cnJlbnQiLCJnZXRDb250YWluZXIiLCJjYW52YXMiLCJnZXRDYW52YXMiLCJyZXNpemUiLCJyZXNpemVFcnJvciIsImVycm9yIiwiU3RyaW5nIiwicmVtb3ZlIiwiZXJyIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./src/app/components/Map/Hooks/useMap.ts\n");

/***/ }),

/***/ "(ssr)/./src/app/components/Map/Hooks/useMarkers.ts":
/*!****************************************************!*\
  !*** ./src/app/components/Map/Hooks/useMarkers.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMarkers: () => (/* binding */ useMarkers)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mapbox_gl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mapbox-gl */ \"(ssr)/./node_modules/mapbox-gl/dist/mapbox-gl.js\");\n/* harmony import */ var mapbox_gl__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(mapbox_gl__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _context_MarkerContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../context/MarkerContext */ \"(ssr)/./src/app/context/MarkerContext.tsx\");\n/* harmony import */ var _Utils_markerPopup__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Utils/markerPopup */ \"(ssr)/./src/app/components/Map/Utils/markerPopup.ts\");\n/* harmony import */ var _services_LayerManager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../services/LayerManager */ \"(ssr)/./src/app/services/LayerManager.ts\");\n/* harmony import */ var _tracking_tracking__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../tracking/tracking */ \"(ssr)/./src/app/components/tracking/tracking.js\");\n/* harmony import */ var _context_AreaOfOpsContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../context/AreaOfOpsContext */ \"(ssr)/./src/app/context/AreaOfOpsContext.tsx\");\n// src/app/hooks/useMarkers.ts\n/* __next_internal_client_entry_do_not_use__ useMarkers auto */ /**\n * useMarkers.ts\n * \n * Purpose:\n * This hook manages map markers for ground stations, observers, and repeaters.\n * It implements premium tier restrictions for marker creation and handles terrain elevation queries.\n * \n * Premium Tier Integration:\n * - Free tier: No markers allowed\n * - Community tier: Limited to 1 marker total\n * - Commercial tier: Up to 10 markers (configurable via PremiumContext)\n * \n * Features:\n * - Creates, updates, and removes markers on the map\n * - Queries terrain elevation for marker placement\n * - Provides error handling for premium tier restrictions\n * - Manages marker popups and visual styling\n * - Handles cleanup of analysis layers\n * \n * Usage:\n * const { \n *   addGroundStation, \n *   addObserver, \n *   addRepeater, \n *   error // Contains any premium tier restriction messages\n * } = useMarkers({ map, terrainLoaded });\n * \n * Related Files:\n * - MarkerContext.tsx: Provides marker state and premium tier checks\n * - PremiumContext.tsx: Defines tier levels and restrictions\n */ \n\n\n\n\n\n\nfunction useMarkers({ map, terrainLoaded }) {\n    // Store all marker references in a single collection\n    const markerRefs = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);\n    // State for premium tier restriction errors\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const { markers, addMarker, updateMarker, removeMarker, defaultElevationOffsets } = (0,_context_MarkerContext__WEBPACK_IMPORTED_MODULE_2__.useMarkersContext)();\n    // Include AO context clear for removing all analysis layers\n    const { setAoTerrainGrid } = (0,_context_AreaOfOpsContext__WEBPACK_IMPORTED_MODULE_6__.useAreaOfOpsContext)();\n    // Helper for querying terrain elevation\n    const queryTerrainElevation = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useMarkers.useCallback[queryTerrainElevation]\": async (coordinates, retryCount = 3)=>{\n            if (!map) {\n                throw new Error(\"Map not initialized\");\n            }\n            try {\n                const elevation = map.queryTerrainElevation(coordinates);\n                if (elevation !== null && elevation !== undefined) {\n                    return elevation;\n                }\n                throw new Error(\"Invalid elevation value\");\n            } catch (error) {\n                console.warn(\"Primary terrain query failed, trying fallback:\", error);\n                if (retryCount > 0) {\n                    try {\n                        const fallbackElevation = await fetchTerrainElevation(coordinates[0], coordinates[1]);\n                        return fallbackElevation;\n                    } catch (fallbackError) {\n                        if (retryCount > 1) {\n                            console.warn(\"Fallback failed, retrying:\", fallbackError);\n                            return queryTerrainElevation(coordinates, retryCount - 1);\n                        }\n                        throw fallbackError;\n                    }\n                }\n                throw error;\n            }\n        }\n    }[\"useMarkers.useCallback[queryTerrainElevation]\"], [\n        map\n    ]);\n    // Fallback function for elevation queries\n    const fetchTerrainElevation = async (lng, lat)=>{\n        try {\n            const tileSize = 512;\n            const zoom = 15;\n            const scale = Math.pow(2, zoom);\n            const latRad = lat * Math.PI / 180;\n            const tileX = Math.floor((lng + 180) / 360 * scale);\n            const tileY = Math.floor((1 - Math.log(Math.tan(latRad) + 1 / Math.cos(latRad)) / Math.PI) / 2 * scale);\n            const pixelX = Math.floor(((lng + 180) / 360 * scale - tileX) * tileSize);\n            const pixelY = Math.floor(((1 - Math.log(Math.tan(latRad) + 1 / Math.cos(latRad)) / Math.PI) / 2 * scale - tileY) * tileSize);\n            const tileURL = `https://api.mapbox.com/v4/mapbox.terrain-rgb/${zoom}/${tileX}/${tileY}@2x.pngraw?access_token=${\"pk.eyJ1IjoiaW50ZWxhZXJvIiwiYSI6ImNtM2EwZzY3ODB5bDgyam9yOTZ1ajE2YWsifQ.b9w33legWjEDzezOZx1N4g\"}`;\n            const response = await fetch(tileURL);\n            const blob = await response.blob();\n            const imageBitmap = await createImageBitmap(blob);\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = tileSize;\n            canvas.height = tileSize;\n            const context = canvas.getContext(\"2d\");\n            if (!context) throw new Error(\"Failed to create canvas context\");\n            context.drawImage(imageBitmap, 0, 0);\n            const imageData = context.getImageData(0, 0, tileSize, tileSize);\n            const idx = (pixelY * tileSize + pixelX) * 4;\n            const [r, g, b] = [\n                imageData.data[idx],\n                imageData.data[idx + 1],\n                imageData.data[idx + 2]\n            ];\n            return -10000 + (r * 256 * 256 + g * 256 + b) * 0.1;\n        } catch (error) {\n            console.error(\"RGB elevation error:\", error);\n            return 0;\n        }\n    };\n    // Helper to create a marker label element\n    const createMarkerLabel = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useMarkers.useCallback[createMarkerLabel]\": (index, markerType)=>{\n            const el = document.createElement('div');\n            el.className = 'marker-label';\n            el.textContent = `${index + 1}`;\n            // Style the label based on marker type\n            el.style.cssText = `\n      position: absolute;\n      bottom: 0;\n      right: -5px;\n      width: 16px;\n      height: 16px;\n      background-color: white;\n      color: black;\n      border-radius: 50%;\n      text-align: center;\n      font-size: 10px;\n      font-weight: bold;\n      line-height: 16px;\n      border: 1px solid ${markerType === 'gcs' ? 'blue' : markerType === 'observer' ? 'green' : 'red'};\n    `;\n            return el;\n        }\n    }[\"useMarkers.useCallback[createMarkerLabel]\"], []);\n    // Generic function to create a marker of any type\n    const createMarker = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useMarkers.useCallback[createMarker]\": async (type)=>{\n            if (!map || !terrainLoaded) return;\n            // Clear any previous errors\n            setError(null);\n            const center = map.getCenter();\n            try {\n                const elevation = await queryTerrainElevation([\n                    center.lng,\n                    center.lat\n                ]);\n                const initialLocation = {\n                    lng: center.lng,\n                    lat: center.lat,\n                    elevation: elevation\n                };\n                console.log(`${type.toUpperCase()} Initial Location:`, initialLocation);\n                // Add marker to context and check result for premium tier restrictions\n                const result = addMarker(type, initialLocation);\n                // If failed due to premium tier restrictions, show error and return\n                if (!result.success) {\n                    setError(result.error);\n                    console.error(`Failed to add ${type} marker:`, result.error);\n                    return;\n                }\n                // Get the marker ID\n                const markerId = result.markerId;\n                // Define colors for different marker types\n                const markerColors = {\n                    gcs: \"blue\",\n                    observer: \"green\",\n                    repeater: \"red\"\n                };\n                // Get markers of this type to determine index\n                const sameTypeMarkers = markers.filter({\n                    \"useMarkers.useCallback[createMarker].sameTypeMarkers\": (m)=>m.type === type\n                }[\"useMarkers.useCallback[createMarker].sameTypeMarkers\"]);\n                const markerIndex = sameTypeMarkers.length - 1; // This will be the index of the new marker\n                const hasMultiple = sameTypeMarkers.length > 1; // Will be true if there are multiple markers now\n                // Create the default marker first with the appropriate color\n                const newMarker = new (mapbox_gl__WEBPACK_IMPORTED_MODULE_1___default().Marker)({\n                    color: markerColors[type],\n                    draggable: true\n                }).setLngLat(center).addTo(map);\n                // Only add label if we have multiple markers of this type\n                if (hasMultiple) {\n                    // Create the label\n                    const label = createMarkerLabel(markerIndex, type);\n                    // Get the marker element and append the label to it\n                    const markerElement = newMarker.getElement();\n                    markerElement.appendChild(label);\n                }\n                // Store reference to marker\n                markerRefs.current.push({\n                    id: markerId,\n                    marker: newMarker,\n                    type\n                });\n                // Create and set popup\n                const popup = (0,_Utils_markerPopup__WEBPACK_IMPORTED_MODULE_3__.createMarkerPopup)(type, elevation, defaultElevationOffsets[type], {\n                    \"useMarkers.useCallback[createMarker].popup\": ()=>{\n                        // Delete marker callback\n                        newMarker.remove();\n                        removeMarker(markerId);\n                        markerRefs.current = markerRefs.current.filter({\n                            \"useMarkers.useCallback[createMarker].popup\": (ref)=>ref.id !== markerId\n                        }[\"useMarkers.useCallback[createMarker].popup\"]);\n                    }\n                }[\"useMarkers.useCallback[createMarker].popup\"], markerId, markerIndex, hasMultiple);\n                newMarker.setPopup(popup).togglePopup();\n                // Handle marker drag events\n                newMarker.on(\"dragend\", {\n                    \"useMarkers.useCallback[createMarker]\": async ()=>{\n                        const lngLat = newMarker.getLngLat();\n                        try {\n                            const newElevation = await queryTerrainElevation([\n                                lngLat.lng,\n                                lngLat.lat\n                            ]);\n                            const location = {\n                                lng: lngLat.lng,\n                                lat: lngLat.lat,\n                                elevation: newElevation\n                            };\n                            // Update marker in context\n                            updateMarker(markerId, {\n                                location\n                            });\n                            // Clean up outdated analysis layers\n                            const layerPrefix = type === 'gcs' ? _services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.MAP_LAYERS.GCS_GRID : type === 'observer' ? _services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.MAP_LAYERS.OBSERVER_GRID : _services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.MAP_LAYERS.REPEATER_GRID;\n                            _services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.layerManager.removeLayer(_services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.MAP_LAYERS.MERGED_VISIBILITY);\n                            _services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.layerManager.removeLayer(`${layerPrefix}-${markerId}`);\n                            // Get current markers of same type for indexing\n                            const currentSameTypeMarkers = markers.filter({\n                                \"useMarkers.useCallback[createMarker].currentSameTypeMarkers\": (m)=>m.type === type\n                            }[\"useMarkers.useCallback[createMarker].currentSameTypeMarkers\"]);\n                            const currentMarkerIndex = currentSameTypeMarkers.findIndex({\n                                \"useMarkers.useCallback[createMarker].currentMarkerIndex\": (m)=>m.id === markerId\n                            }[\"useMarkers.useCallback[createMarker].currentMarkerIndex\"]);\n                            const hasMultipleNow = currentSameTypeMarkers.length > 1;\n                            // Recreate popup with updated elevation\n                            const newPopup = (0,_Utils_markerPopup__WEBPACK_IMPORTED_MODULE_3__.createMarkerPopup)(type, newElevation, defaultElevationOffsets[type], {\n                                \"useMarkers.useCallback[createMarker].newPopup\": ()=>{\n                                    newMarker.remove();\n                                    removeMarker(markerId);\n                                    markerRefs.current = markerRefs.current.filter({\n                                        \"useMarkers.useCallback[createMarker].newPopup\": (ref)=>ref.id !== markerId\n                                    }[\"useMarkers.useCallback[createMarker].newPopup\"]);\n                                }\n                            }[\"useMarkers.useCallback[createMarker].newPopup\"], markerId, currentMarkerIndex, hasMultipleNow);\n                            newMarker.setPopup(newPopup).togglePopup();\n                        } catch (error) {\n                            console.error(`Error updating ${type.toUpperCase()} elevation:`, error);\n                        }\n                    }\n                }[\"useMarkers.useCallback[createMarker]\"]);\n                return initialLocation;\n            } catch (error) {\n                console.error(`Error initializing ${type.toUpperCase()}:`, error);\n                setError(`Error creating ${type} marker: ${error instanceof Error ? error.message : 'Unknown error'}`);\n            }\n        }\n    }[\"useMarkers.useCallback[createMarker]\"], [\n        map,\n        terrainLoaded,\n        queryTerrainElevation,\n        addMarker,\n        updateMarker,\n        removeMarker,\n        defaultElevationOffsets,\n        markers,\n        createMarkerLabel\n    ]);\n    // Type-specific marker creation functions\n    const addGroundStation = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useMarkers.useCallback[addGroundStation]\": async ()=>{\n            (0,_tracking_tracking__WEBPACK_IMPORTED_MODULE_5__.trackEventWithForm)(\"add_ground_station_click\", {\n                panel: \"map.tsx\"\n            });\n            return createMarker('gcs');\n        }\n    }[\"useMarkers.useCallback[addGroundStation]\"], [\n        createMarker\n    ]);\n    const addObserver = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useMarkers.useCallback[addObserver]\": async ()=>{\n            (0,_tracking_tracking__WEBPACK_IMPORTED_MODULE_5__.trackEventWithForm)(\"add_observer_click\", {\n                panel: \"map.tsx\"\n            });\n            return createMarker('observer');\n        }\n    }[\"useMarkers.useCallback[addObserver]\"], [\n        createMarker\n    ]);\n    const addRepeater = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useMarkers.useCallback[addRepeater]\": async ()=>{\n            (0,_tracking_tracking__WEBPACK_IMPORTED_MODULE_5__.trackEventWithForm)(\"add_repeater_click\", {\n                panel: \"map.tsx\"\n            });\n            return createMarker('repeater');\n        }\n    }[\"useMarkers.useCallback[addRepeater]\"], [\n        createMarker\n    ]);\n    // Update marker popups when elevation offsets change\n    const updateMarkerPopups = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useMarkers.useCallback[updateMarkerPopups]\": ()=>{\n            markerRefs.current.forEach({\n                \"useMarkers.useCallback[updateMarkerPopups]\": (ref)=>{\n                    // Find marker data in context\n                    const markerData = markers.find({\n                        \"useMarkers.useCallback[updateMarkerPopups].markerData\": (m)=>m.id === ref.id\n                    }[\"useMarkers.useCallback[updateMarkerPopups].markerData\"]);\n                    if (markerData && markerData.location.elevation !== null) {\n                        // Get markers of same type to determine index\n                        const sameTypeMarkers = markers.filter({\n                            \"useMarkers.useCallback[updateMarkerPopups].sameTypeMarkers\": (m)=>m.type === markerData.type\n                        }[\"useMarkers.useCallback[updateMarkerPopups].sameTypeMarkers\"]);\n                        const markerIndex = sameTypeMarkers.findIndex({\n                            \"useMarkers.useCallback[updateMarkerPopups].markerIndex\": (m)=>m.id === markerData.id\n                        }[\"useMarkers.useCallback[updateMarkerPopups].markerIndex\"]);\n                        const hasMultiple = sameTypeMarkers.length > 1;\n                        const updatedPopup = (0,_Utils_markerPopup__WEBPACK_IMPORTED_MODULE_3__.createMarkerPopup)(markerData.type, markerData.location.elevation, markerData.elevationOffset, {\n                            \"useMarkers.useCallback[updateMarkerPopups].updatedPopup\": ()=>{\n                                ref.marker.remove();\n                                removeMarker(ref.id);\n                                markerRefs.current = markerRefs.current.filter({\n                                    \"useMarkers.useCallback[updateMarkerPopups].updatedPopup\": (item)=>item.id !== ref.id\n                                }[\"useMarkers.useCallback[updateMarkerPopups].updatedPopup\"]);\n                            }\n                        }[\"useMarkers.useCallback[updateMarkerPopups].updatedPopup\"], markerData.id, markerIndex, hasMultiple);\n                        ref.marker.setPopup(updatedPopup);\n                        if (ref.marker.getPopup()?.isOpen()) {\n                            ref.marker.getPopup()?.setDOMContent(updatedPopup.getElement());\n                        }\n                    }\n                }\n            }[\"useMarkers.useCallback[updateMarkerPopups]\"]);\n        }\n    }[\"useMarkers.useCallback[updateMarkerPopups]\"], [\n        markers,\n        removeMarker\n    ]);\n    // Remove all the analysis layers\n    const removeAllAnalysisLayers = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useMarkers.useCallback[removeAllAnalysisLayers]\": ()=>{\n            // Remove the analysis layers\n            _services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.layerManager.removeLayer(_services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.MAP_LAYERS.ELOS_GRID);\n            _services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.layerManager.removeLayer(_services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.MAP_LAYERS.FLIGHT_PATH_VISIBILITY);\n            _services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.layerManager.removeLayer(_services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.MAP_LAYERS.GCS_GRID);\n            _services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.layerManager.removeLayer(_services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.MAP_LAYERS.OBSERVER_GRID);\n            _services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.layerManager.removeLayer(_services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.MAP_LAYERS.REPEATER_GRID);\n            _services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.layerManager.removeLayer(_services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.MAP_LAYERS.MERGED_VISIBILITY);\n            _services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.layerManager.removeLayer(_services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.MAP_LAYERS.AOTERRAIN_GRID);\n            // Reset the grid state in context so it can be regenerated\n            setAoTerrainGrid(null);\n            // Also remove any marker-specific layers using marker IDs\n            markers.forEach({\n                \"useMarkers.useCallback[removeAllAnalysisLayers]\": (marker)=>{\n                    const layerPrefix = marker.type === 'gcs' ? _services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.MAP_LAYERS.GCS_GRID : marker.type === 'observer' ? _services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.MAP_LAYERS.OBSERVER_GRID : _services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.MAP_LAYERS.REPEATER_GRID;\n                    _services_LayerManager__WEBPACK_IMPORTED_MODULE_4__.layerManager.removeLayer(`${layerPrefix}-${marker.id}`);\n                }\n            }[\"useMarkers.useCallback[removeAllAnalysisLayers]\"]);\n        }\n    }[\"useMarkers.useCallback[removeAllAnalysisLayers]\"], [\n        markers,\n        setAoTerrainGrid\n    ]);\n    // Cleanup on unmount\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useMarkers.useEffect\": ()=>{\n            return ({\n                \"useMarkers.useEffect\": ()=>{\n                    markerRefs.current.forEach({\n                        \"useMarkers.useEffect\": (ref)=>{\n                            ref.marker.remove();\n                        }\n                    }[\"useMarkers.useEffect\"]);\n                }\n            })[\"useMarkers.useEffect\"];\n        }\n    }[\"useMarkers.useEffect\"], []);\n    return {\n        markers,\n        addGroundStation,\n        addObserver,\n        addRepeater,\n        updateMarkerPopups,\n        removeAllAnalysisLayers,\n        markerRefs,\n        error\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/components/Map/Hooks/useMarkers.ts\n");

/***/ }),

/***/ "(ssr)/./src/app/components/Map/Hooks/useMeasurement.ts":
/*!********************************************************!*\
  !*** ./src/app/components/Map/Hooks/useMeasurement.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMeasurement: () => (/* binding */ useMeasurement)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _context_mapcontext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../context/mapcontext */ \"(ssr)/./src/app/context/mapcontext.tsx\");\n/* harmony import */ var _turf_turf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @turf/turf */ \"(ssr)/./node_modules/@turf/distance/dist/esm/index.js\");\n/* harmony import */ var mapbox_gl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! mapbox-gl */ \"(ssr)/./node_modules/mapbox-gl/dist/mapbox-gl.js\");\n/* harmony import */ var mapbox_gl__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(mapbox_gl__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _components_tracking_tracking__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../components/tracking/tracking */ \"(ssr)/./src/app/components/tracking/tracking.js\");\n// useMeasurement.ts\n// This hook handles distance measurement functionality on the map,\n// allowing users to click points and visualize the distance between them.\n// It integrates with the MapContext to access the map instance and provides\n// a clean API for measuring distances with visual feedback.\n\n\n\n\n\nconst useMeasurement = ()=>{\n    const { map } = (0,_context_mapcontext__WEBPACK_IMPORTED_MODULE_1__.useMapContext)();\n    const [measurement, setMeasurement] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [isMeasuring, setIsMeasuring] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    // Use refs to maintain consistent references for event handlers\n    const markersRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);\n    const movingPopupRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const pointsRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);\n    // Constants for layer IDs\n    const FIXED_LINE_SOURCE = 'measurement-fixed-line-source';\n    const TEMP_LINE_SOURCE = 'measurement-temp-line-source';\n    const FIXED_LINE_LAYER = 'measurement-fixed-line-layer';\n    const TEMP_LINE_LAYER = 'measurement-temp-line-layer';\n    // Clean up measurement resources\n    const cleanupMeasurement = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useMeasurement.useCallback[cleanupMeasurement]\": ()=>{\n            // Add comprehensive map validation\n            if (!map || !map.getStyle || !map.getCanvas) {\n                console.warn(\"Map not available or already destroyed during measurement cleanup\");\n                return;\n            }\n            try {\n                // Check if map is still loaded\n                if (!map.loaded()) {\n                    console.warn(\"Map not loaded during measurement cleanup\");\n                    return;\n                }\n            } catch (mapStateError) {\n                console.warn(\"Error checking map state during cleanup:\", mapStateError);\n                return;\n            }\n            // Remove markers\n            markersRef.current.forEach({\n                \"useMeasurement.useCallback[cleanupMeasurement]\": (marker)=>{\n                    try {\n                        marker.remove();\n                    } catch (markerError) {\n                        console.warn(\"Error removing marker:\", markerError);\n                    }\n                }\n            }[\"useMeasurement.useCallback[cleanupMeasurement]\"]);\n            markersRef.current = [];\n            // Remove popup\n            if (movingPopupRef.current) {\n                try {\n                    movingPopupRef.current.remove();\n                    movingPopupRef.current = null;\n                } catch (popupError) {\n                    console.warn(\"Error removing popup:\", popupError);\n                }\n            }\n            // Remove layers and sources - carefully check if they exist first\n            try {\n                if (map.getLayer && map.getLayer(FIXED_LINE_LAYER)) {\n                    map.removeLayer(FIXED_LINE_LAYER);\n                }\n                if (map.getLayer && map.getLayer(TEMP_LINE_LAYER)) {\n                    map.removeLayer(TEMP_LINE_LAYER);\n                }\n                if (map.getSource && map.getSource(FIXED_LINE_SOURCE)) {\n                    map.removeSource(FIXED_LINE_SOURCE);\n                }\n                if (map.getSource && map.getSource(TEMP_LINE_SOURCE)) {\n                    map.removeSource(TEMP_LINE_SOURCE);\n                }\n            } catch (e) {\n                console.error(\"Error cleaning up measurement layers:\", e);\n            }\n            // Reset cursor and points - with additional safety checks\n            try {\n                if (map.getCanvas && map.getCanvas()) {\n                    map.getCanvas().style.cursor = '';\n                }\n            } catch (canvasError) {\n                console.warn(\"Error resetting cursor:\", canvasError);\n            }\n            pointsRef.current = [];\n        }\n    }[\"useMeasurement.useCallback[cleanupMeasurement]\"], [\n        map\n    ]);\n    // Clear all current measurements but keep measuring active\n    const clearMeasurement = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useMeasurement.useCallback[clearMeasurement]\": ()=>{\n            if (!map) return;\n            // Remove markers\n            markersRef.current.forEach({\n                \"useMeasurement.useCallback[clearMeasurement]\": (marker)=>marker.remove()\n            }[\"useMeasurement.useCallback[clearMeasurement]\"]);\n            markersRef.current = [];\n            // Reset the fixed line to empty\n            try {\n                if (map.getSource(FIXED_LINE_SOURCE)) {\n                    const source = map.getSource(FIXED_LINE_SOURCE);\n                    source.setData({\n                        type: 'FeatureCollection',\n                        features: []\n                    });\n                }\n                if (map.getSource(TEMP_LINE_SOURCE)) {\n                    const tempSource = map.getSource(TEMP_LINE_SOURCE);\n                    tempSource.setData({\n                        type: 'FeatureCollection',\n                        features: []\n                    });\n                }\n            } catch (e) {\n                console.error(\"Error clearing measurement lines:\", e);\n            }\n            // Reset points and measurement data\n            pointsRef.current = [];\n            setMeasurement({\n                distance: 0,\n                points: [],\n                segments: []\n            });\n            (0,_components_tracking_tracking__WEBPACK_IMPORTED_MODULE_3__.trackEventWithForm)('measurement_cleared', {\n                panel: 'measurement-controls'\n            });\n        }\n    }[\"useMeasurement.useCallback[clearMeasurement]\"], [\n        map\n    ]);\n    // Handle click to add measurement point\n    const handleClick = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useMeasurement.useCallback[handleClick]\": (e)=>{\n            if (!map || !isMeasuring) return;\n            const point = [\n                e.lngLat.lng,\n                e.lngLat.lat\n            ];\n            pointsRef.current.push(point);\n            const points = pointsRef.current;\n            // Update GeoJSON for the line\n            try {\n                if (map.getSource(FIXED_LINE_SOURCE)) {\n                    const source = map.getSource(FIXED_LINE_SOURCE);\n                    source.setData({\n                        type: 'FeatureCollection',\n                        features: points.length >= 2 ? [\n                            {\n                                type: 'Feature',\n                                geometry: {\n                                    type: 'LineString',\n                                    coordinates: points\n                                },\n                                properties: {}\n                            }\n                        ] : []\n                    });\n                }\n            } catch (e) {\n                console.error(\"Error updating fixed line source:\", e);\n            }\n            // Calculate segment and total distances\n            let segments = [];\n            let totalDistance = 0;\n            if (points.length >= 2) {\n                for(let i = 1; i < points.length; i++){\n                    const segment = _turf_turf__WEBPACK_IMPORTED_MODULE_4__.distance(points[i - 1], points[i], {\n                        units: 'meters'\n                    });\n                    segments.push(segment);\n                    totalDistance += segment;\n                }\n            }\n            // Add marker at clicked point\n            try {\n                const marker = new (mapbox_gl__WEBPACK_IMPORTED_MODULE_2___default().Marker)({\n                    color: '#4B56D2'\n                }).setLngLat(point).addTo(map);\n                // Add popup with distance information\n                if (points.length > 1) {\n                    const lastSegmentDistance = segments[segments.length - 1];\n                    const popup = new (mapbox_gl__WEBPACK_IMPORTED_MODULE_2___default().Popup)({\n                        closeButton: false,\n                        className: 'custom-popup',\n                        offset: 25\n                    }).setLngLat(point).setHTML(`<strong style=\"color: black; background: white; padding: 4px;\">Segment: ${(lastSegmentDistance / 1000).toFixed(2)} km<br>Total: ${(totalDistance / 1000).toFixed(2)} km</strong>`);\n                    marker.setPopup(popup);\n                    popup.addTo(map);\n                } else {\n                    // First point just shows \"Start\"\n                    const popup = new (mapbox_gl__WEBPACK_IMPORTED_MODULE_2___default().Popup)({\n                        closeButton: false,\n                        className: 'custom-popup',\n                        offset: 25\n                    }).setLngLat(point).setHTML(`<strong style=\"color: black; background: white; padding: 4px;\">Start</strong>`);\n                    marker.setPopup(popup);\n                    popup.addTo(map);\n                }\n                markersRef.current.push(marker);\n            } catch (e) {\n                console.error(\"Error adding marker:\", e);\n            }\n            // Reset temporary line\n            try {\n                if (map.getSource(TEMP_LINE_SOURCE)) {\n                    const tempSource = map.getSource(TEMP_LINE_SOURCE);\n                    tempSource.setData({\n                        type: 'FeatureCollection',\n                        features: []\n                    });\n                }\n            } catch (e) {\n                console.error(\"Error updating temp line source:\", e);\n            }\n            // Update measurement state\n            setMeasurement({\n                distance: totalDistance,\n                points: [\n                    ...points\n                ],\n                segments\n            });\n        }\n    }[\"useMeasurement.useCallback[handleClick]\"], [\n        map,\n        isMeasuring\n    ]);\n    // Handle mouse move to update temporary line\n    const handleMouseMove = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useMeasurement.useCallback[handleMouseMove]\": (e)=>{\n            if (!map || !isMeasuring || pointsRef.current.length === 0) return;\n            const mousePoint = [\n                e.lngLat.lng,\n                e.lngLat.lat\n            ];\n            const lastPoint = pointsRef.current[pointsRef.current.length - 1];\n            // Update temporary line\n            try {\n                if (map.getSource(TEMP_LINE_SOURCE)) {\n                    const tempSource = map.getSource(TEMP_LINE_SOURCE);\n                    tempSource.setData({\n                        type: 'FeatureCollection',\n                        features: [\n                            {\n                                type: 'Feature',\n                                geometry: {\n                                    type: 'LineString',\n                                    coordinates: [\n                                        lastPoint,\n                                        mousePoint\n                                    ]\n                                },\n                                properties: {}\n                            }\n                        ]\n                    });\n                }\n            } catch (e) {\n                console.error(\"Error updating temp line source:\", e);\n            }\n            // Update moving popup with distance\n            const distance = _turf_turf__WEBPACK_IMPORTED_MODULE_4__.distance(lastPoint, mousePoint, {\n                units: 'meters'\n            });\n            try {\n                if (!movingPopupRef.current) {\n                    movingPopupRef.current = new (mapbox_gl__WEBPACK_IMPORTED_MODULE_2___default().Popup)({\n                        closeButton: false,\n                        className: 'custom-popup',\n                        offset: 25\n                    }).addTo(map);\n                }\n                movingPopupRef.current.setLngLat(e.lngLat).setHTML(`<strong style=\"color: black; background: white; padding: 4px;\">${(distance / 1000).toFixed(2)} km</strong>`);\n            } catch (e) {\n                console.error(\"Error updating moving popup:\", e);\n            }\n        }\n    }[\"useMeasurement.useCallback[handleMouseMove]\"], [\n        map,\n        isMeasuring\n    ]);\n    // Start a new measurement\n    const startMeasurement = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useMeasurement.useCallback[startMeasurement]\": ()=>{\n            if (!map) return;\n            // First clean up any existing measurement\n            cleanupMeasurement();\n            // Set up measurement layers\n            try {\n                // Initialize fixed line source/layer for completed segments\n                map.addSource(FIXED_LINE_SOURCE, {\n                    type: 'geojson',\n                    data: {\n                        type: 'FeatureCollection',\n                        features: []\n                    }\n                });\n                map.addLayer({\n                    id: FIXED_LINE_LAYER,\n                    type: 'line',\n                    source: FIXED_LINE_SOURCE,\n                    paint: {\n                        'line-color': '#4B56D2',\n                        'line-width': 3\n                    }\n                });\n                // Initialize temp line source/layer for active segment\n                map.addSource(TEMP_LINE_SOURCE, {\n                    type: 'geojson',\n                    data: {\n                        type: 'FeatureCollection',\n                        features: []\n                    }\n                });\n                map.addLayer({\n                    id: TEMP_LINE_LAYER,\n                    type: 'line',\n                    source: TEMP_LINE_SOURCE,\n                    paint: {\n                        'line-color': '#4B56D2',\n                        'line-width': 2,\n                        'line-dasharray': [\n                            2,\n                            2\n                        ]\n                    }\n                });\n                // Change cursor to crosshair\n                map.getCanvas().style.cursor = 'crosshair';\n                // Initialize state\n                setIsMeasuring(true);\n                pointsRef.current = [];\n                setMeasurement({\n                    distance: 0,\n                    points: [],\n                    segments: []\n                });\n                (0,_components_tracking_tracking__WEBPACK_IMPORTED_MODULE_3__.trackEventWithForm)('measurement_started', {\n                    panel: 'measurement-controls'\n                });\n            } catch (e) {\n                console.error(\"Error initializing measurement:\", e);\n            }\n        }\n    }[\"useMeasurement.useCallback[startMeasurement]\"], [\n        map,\n        cleanupMeasurement\n    ]);\n    // Stop measuring\n    const stopMeasurement = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useMeasurement.useCallback[stopMeasurement]\": ()=>{\n            if (!map) return;\n            setIsMeasuring(false);\n            // Remove the temporary line and moving popup\n            try {\n                if (movingPopupRef.current) {\n                    movingPopupRef.current.remove();\n                    movingPopupRef.current = null;\n                }\n                if (map.getSource(TEMP_LINE_SOURCE)) {\n                    const tempSource = map.getSource(TEMP_LINE_SOURCE);\n                    tempSource.setData({\n                        type: 'FeatureCollection',\n                        features: []\n                    });\n                }\n                // Reset cursor\n                map.getCanvas().style.cursor = '';\n            } catch (e) {\n                console.error(\"Error stopping measurement:\", e);\n            }\n        }\n    }[\"useMeasurement.useCallback[stopMeasurement]\"], [\n        map\n    ]);\n    // Handle right-click to finish measurement\n    const handleRightClick = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useMeasurement.useCallback[handleRightClick]\": (e)=>{\n            if (!map || !isMeasuring) return;\n            e.preventDefault();\n            stopMeasurement();\n            (0,_components_tracking_tracking__WEBPACK_IMPORTED_MODULE_3__.trackEventWithForm)('measurement_completed', {\n                panel: 'measurement-controls',\n                points: pointsRef.current.length,\n                distance: measurement?.distance || 0\n            });\n        }\n    }[\"useMeasurement.useCallback[handleRightClick]\"], [\n        map,\n        isMeasuring,\n        measurement,\n        stopMeasurement\n    ]);\n    // Set up and clean up event listeners\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useMeasurement.useEffect\": ()=>{\n            if (!map) return;\n            if (isMeasuring) {\n                map.on('click', handleClick);\n                map.on('mousemove', handleMouseMove);\n                map.on('contextmenu', handleRightClick);\n            }\n            return ({\n                \"useMeasurement.useEffect\": ()=>{\n                    if (map) {\n                        map.off('click', handleClick);\n                        map.off('mousemove', handleMouseMove);\n                        map.off('contextmenu', handleRightClick);\n                    }\n                }\n            })[\"useMeasurement.useEffect\"];\n        }\n    }[\"useMeasurement.useEffect\"], [\n        map,\n        isMeasuring,\n        handleClick,\n        handleMouseMove,\n        handleRightClick\n    ]);\n    // Clean up when the component unmounts\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useMeasurement.useEffect\": ()=>{\n            return ({\n                \"useMeasurement.useEffect\": ()=>{\n                    // Use setTimeout to ensure cleanup happens after any pending operations\n                    setTimeout({\n                        \"useMeasurement.useEffect\": ()=>{\n                            try {\n                                cleanupMeasurement();\n                            } catch (cleanupError) {\n                                console.warn(\"Error during measurement cleanup:\", cleanupError);\n                            }\n                        }\n                    }[\"useMeasurement.useEffect\"], 0);\n                }\n            })[\"useMeasurement.useEffect\"];\n        }\n    }[\"useMeasurement.useEffect\"], [\n        cleanupMeasurement\n    ]);\n    return {\n        startMeasurement,\n        stopMeasurement,\n        clearMeasurement,\n        measurement,\n        isMeasuring\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/components/Map/Hooks/useMeasurement.ts\n");

/***/ }),

/***/ "(ssr)/./src/app/components/Map/LayerControls.tsx":
/*!**************************************************!*\
  !*** ./src/app/components/Map/LayerControls.tsx ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _context_mapcontext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../context/mapcontext */ \"(ssr)/./src/app/context/mapcontext.tsx\");\n/* harmony import */ var _services_LayerManager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../services/LayerManager */ \"(ssr)/./src/app/services/LayerManager.ts\");\n/* harmony import */ var _tracking_tracking__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../tracking/tracking */ \"(ssr)/./src/app/components/tracking/tracking.js\");\n/* harmony import */ var _AO_Hooks_useAreaOpsProcessor__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../AO/Hooks/useAreaOpsProcessor */ \"(ssr)/./src/app/components/AO/Hooks/useAreaOpsProcessor.ts\");\n/* harmony import */ var _UI_PremiumButton__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../UI/PremiumButton */ \"(ssr)/./src/app/components/UI/PremiumButton.tsx\");\n/**\n * src/app/components/UI/LayerControls.tsx\n * \n * Purpose:\n * Provides unified access to map layer controls with premium-feature awareness.\n * Controls visibility of various map layers (powerlines, airfields, terrain) and\n * provides access to analysis tools based on the user's subscription tier.\n * \n * Related to:\n * - PremiumContext.tsx (for permission checks)\n * - PremiumButton.tsx (for access control UI)\n * - MapContext.tsx (for layer management)\n * - AreaOpsProcessor.tsx (for terrain operations)\n */ \n\n\n\n\n\n\nconst LayerControls = ({ onToggleDBYD, activePanel, togglePanel, flightPlan, setShowUploader })=>{\n    const { map, toggleLayer } = (0,_context_mapcontext__WEBPACK_IMPORTED_MODULE_2__.useMapContext)();\n    const { showAreaOfOperations, generateTerrainGrid } = (0,_AO_Hooks_useAreaOpsProcessor__WEBPACK_IMPORTED_MODULE_5__.useAreaOpsProcessor)();\n    const [isTerrainGridVisible, setIsTerrainGridVisible] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [gridResolution, setGridResolution] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(30); // Default grid resolution in meters\n    const [gridRange, setGridRange] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(500); // Default grid range in meters\n    const bydLayerHandlerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    if (!map) return null;\n    const handleToggleTerrainGrid = async ()=>{\n        // Make AO visible and generate terrain grid if not already visible\n        if (!isTerrainGridVisible) {\n            showAreaOfOperations();\n            await generateTerrainGrid();\n        }\n        toggleLayer(_services_LayerManager__WEBPACK_IMPORTED_MODULE_3__.MAP_LAYERS.AOTERRAIN_GRID);\n        setIsTerrainGridVisible(!isTerrainGridVisible);\n        (0,_tracking_tracking__WEBPACK_IMPORTED_MODULE_4__.trackEventWithForm)('toggle_terrain_grid_click', {\n            panel: 'layer-controls'\n        });\n    };\n    const handleDBYDPowerlines = ()=>{\n        // Show Area of Operations when DBYD is requested\n        showAreaOfOperations();\n        if (onToggleDBYD) {\n            onToggleDBYD();\n        }\n        (0,_tracking_tracking__WEBPACK_IMPORTED_MODULE_4__.trackEventWithForm)('DYBDpowerlines_add_overlay_click', {\n            panel: 'layer-controls'\n        });\n    };\n    // Determine which terrain feature ID to use based on parameters\n    const getTerrainFeatureId = ()=>{\n        if (gridResolution < 30) {\n            return 'high_resolution_grid';\n        }\n        if (gridRange > 500) {\n            return 'extended_grid_range';\n        }\n        return 'terrain_analysis';\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex flex-col gap-2 w-fit rounded-md shadow-md\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_UI_PremiumButton__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                featureId: \"hv_powerlines\",\n                onClick: ()=>{\n                    (0,_tracking_tracking__WEBPACK_IMPORTED_MODULE_4__.trackEventWithForm)('powerlines_add_overlay_click', {\n                        panel: 'layer-controls'\n                    });\n                    toggleLayer(_services_LayerManager__WEBPACK_IMPORTED_MODULE_3__.MAP_LAYERS.POWERLINES);\n                    toggleLayer(_services_LayerManager__WEBPACK_IMPORTED_MODULE_3__.MAP_LAYERS.POWERLINES_HITBOX);\n                },\n                className: \"map-button bg-gray-100 hover:bg-gray-200 flex items-center justify-start\",\n                showIndicator: false,\n                children: \"Toggle HV Powerlines ⚡️\"\n            }, void 0, false, {\n                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/LayerControls.tsx\",\n                lineNumber: 85,\n                columnNumber: 5\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_UI_PremiumButton__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                featureId: \"airspace_analysis\",\n                onClick: ()=>{\n                    (0,_tracking_tracking__WEBPACK_IMPORTED_MODULE_4__.trackEventWithForm)('airspace_add_overlay_click', {\n                        panel: 'layer-controls'\n                    });\n                    toggleLayer(_services_LayerManager__WEBPACK_IMPORTED_MODULE_3__.MAP_LAYERS.AIRFIELDS);\n                    toggleLayer(_services_LayerManager__WEBPACK_IMPORTED_MODULE_3__.MAP_LAYERS.AIRFIELDS_LABELS);\n                },\n                className: \"map-button bg-gray-100 hover:bg-gray-200 flex items-center justify-start\",\n                showIndicator: false,\n                children: \"Toggle Aerodrome Overlay ✈️\"\n            }, void 0, false, {\n                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/LayerControls.tsx\",\n                lineNumber: 98,\n                columnNumber: 5\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_UI_PremiumButton__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                featureId: \"local_powerlines\",\n                onClick: handleDBYDPowerlines,\n                className: \"map-button bg-gray-100 hover:bg-gray-200 flex items-center justify-start\",\n                children: \"Toggle Local Powerlines \\uD83C\\uDFE1\"\n            }, void 0, false, {\n                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/LayerControls.tsx\",\n                lineNumber: 111,\n                columnNumber: 5\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_UI_PremiumButton__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                featureId: getTerrainFeatureId(),\n                onClick: handleToggleTerrainGrid,\n                className: \"map-button bg-gray-100 hover:bg-gray-200 flex items-center justify-start\",\n                permissionParams: {\n                    gridResolution: gridResolution,\n                    gridRange: gridRange\n                },\n                children: [\n                    isTerrainGridVisible ? 'Hide' : 'Show',\n                    \" AO Terrain Grid \\uD83C\\uDF0D\"\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/LayerControls.tsx\",\n                lineNumber: 119,\n                columnNumber: 5\n            }, undefined),\n            togglePanel && setShowUploader && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                children: [\n                    flightPlan && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_UI_PremiumButton__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                        featureId: \"flight_path_analysis\",\n                        onClick: ()=>{\n                            (0,_tracking_tracking__WEBPACK_IMPORTED_MODULE_4__.trackEventWithForm)('upload_flight_plan_click', {\n                                panel: 'layer-controls'\n                            });\n                            setShowUploader(true);\n                        },\n                        className: \"map-button bg-gray-100 hover:bg-gray-200 flex items-center justify-start gap-2\",\n                        children: \"Upload Flight Plan\"\n                    }, void 0, false, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/LayerControls.tsx\",\n                        lineNumber: 135,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_UI_PremiumButton__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                        featureId: \"merged_analysis\",\n                        onClick: ()=>{\n                            (0,_tracking_tracking__WEBPACK_IMPORTED_MODULE_4__.trackEventWithForm)('own_dem_data_request', {\n                                panel: 'layer-controls'\n                            });\n                            window.alert('Coming Soon!');\n                        },\n                        className: \"map-button bg-gray-100 hover:bg-gray-200 flex items-center justify-start gap-2\",\n                        children: \"Add Your Own DEM Data\"\n                    }, void 0, false, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/LayerControls.tsx\",\n                        lineNumber: 147,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/LayerControls.tsx\",\n        lineNumber: 83,\n        columnNumber: 3\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (LayerControls);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/components/Map/LayerControls.tsx\n");

/***/ }),

/***/ "(ssr)/./src/app/components/Map/MapLegend.tsx":
/*!**********************************************!*\
  !*** ./src/app/components/Map/MapLegend.tsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n// components/Map/Displays/MapLegend.tsx\n\n\nconst MapLegend = ()=>{\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"map-legend absolute bottom-4 right-4 bg-white bg-opacity-80 p-3 rounded-lg shadow-md\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h4\", {\n                className: \"font-semibold mb-2\",\n                children: \"Legend\"\n            }, void 0, false, {\n                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MapLegend.tsx\",\n                lineNumber: 7,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex flex-col gap-1\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center gap-2\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"w-4 h-4 bg-[#d32f2f] block rounded\"\n                            }, void 0, false, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MapLegend.tsx\",\n                                lineNumber: 10,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                children: \"0% Visibility (Red)\"\n                            }, void 0, false, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MapLegend.tsx\",\n                                lineNumber: 11,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MapLegend.tsx\",\n                        lineNumber: 9,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center gap-2\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"w-4 h-4 bg-[#f57c00] block rounded\"\n                            }, void 0, false, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MapLegend.tsx\",\n                                lineNumber: 14,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                children: \"25% Visibility (Orange)\"\n                            }, void 0, false, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MapLegend.tsx\",\n                                lineNumber: 15,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MapLegend.tsx\",\n                        lineNumber: 13,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center gap-2\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"w-4 h-4 bg-[#fbc02d] block rounded\"\n                            }, void 0, false, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MapLegend.tsx\",\n                                lineNumber: 18,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                children: \"50% Visibility (Yellow)\"\n                            }, void 0, false, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MapLegend.tsx\",\n                                lineNumber: 19,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MapLegend.tsx\",\n                        lineNumber: 17,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center gap-2\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"w-4 h-4 bg-[#7cb342] block rounded\"\n                            }, void 0, false, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MapLegend.tsx\",\n                                lineNumber: 22,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                children: \"75% Visibility (Green)\"\n                            }, void 0, false, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MapLegend.tsx\",\n                                lineNumber: 23,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MapLegend.tsx\",\n                        lineNumber: 21,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center gap-2\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"w-4 h-4 bg-[#1976d2] block rounded\"\n                            }, void 0, false, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MapLegend.tsx\",\n                                lineNumber: 26,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                children: \"100% Visibility (Blue)\"\n                            }, void 0, false, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MapLegend.tsx\",\n                                lineNumber: 27,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MapLegend.tsx\",\n                        lineNumber: 25,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MapLegend.tsx\",\n                lineNumber: 8,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MapLegend.tsx\",\n        lineNumber: 6,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MapLegend);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvYXBwL2NvbXBvbmVudHMvTWFwL01hcExlZ2VuZC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSx3Q0FBd0M7O0FBQ2Q7QUFFMUIsTUFBTUMsWUFBc0I7SUFDMUIscUJBQ0UsOERBQUNDO1FBQUlDLFdBQVU7OzBCQUNiLDhEQUFDQztnQkFBR0QsV0FBVTswQkFBcUI7Ozs7OzswQkFDbkMsOERBQUNEO2dCQUFJQyxXQUFVOztrQ0FDYiw4REFBQ0Q7d0JBQUlDLFdBQVU7OzBDQUNiLDhEQUFDRTtnQ0FBS0YsV0FBVTs7Ozs7OzBDQUNoQiw4REFBQ0U7MENBQUs7Ozs7Ozs7Ozs7OztrQ0FFUiw4REFBQ0g7d0JBQUlDLFdBQVU7OzBDQUNiLDhEQUFDRTtnQ0FBS0YsV0FBVTs7Ozs7OzBDQUNoQiw4REFBQ0U7MENBQUs7Ozs7Ozs7Ozs7OztrQ0FFUiw4REFBQ0g7d0JBQUlDLFdBQVU7OzBDQUNiLDhEQUFDRTtnQ0FBS0YsV0FBVTs7Ozs7OzBDQUNoQiw4REFBQ0U7MENBQUs7Ozs7Ozs7Ozs7OztrQ0FFUiw4REFBQ0g7d0JBQUlDLFdBQVU7OzBDQUNiLDhEQUFDRTtnQ0FBS0YsV0FBVTs7Ozs7OzBDQUNoQiw4REFBQ0U7MENBQUs7Ozs7Ozs7Ozs7OztrQ0FFUiw4REFBQ0g7d0JBQUlDLFdBQVU7OzBDQUNiLDhEQUFDRTtnQ0FBS0YsV0FBVTs7Ozs7OzBDQUNoQiw4REFBQ0U7MENBQUs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUtoQjtBQUVBLGlFQUFlSixTQUFTQSxFQUFDIiwic291cmNlcyI6WyIvVXNlcnMva2llcmFuYmxhaXIvZ2l0L2ZhL2ZsaWdodC1hc3N1cmFuY2Uvc3JjL2FwcC9jb21wb25lbnRzL01hcC9NYXBMZWdlbmQudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGNvbXBvbmVudHMvTWFwL0Rpc3BsYXlzL01hcExlZ2VuZC50c3hcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmNvbnN0IE1hcExlZ2VuZDogUmVhY3QuRkMgPSAoKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJtYXAtbGVnZW5kIGFic29sdXRlIGJvdHRvbS00IHJpZ2h0LTQgYmctd2hpdGUgYmctb3BhY2l0eS04MCBwLTMgcm91bmRlZC1sZyBzaGFkb3ctbWRcIj5cbiAgICAgIDxoNCBjbGFzc05hbWU9XCJmb250LXNlbWlib2xkIG1iLTJcIj5MZWdlbmQ8L2g0PlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGZsZXgtY29sIGdhcC0xXCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTJcIj5cbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJ3LTQgaC00IGJnLVsjZDMyZjJmXSBibG9jayByb3VuZGVkXCI+PC9zcGFuPlxuICAgICAgICAgIDxzcGFuPjAlIFZpc2liaWxpdHkgKFJlZCk8L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGdhcC0yXCI+XG4gICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwidy00IGgtNCBiZy1bI2Y1N2MwMF0gYmxvY2sgcm91bmRlZFwiPjwvc3Bhbj5cbiAgICAgICAgICA8c3Bhbj4yNSUgVmlzaWJpbGl0eSAoT3JhbmdlKTwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTJcIj5cbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJ3LTQgaC00IGJnLVsjZmJjMDJkXSBibG9jayByb3VuZGVkXCI+PC9zcGFuPlxuICAgICAgICAgIDxzcGFuPjUwJSBWaXNpYmlsaXR5IChZZWxsb3cpPC9zcGFuPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBnYXAtMlwiPlxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInctNCBoLTQgYmctWyM3Y2IzNDJdIGJsb2NrIHJvdW5kZWRcIj48L3NwYW4+XG4gICAgICAgICAgPHNwYW4+NzUlIFZpc2liaWxpdHkgKEdyZWVuKTwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTJcIj5cbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJ3LTQgaC00IGJnLVsjMTk3NmQyXSBibG9jayByb3VuZGVkXCI+PC9zcGFuPlxuICAgICAgICAgIDxzcGFuPjEwMCUgVmlzaWJpbGl0eSAoQmx1ZSk8L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBNYXBMZWdlbmQ7Il0sIm5hbWVzIjpbIlJlYWN0IiwiTWFwTGVnZW5kIiwiZGl2IiwiY2xhc3NOYW1lIiwiaDQiLCJzcGFuIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./src/app/components/Map/MapLegend.tsx\n");

/***/ }),

/***/ "(ssr)/./src/app/components/Map/MapboxLayerHandler.tsx":
/*!*******************************************************!*\
  !*** ./src/app/components/Map/MapboxLayerHandler.tsx ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _context_mapcontext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../context/mapcontext */ \"(ssr)/./src/app/context/mapcontext.tsx\");\n/* harmony import */ var _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/LayerManager */ \"(ssr)/./src/app/services/LayerManager.ts\");\n/* harmony import */ var _hooks_useTreeHeights__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../hooks/useTreeHeights */ \"(ssr)/./src/app/hooks/useTreeHeights.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\n\nconst getHeightForVoltage = (voltageValue)=>{\n    const voltage = voltageValue.trim();\n    switch(voltage){\n        case \"415\":\n            return \"7 m\";\n        case \"11\":\n            return \"9 m\";\n        case \"33\":\n            return \"20 m\";\n        case \"66\":\n            return \"20 m\";\n        case \"110\":\n            return \"45 m\";\n        case \"132\":\n            return \"45 m\";\n        case \"220\":\n            return \"45 m\";\n        case \"275\":\n            return \"55 m\";\n        case \"330\":\n            return \"65 m\";\n        case \"500\":\n            return \"76 m\";\n        default:\n            return \"N/A\";\n    }\n};\nconst MapboxLayerHandler = ({ map })=>{\n    const {} = (0,_context_mapcontext__WEBPACK_IMPORTED_MODULE_1__.useMapContext)();\n    const { toggleTreeHeights, handleTreeHeightClick, cleanup: cleanupTreeHeights, isInitialized } = (0,_hooks_useTreeHeights__WEBPACK_IMPORTED_MODULE_3__.useTreeHeights)(map);\n    const eventHandlersRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({});\n    const currentFeatureRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"MapboxLayerHandler.useEffect\": ()=>{\n            if (!map) return;\n            Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! mapbox-gl */ \"(ssr)/./node_modules/mapbox-gl/dist/mapbox-gl.js\", 23)).then({\n                \"MapboxLayerHandler.useEffect\": (mapboxModule)=>{\n                    const mapboxgl = mapboxModule.default;\n                    const extMap = map;\n                    // **POWERLINES LAYER SETUP**\n                    const powerSourceLayerName = \"Electricity_Transmission_Line-08vle5\";\n                    if (!map.getSource(\"electricity-lines\")) {\n                        map.addSource(\"electricity-lines\", {\n                            type: \"vector\",\n                            url: \"mapbox://intelaero.a8qtcidy\"\n                        });\n                    }\n                    if (!map.getLayer(\"Electricity Transmission Lines\")) {\n                        map.addLayer({\n                            id: \"Electricity Transmission Lines\",\n                            type: \"line\",\n                            source: \"electricity-lines\",\n                            \"source-layer\": powerSourceLayerName,\n                            layout: {\n                                visibility: \"none\"\n                            },\n                            paint: {\n                                \"line-color\": \"#f00\",\n                                \"line-width\": [\n                                    \"interpolate\",\n                                    [\n                                        \"linear\"\n                                    ],\n                                    [\n                                        \"zoom\"\n                                    ],\n                                    11,\n                                    1,\n                                    14,\n                                    2\n                                ]\n                            },\n                            minzoom: 10\n                        });\n                        _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.layerManager.registerLayer(\"Electricity Transmission Lines\");\n                    }\n                    if (!map.getLayer(\"Electricity Transmission Lines Hitbox\")) {\n                        map.addLayer({\n                            id: \"Electricity Transmission Lines Hitbox\",\n                            type: \"line\",\n                            source: \"electricity-lines\",\n                            \"source-layer\": powerSourceLayerName,\n                            layout: {\n                                visibility: \"none\"\n                            },\n                            paint: {\n                                \"line-width\": 20,\n                                \"line-color\": \"rgba(0,0,0,0)\"\n                            },\n                            minzoom: 10\n                        });\n                        _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.layerManager.registerLayer(\"Electricity Transmission Lines Hitbox\");\n                    }\n                    // **POWERLINES INTERACTIVITY**\n                    const handlePowerlineMouseEnter = {\n                        \"MapboxLayerHandler.useEffect.handlePowerlineMouseEnter\": (e)=>{\n                            map.getCanvas().style.cursor = \"pointer\";\n                            const feature = e.features && e.features[0];\n                            if (!feature) return;\n                            currentFeatureRef.current = feature;\n                            const voltage = feature.properties?.CAPACITY_KV || \"unknown\";\n                            const height = voltage !== \"unknown\" ? getHeightForVoltage(String(voltage)) : \"N/A\";\n                            const popupContent = `\n          <strong>Powerline</strong><br/>\n          <strong>Voltage (kV):</strong> ${voltage}<br/>\n          <strong>Height:</strong> ${height}\n        `;\n                            if (extMap.__currentPopup) extMap.__currentPopup.remove();\n                            const popup = new mapboxgl.Popup({\n                                closeButton: false,\n                                closeOnClick: false,\n                                maxWidth: \"300px\"\n                            }).setLngLat(e.lngLat).setHTML(popupContent).addTo(map);\n                            extMap.__currentPopup = popup;\n                        }\n                    }[\"MapboxLayerHandler.useEffect.handlePowerlineMouseEnter\"];\n                    const handlePowerlineMouseLeave = {\n                        \"MapboxLayerHandler.useEffect.handlePowerlineMouseLeave\": ()=>{\n                            map.getCanvas().style.cursor = \"\";\n                            currentFeatureRef.current = null;\n                            if (extMap.__currentPopup) {\n                                extMap.__currentPopup.remove();\n                                extMap.__currentPopup = null;\n                            }\n                        }\n                    }[\"MapboxLayerHandler.useEffect.handlePowerlineMouseLeave\"];\n                    const handleMapMouseMove = {\n                        \"MapboxLayerHandler.useEffect.handleMapMouseMove\": (e)=>{\n                            if (map.getLayer(\"Electricity Transmission Lines Hitbox\") && map.getLayoutProperty(\"Electricity Transmission Lines Hitbox\", \"visibility\") === \"visible\") {\n                                const features = map.queryRenderedFeatures(e.point, {\n                                    layers: [\n                                        \"Electricity Transmission Lines Hitbox\"\n                                    ]\n                                });\n                                if (features.length === 0 && currentFeatureRef.current !== null) {\n                                    handlePowerlineMouseLeave();\n                                }\n                            } else if (currentFeatureRef.current !== null) {\n                                handlePowerlineMouseLeave();\n                            }\n                        }\n                    }[\"MapboxLayerHandler.useEffect.handleMapMouseMove\"];\n                    map.on(\"mouseenter\", \"Electricity Transmission Lines Hitbox\", handlePowerlineMouseEnter);\n                    map.on(\"mouseleave\", \"Electricity Transmission Lines Hitbox\", handlePowerlineMouseLeave);\n                    map.on(\"mousemove\", handleMapMouseMove);\n                    // **AIRFIELDS LAYER SETUP**\n                    if (!map.getSource(\"airfields\")) {\n                        map.addSource(\"airfields\", {\n                            type: \"vector\",\n                            url: \"mapbox://intelaero.5d451fq2\"\n                        });\n                    }\n                    if (!map.getLayer(\"Airfields\")) {\n                        map.addLayer({\n                            id: \"Airfields\",\n                            type: \"fill\",\n                            layout: {\n                                visibility: \"none\"\n                            },\n                            source: \"airfields\",\n                            \"source-layer\": \"July2024Airservices-7op6cm\",\n                            paint: {\n                                \"fill-color\": \"#ff7f50\",\n                                \"fill-opacity\": 0.2,\n                                \"fill-outline-color\": \"#FFF\"\n                            },\n                            minzoom: 10\n                        });\n                        _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.layerManager.registerLayer(\"Airfields\");\n                    }\n                    if (!map.getLayer(\"Airfields Labels\")) {\n                        map.addLayer({\n                            id: \"Airfields Labels\",\n                            type: \"symbol\",\n                            source: \"airfields\",\n                            \"source-layer\": \"July2024Airservices-7op6cm\",\n                            layout: {\n                                visibility: \"none\",\n                                \"text-field\": [\n                                    \"get\",\n                                    \"title\"\n                                ],\n                                \"symbol-placement\": \"line\",\n                                \"text-font\": [\n                                    \"Open Sans Bold\",\n                                    \"Arial Unicode MS Bold\"\n                                ],\n                                \"text-size\": 12,\n                                \"text-offset\": [\n                                    0,\n                                    0\n                                ],\n                                \"text-anchor\": \"center\"\n                            },\n                            paint: {\n                                \"text-color\": \"#FFF\"\n                            },\n                            minzoom: 12\n                        });\n                        _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.layerManager.registerLayer(\"Airfields Labels\");\n                    }\n                    eventHandlersRef.current = {\n                        onPowerlineMouseEnter: handlePowerlineMouseEnter,\n                        onPowerlineMouseLeave: handlePowerlineMouseLeave,\n                        onMapMouseMove: handleMapMouseMove\n                    };\n                    console.log(\"✅ MapboxLayerHandler initialization complete\");\n                }\n            }[\"MapboxLayerHandler.useEffect\"]);\n            // Cleanup function\n            return ({\n                \"MapboxLayerHandler.useEffect\": ()=>{\n                    if (!map) return;\n                    console.log(\"🧹 Cleaning up MapboxLayerHandler\");\n                    const handlers = eventHandlersRef.current;\n                    if (handlers.onPowerlineMouseEnter) {\n                        map.off(\"mouseenter\", \"Electricity Transmission Lines Hitbox\", handlers.onPowerlineMouseEnter);\n                    }\n                    if (handlers.onPowerlineMouseLeave) {\n                        map.off(\"mouseleave\", \"Electricity Transmission Lines Hitbox\", handlers.onPowerlineMouseLeave);\n                    }\n                    if (handlers.onMapMouseMove) {\n                        map.off(\"mousemove\", handlers.onMapMouseMove);\n                    }\n                    const extMap = map;\n                    if (extMap.__currentPopup) {\n                        extMap.__currentPopup.remove();\n                        extMap.__currentPopup = null;\n                    }\n                    if (extMap.__airfieldsPopup) {\n                        extMap.__airfieldsPopup.remove();\n                        extMap.__airfieldsPopup = null;\n                    }\n                    if (cleanupTreeHeights) {\n                        cleanupTreeHeights();\n                    }\n                    console.log(\"✅ MapboxLayerHandler cleanup complete\");\n                }\n            })[\"MapboxLayerHandler.useEffect\"];\n        }\n    }[\"MapboxLayerHandler.useEffect\"], [\n        map,\n        cleanupTreeHeights\n    ]);\n    // Separate useEffect for tree heights integration\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"MapboxLayerHandler.useEffect\": ()=>{\n            if (!map || !isInitialized) return;\n            // Attach tree heights functionality only when initialized\n            map.toggleTreeHeights = toggleTreeHeights;\n            if (handleTreeHeightClick) {\n                map.on(\"click\", handleTreeHeightClick);\n            }\n            // ADD HOVER HANDLERS HERE:\n            const handleTreeHover = {\n                \"MapboxLayerHandler.useEffect.handleTreeHover\": (e)=>{\n                    if (!isInitialized || !map) return;\n                    const treeHeightVisible = _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.layerManager.isLayerVisible(\"tree-height-raster\");\n                    if (!treeHeightVisible) return;\n                    // Simple hover effect - change cursor over map when tree layer is active\n                    map.getCanvas().style.cursor = 'crosshair';\n                }\n            }[\"MapboxLayerHandler.useEffect.handleTreeHover\"];\n            const handleTreeHoverLeave = {\n                \"MapboxLayerHandler.useEffect.handleTreeHoverLeave\": ()=>{\n                    if (!map) return;\n                    map.getCanvas().style.cursor = '';\n                }\n            }[\"MapboxLayerHandler.useEffect.handleTreeHoverLeave\"];\n            // Add hover listeners only when tree heights are visible\n            if (_services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.layerManager.isLayerVisible(\"tree-height-raster\")) {\n                map.on('mousemove', handleTreeHover);\n                map.on('mouseleave', handleTreeHoverLeave);\n            }\n            return ({\n                \"MapboxLayerHandler.useEffect\": ()=>{\n                    delete map.toggleTreeHeights;\n                    if (handleTreeHeightClick) {\n                        map.off(\"click\", handleTreeHeightClick);\n                    }\n                    // Clean up hover listeners\n                    map.off('mousemove', handleTreeHover);\n                    map.off('mouseleave', handleTreeHoverLeave);\n                }\n            })[\"MapboxLayerHandler.useEffect\"];\n        }\n    }[\"MapboxLayerHandler.useEffect\"], [\n        map,\n        isInitialized,\n        toggleTreeHeights,\n        handleTreeHeightClick\n    ]);\n    return null;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MapboxLayerHandler);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/components/Map/MapboxLayerHandler.tsx\n");

/***/ }),

/***/ "(ssr)/./src/app/components/Map/MarkerControls.tsx":
/*!***************************************************!*\
  !*** ./src/app/components/Map/MarkerControls.tsx ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Hooks_useMarkers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Hooks/useMarkers */ \"(ssr)/./src/app/components/Map/Hooks/useMarkers.ts\");\n/* harmony import */ var _context_mapcontext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../context/mapcontext */ \"(ssr)/./src/app/context/mapcontext.tsx\");\n/* harmony import */ var _context_LOSAnalysisContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../context/LOSAnalysisContext */ \"(ssr)/./src/app/context/LOSAnalysisContext.tsx\");\n/* harmony import */ var _tracking_tracking__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../tracking/tracking */ \"(ssr)/./src/app/components/tracking/tracking.js\");\n/* harmony import */ var _components_UI_PremiumButton__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../components/UI/PremiumButton */ \"(ssr)/./src/app/components/UI/PremiumButton.tsx\");\n/* harmony import */ var _barrel_optimize_names_Eye_Radio_Wifi_XCircle_lucide_react__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! __barrel_optimize__?names=Eye,Radio,Wifi,XCircle!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/circle-x.js\");\n/* harmony import */ var _barrel_optimize_names_Eye_Radio_Wifi_XCircle_lucide_react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! __barrel_optimize__?names=Eye,Radio,Wifi,XCircle!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/wifi.js\");\n/* harmony import */ var _barrel_optimize_names_Eye_Radio_Wifi_XCircle_lucide_react__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! __barrel_optimize__?names=Eye,Radio,Wifi,XCircle!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/radio.js\");\n/* harmony import */ var _barrel_optimize_names_Eye_Radio_Wifi_XCircle_lucide_react__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! __barrel_optimize__?names=Eye,Radio,Wifi,XCircle!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/eye.js\");\n/* harmony import */ var _context_ChecklistContext__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../context/ChecklistContext */ \"(ssr)/./src/app/context/ChecklistContext.tsx\");\n// components/Map/Controls/MarkerControls.tsx\n/**\n * MarkerControls.tsx\n * \n * This component provides UI controls for adding and managing map markers (GCS, Observer, Repeater).\n * It integrates with the useMarkers hook for marker management and the GridAnalysisController\n * for running station-specific LOS analyses when markers are placed.\n * \n * Related to:\n * - useMarkers hook (marker management)\n * - GridAnalysisController (station analysis)\n * - MarkerContext (marker state)\n * - LOSAnalysisContext (analysis configuration)\n */ // components/Map/Controls/MarkerControls.tsx\n\n\n\n\n\n\n\n\n\nconst MarkerControls = ()=>{\n    const { map, terrainLoaded } = (0,_context_mapcontext__WEBPACK_IMPORTED_MODULE_3__.useMapContext)();\n    const { markerConfigs } = (0,_context_LOSAnalysisContext__WEBPACK_IMPORTED_MODULE_4__.useLOSAnalysis)();\n    const { highlightMarkers, setHighlightMarkers } = (0,_context_ChecklistContext__WEBPACK_IMPORTED_MODULE_7__.useChecklistContext)();\n    // Clear highlight when any marker button is clicked\n    const clearHighlight = ()=>setHighlightMarkers(false);\n    // Reference to the grid analysis controller\n    const gridAnalysisRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const { markers, addGroundStation, addObserver, addRepeater, removeAllAnalysisLayers, error// This will be displayed to the user\n     } = (0,_Hooks_useMarkers__WEBPACK_IMPORTED_MODULE_2__.useMarkers)({\n        map,\n        terrainLoaded: terrainLoaded\n    });\n    // Enhanced handlers to optionally trigger analysis\n    const handleAddGroundStation = async ()=>{\n        clearHighlight();\n        // Add marker and get location\n        const location = await addGroundStation();\n        // If auto-analysis is enabled and location was created successfully\n        if (location && gridAnalysisRef.current) {\n            try {\n                // Find the marker we just created to get its ID\n                const newMarker = markers.find((m)=>m.type === 'gcs' && m.location.lng === location.lng && m.location.lat === location.lat);\n                if (newMarker) {\n                    await gridAnalysisRef.current.runStationAnalysis({\n                        stationType: 'gcs',\n                        location,\n                        range: markerConfigs.gcs.gridRange,\n                        elevationOffset: newMarker.elevationOffset,\n                        markerId: newMarker.id\n                    });\n                }\n            } catch (error) {\n                console.error(\"Failed to run GCS analysis:\", error);\n            }\n        }\n    };\n    // Apply conditional class to all buttons:\n    const buttonClass = `map-button ${highlightMarkers ? 'pulse-highlight' : ''}`;\n    const handleAddObserver = async ()=>{\n        const location = await addObserver();\n        if (location && gridAnalysisRef.current) {\n            try {\n                // Find the marker we just created\n                const newMarker = markers.find((m)=>m.type === 'observer' && m.location.lng === location.lng && m.location.lat === location.lat);\n                if (newMarker) {\n                    await gridAnalysisRef.current.runStationAnalysis({\n                        stationType: 'observer',\n                        location,\n                        range: markerConfigs.observer.gridRange,\n                        elevationOffset: newMarker.elevationOffset,\n                        markerId: newMarker.id\n                    });\n                }\n            } catch (error) {\n                console.error(\"Failed to run Observer analysis:\", error);\n            }\n        }\n    };\n    const handleAddRepeater = async ()=>{\n        const location = await addRepeater();\n        if (location && gridAnalysisRef.current) {\n            try {\n                // Find the marker we just created\n                const newMarker = markers.find((m)=>m.type === 'repeater' && m.location.lng === location.lng && m.location.lat === location.lat);\n                if (newMarker) {\n                    await gridAnalysisRef.current.runStationAnalysis({\n                        stationType: 'repeater',\n                        location,\n                        range: markerConfigs.repeater.gridRange,\n                        elevationOffset: newMarker.elevationOffset,\n                        markerId: newMarker.id\n                    });\n                }\n            } catch (error) {\n                console.error(\"Failed to run Repeater analysis:\", error);\n            }\n        }\n    };\n    const handleResetAnalyses = ()=>{\n        (0,_tracking_tracking__WEBPACK_IMPORTED_MODULE_5__.trackEventWithForm)(\"reset_los_analyses_click\", {\n            panel: \"map.tsx\"\n        });\n        removeAllAnalysisLayers();\n        // If analysis is in progress, abort it\n        if (gridAnalysisRef.current) {\n            gridAnalysisRef.current.abortAnalysis();\n        }\n    };\n    // Get marker counts for permission parameters\n    const gcsCount = markers.filter((m)=>m.type === 'gcs').length;\n    const observerCount = markers.filter((m)=>m.type === 'observer').length;\n    const repeaterCount = markers.filter((m)=>m.type === 'repeater').length;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute top-20 right-4 z-30 bg-red-50 border border-red-200 text-red-700  px-4 py-2 rounded-md shadow-md max-w-xs animate-fadeIn\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex items-start\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Eye_Radio_Wifi_XCircle_lucide_react__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                            size: 16,\n                            className: \"mt-0.5 mr-2 flex-shrink-0\"\n                        }, void 0, false, {\n                            fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MarkerControls.tsx\",\n                            lineNumber: 158,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"text-sm\",\n                            children: error\n                        }, void 0, false, {\n                            fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MarkerControls.tsx\",\n                            lineNumber: 159,\n                            columnNumber: 13\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MarkerControls.tsx\",\n                    lineNumber: 157,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MarkerControls.tsx\",\n                lineNumber: 155,\n                columnNumber: 9\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute top-4 right-4 z-20 flex flex-col space-y-2\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_UI_PremiumButton__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                        featureId: \"add_gcs\",\n                        onClick: handleAddGroundStation,\n                        className: `map-button ground-station-icon flex items-center justify-center ${highlightMarkers ? 'pulse-highlight' : ''}`,\n                        permissionParams: {\n                            currentCount: gcsCount\n                        },\n                        showIndicator: true,\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Eye_Radio_Wifi_XCircle_lucide_react__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                                size: 16,\n                                className: \"mr-2\"\n                            }, void 0, false, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MarkerControls.tsx\",\n                                lineNumber: 173,\n                                columnNumber: 11\n                            }, undefined),\n                            \"Add Ground Station\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MarkerControls.tsx\",\n                        lineNumber: 166,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_UI_PremiumButton__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                        featureId: \"add_repeater\",\n                        onClick: handleAddRepeater,\n                        className: `map-button repeater-icon flex items-center justify-center ${highlightMarkers ? 'pulse-highlight' : ''}`,\n                        permissionParams: {\n                            currentCount: repeaterCount\n                        },\n                        showIndicator: true,\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Eye_Radio_Wifi_XCircle_lucide_react__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n                                size: 16,\n                                className: \"mr-2\"\n                            }, void 0, false, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MarkerControls.tsx\",\n                                lineNumber: 185,\n                                columnNumber: 11\n                            }, undefined),\n                            \"Add Repeater\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MarkerControls.tsx\",\n                        lineNumber: 178,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_UI_PremiumButton__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                        featureId: \"add_observer\",\n                        onClick: handleAddObserver,\n                        className: `map-button observer-icon flex items-center justify-center ${highlightMarkers ? 'pulse-highlight' : ''}`,\n                        permissionParams: {\n                            currentCount: observerCount\n                        },\n                        showIndicator: true,\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Eye_Radio_Wifi_XCircle_lucide_react__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n                                size: 16,\n                                className: \"mr-2\"\n                            }, void 0, false, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MarkerControls.tsx\",\n                                lineNumber: 197,\n                                columnNumber: 11\n                            }, undefined),\n                            \"Add Observer\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MarkerControls.tsx\",\n                        lineNumber: 190,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: handleResetAnalyses,\n                        className: \"map-button flex items-center justify-center\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Eye_Radio_Wifi_XCircle_lucide_react__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                                size: 16,\n                                className: \"mr-2\"\n                            }, void 0, false, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MarkerControls.tsx\",\n                                lineNumber: 206,\n                                columnNumber: 11\n                            }, undefined),\n                            \"Clear All Analyses\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MarkerControls.tsx\",\n                        lineNumber: 202,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MarkerControls.tsx\",\n                lineNumber: 164,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MarkerControls);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/components/Map/MarkerControls.tsx\n");

/***/ }),

/***/ "(ssr)/./src/app/components/Map/MeasurementControls.tsx":
/*!********************************************************!*\
  !*** ./src/app/components/Map/MeasurementControls.tsx ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Map_Hooks_useMeasurement__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Map/Hooks/useMeasurement */ \"(ssr)/./src/app/components/Map/Hooks/useMeasurement.ts\");\n/* harmony import */ var _barrel_optimize_names_Ruler_Trash2_X_lucide_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! __barrel_optimize__?names=Ruler,Trash2,X!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/ruler.js\");\n/* harmony import */ var _barrel_optimize_names_Ruler_Trash2_X_lucide_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! __barrel_optimize__?names=Ruler,Trash2,X!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/trash-2.js\");\n/* harmony import */ var _barrel_optimize_names_Ruler_Trash2_X_lucide_react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! __barrel_optimize__?names=Ruler,Trash2,X!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/x.js\");\n/* harmony import */ var _components_tracking_tracking__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../components/tracking/tracking */ \"(ssr)/./src/app/components/tracking/tracking.js\");\n// MeasurementControls.tsx\n// This component provides UI controls for the measurement tool functionality\n// and displays measurement results\n\n\n\n\n\nconst MeasurementControls = ()=>{\n    const { startMeasurement, stopMeasurement, clearMeasurement, isMeasuring, measurement } = (0,_Map_Hooks_useMeasurement__WEBPACK_IMPORTED_MODULE_2__.useMeasurement)();\n    const handleToggleMeasurement = ()=>{\n        if (isMeasuring) {\n            (0,_components_tracking_tracking__WEBPACK_IMPORTED_MODULE_3__.trackEventWithForm)('measurement_stopped', {\n                panel: 'measurement-controls'\n            });\n            stopMeasurement();\n        } else {\n            (0,_components_tracking_tracking__WEBPACK_IMPORTED_MODULE_3__.trackEventWithForm)('measurement_started', {\n                panel: 'measurement-controls'\n            });\n            startMeasurement();\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex flex-col space-y-2\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex space-x-2\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: handleToggleMeasurement,\n                        className: `map-button flex items-center ${isMeasuring ? 'bg-blue-100' : ''}`,\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Ruler_Trash2_X_lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                className: \"w-5 h-5 mr-2\"\n                            }, void 0, false, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MeasurementControls.tsx\",\n                                lineNumber: 30,\n                                columnNumber: 11\n                            }, undefined),\n                            isMeasuring ? 'Stop Measuring' : 'Measure Distance'\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MeasurementControls.tsx\",\n                        lineNumber: 26,\n                        columnNumber: 9\n                    }, undefined),\n                    isMeasuring && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: ()=>{\n                            (0,_components_tracking_tracking__WEBPACK_IMPORTED_MODULE_3__.trackEventWithForm)('measurement_cleared', {\n                                panel: 'measurement-controls'\n                            });\n                            clearMeasurement();\n                        },\n                        className: \"map-button flex items-center\",\n                        title: \"Clear current measurements\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Ruler_Trash2_X_lucide_react__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                                className: \"w-5 h-5 mr-2\"\n                            }, void 0, false, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MeasurementControls.tsx\",\n                                lineNumber: 44,\n                                columnNumber: 13\n                            }, undefined),\n                            \"Clear\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MeasurementControls.tsx\",\n                        lineNumber: 36,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MeasurementControls.tsx\",\n                lineNumber: 25,\n                columnNumber: 7\n            }, undefined),\n            measurement && measurement.points.length > 1 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"bg-white p-3 rounded-md shadow-md text-sm\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex justify-between items-center mb-1\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h4\", {\n                                className: \"font-semibold\",\n                                children: \"Measurement\"\n                            }, void 0, false, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MeasurementControls.tsx\",\n                                lineNumber: 53,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Ruler_Trash2_X_lucide_react__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                                className: \"w-4 h-4 cursor-pointer text-gray-500 hover:text-gray-700\",\n                                onClick: ()=>{\n                                    (0,_components_tracking_tracking__WEBPACK_IMPORTED_MODULE_3__.trackEventWithForm)('measurement_cleared', {\n                                        panel: 'measurement-controls'\n                                    });\n                                    clearMeasurement();\n                                }\n                            }, void 0, false, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MeasurementControls.tsx\",\n                                lineNumber: 54,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MeasurementControls.tsx\",\n                        lineNumber: 52,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"text-gray-700\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    \"Points: \",\n                                    measurement.points.length\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MeasurementControls.tsx\",\n                                lineNumber: 63,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    \"Total distance: \",\n                                    (measurement.distance / 1000).toFixed(2),\n                                    \" km\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MeasurementControls.tsx\",\n                                lineNumber: 64,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MeasurementControls.tsx\",\n                        lineNumber: 62,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MeasurementControls.tsx\",\n                lineNumber: 51,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/MeasurementControls.tsx\",\n        lineNumber: 24,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MeasurementControls);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvYXBwL2NvbXBvbmVudHMvTWFwL01lYXN1cmVtZW50Q29udHJvbHMudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQSwwQkFBMEI7QUFDMUIsNkVBQTZFO0FBQzdFLG1DQUFtQzs7QUFFVDtBQUNtQztBQUNiO0FBQ3NDO0FBRXRGLE1BQU1PLHNCQUFnQztJQUNwQyxNQUFNLEVBQUVDLGdCQUFnQixFQUFFQyxlQUFlLEVBQUVDLGdCQUFnQixFQUFFQyxXQUFXLEVBQUVDLFdBQVcsRUFBRSxHQUFHWCx5RUFBY0E7SUFFeEcsTUFBTVksMEJBQTBCO1FBQzlCLElBQUlGLGFBQWE7WUFDZkwsaUZBQVVBLENBQUMsdUJBQXVCO2dCQUFFUSxPQUFPO1lBQXVCO1lBQ2xFTDtRQUNGLE9BQU87WUFDTEgsaUZBQVVBLENBQUMsdUJBQXVCO2dCQUFFUSxPQUFPO1lBQXVCO1lBQ2xFTjtRQUNGO0lBQ0Y7SUFFQSxxQkFDRSw4REFBQ087UUFBSUMsV0FBVTs7MEJBQ2IsOERBQUNEO2dCQUFJQyxXQUFVOztrQ0FDYiw4REFBQ0M7d0JBQ0NDLFNBQVNMO3dCQUNURyxXQUFXLENBQUMsNkJBQTZCLEVBQUVMLGNBQWMsZ0JBQWdCLElBQUk7OzBDQUU3RSw4REFBQ1QsMEZBQUtBO2dDQUFDYyxXQUFVOzs7Ozs7NEJBQ2hCTCxjQUFjLG1CQUFtQjs7Ozs7OztvQkFJbkNBLDZCQUNDLDhEQUFDTTt3QkFDQ0MsU0FBUzs0QkFDUFosaUZBQVVBLENBQUMsdUJBQXVCO2dDQUFFUSxPQUFPOzRCQUF1Qjs0QkFDbEVKO3dCQUNGO3dCQUNBTSxXQUFVO3dCQUNWRyxPQUFNOzswQ0FFTiw4REFBQ2YsMEZBQU1BO2dDQUFDWSxXQUFVOzs7Ozs7NEJBQWlCOzs7Ozs7Ozs7Ozs7O1lBTXhDSixlQUFlQSxZQUFZUSxNQUFNLENBQUNDLE1BQU0sR0FBRyxtQkFDMUMsOERBQUNOO2dCQUFJQyxXQUFVOztrQ0FDYiw4REFBQ0Q7d0JBQUlDLFdBQVU7OzBDQUNiLDhEQUFDTTtnQ0FBR04sV0FBVTswQ0FBZ0I7Ozs7OzswQ0FDOUIsOERBQUNiLDBGQUFDQTtnQ0FDQWEsV0FBVTtnQ0FDVkUsU0FBUztvQ0FDUFosaUZBQVVBLENBQUMsdUJBQXVCO3dDQUFFUSxPQUFPO29DQUF1QjtvQ0FDbEVKO2dDQUNGOzs7Ozs7Ozs7Ozs7a0NBR0osOERBQUNLO3dCQUFJQyxXQUFVOzswQ0FDYiw4REFBQ0Q7O29DQUFJO29DQUFTSCxZQUFZUSxNQUFNLENBQUNDLE1BQU07Ozs7Ozs7MENBQ3ZDLDhEQUFDTjs7b0NBQUk7b0NBQWtCSCxDQUFBQSxZQUFZVyxRQUFRLEdBQUcsSUFBRyxFQUFHQyxPQUFPLENBQUM7b0NBQUc7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFNM0U7QUFFQSxpRUFBZWpCLG1CQUFtQkEsRUFBQyIsInNvdXJjZXMiOlsiL1VzZXJzL2tpZXJhbmJsYWlyL2dpdC9mYS9mbGlnaHQtYXNzdXJhbmNlL3NyYy9hcHAvY29tcG9uZW50cy9NYXAvTWVhc3VyZW1lbnRDb250cm9scy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLy8gTWVhc3VyZW1lbnRDb250cm9scy50c3hcbi8vIFRoaXMgY29tcG9uZW50IHByb3ZpZGVzIFVJIGNvbnRyb2xzIGZvciB0aGUgbWVhc3VyZW1lbnQgdG9vbCBmdW5jdGlvbmFsaXR5XG4vLyBhbmQgZGlzcGxheXMgbWVhc3VyZW1lbnQgcmVzdWx0c1xuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlTWVhc3VyZW1lbnQgfSBmcm9tICcuLi9NYXAvSG9va3MvdXNlTWVhc3VyZW1lbnQnO1xuaW1wb3J0IHsgUnVsZXIsIFgsIFRyYXNoMiB9IGZyb20gJ2x1Y2lkZS1yZWFjdCc7XG5pbXBvcnQgeyB0cmFja0V2ZW50V2l0aEZvcm0gYXMgdHJhY2tFdmVudCB9IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvdHJhY2tpbmcvdHJhY2tpbmcnO1xuXG5jb25zdCBNZWFzdXJlbWVudENvbnRyb2xzOiBSZWFjdC5GQyA9ICgpID0+IHtcbiAgY29uc3QgeyBzdGFydE1lYXN1cmVtZW50LCBzdG9wTWVhc3VyZW1lbnQsIGNsZWFyTWVhc3VyZW1lbnQsIGlzTWVhc3VyaW5nLCBtZWFzdXJlbWVudCB9ID0gdXNlTWVhc3VyZW1lbnQoKTtcblxuICBjb25zdCBoYW5kbGVUb2dnbGVNZWFzdXJlbWVudCA9ICgpID0+IHtcbiAgICBpZiAoaXNNZWFzdXJpbmcpIHtcbiAgICAgIHRyYWNrRXZlbnQoJ21lYXN1cmVtZW50X3N0b3BwZWQnLCB7IHBhbmVsOiAnbWVhc3VyZW1lbnQtY29udHJvbHMnIH0pO1xuICAgICAgc3RvcE1lYXN1cmVtZW50KCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRyYWNrRXZlbnQoJ21lYXN1cmVtZW50X3N0YXJ0ZWQnLCB7IHBhbmVsOiAnbWVhc3VyZW1lbnQtY29udHJvbHMnIH0pO1xuICAgICAgc3RhcnRNZWFzdXJlbWVudCgpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBmbGV4LWNvbCBzcGFjZS15LTJcIj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBzcGFjZS14LTJcIj5cbiAgICAgICAgPGJ1dHRvblxuICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZVRvZ2dsZU1lYXN1cmVtZW50fVxuICAgICAgICAgIGNsYXNzTmFtZT17YG1hcC1idXR0b24gZmxleCBpdGVtcy1jZW50ZXIgJHtpc01lYXN1cmluZyA/ICdiZy1ibHVlLTEwMCcgOiAnJ31gfVxuICAgICAgICA+XG4gICAgICAgICAgPFJ1bGVyIGNsYXNzTmFtZT1cInctNSBoLTUgbXItMlwiIC8+XG4gICAgICAgICAge2lzTWVhc3VyaW5nID8gJ1N0b3AgTWVhc3VyaW5nJyA6ICdNZWFzdXJlIERpc3RhbmNlJ31cbiAgICAgICAgPC9idXR0b24+XG4gICAgICAgIFxuICAgICAgICB7LyogQ2xlYXIgTWVhc3VyZW1lbnQgYnV0dG9uIC0gb25seSBzaG93biB3aGVuIG1lYXN1cmluZyBpcyBhY3RpdmUgKi99XG4gICAgICAgIHtpc01lYXN1cmluZyAmJiAoXG4gICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgICB0cmFja0V2ZW50KCdtZWFzdXJlbWVudF9jbGVhcmVkJywgeyBwYW5lbDogJ21lYXN1cmVtZW50LWNvbnRyb2xzJyB9KTtcbiAgICAgICAgICAgICAgY2xlYXJNZWFzdXJlbWVudCgpO1xuICAgICAgICAgICAgfX1cbiAgICAgICAgICAgIGNsYXNzTmFtZT1cIm1hcC1idXR0b24gZmxleCBpdGVtcy1jZW50ZXJcIlxuICAgICAgICAgICAgdGl0bGU9XCJDbGVhciBjdXJyZW50IG1lYXN1cmVtZW50c1wiXG4gICAgICAgICAgPlxuICAgICAgICAgICAgPFRyYXNoMiBjbGFzc05hbWU9XCJ3LTUgaC01IG1yLTJcIiAvPlxuICAgICAgICAgICAgQ2xlYXJcbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgKX1cbiAgICAgIDwvZGl2PlxuICAgICAgXG4gICAgICB7bWVhc3VyZW1lbnQgJiYgbWVhc3VyZW1lbnQucG9pbnRzLmxlbmd0aCA+IDEgJiYgKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJnLXdoaXRlIHAtMyByb3VuZGVkLW1kIHNoYWRvdy1tZCB0ZXh0LXNtXCI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGp1c3RpZnktYmV0d2VlbiBpdGVtcy1jZW50ZXIgbWItMVwiPlxuICAgICAgICAgICAgPGg0IGNsYXNzTmFtZT1cImZvbnQtc2VtaWJvbGRcIj5NZWFzdXJlbWVudDwvaDQ+XG4gICAgICAgICAgICA8WCBcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwidy00IGgtNCBjdXJzb3ItcG9pbnRlciB0ZXh0LWdyYXktNTAwIGhvdmVyOnRleHQtZ3JheS03MDBcIlxuICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgdHJhY2tFdmVudCgnbWVhc3VyZW1lbnRfY2xlYXJlZCcsIHsgcGFuZWw6ICdtZWFzdXJlbWVudC1jb250cm9scycgfSk7XG4gICAgICAgICAgICAgICAgY2xlYXJNZWFzdXJlbWVudCgpO1xuICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtZ3JheS03MDBcIj5cbiAgICAgICAgICAgIDxkaXY+UG9pbnRzOiB7bWVhc3VyZW1lbnQucG9pbnRzLmxlbmd0aH08L2Rpdj5cbiAgICAgICAgICAgIDxkaXY+VG90YWwgZGlzdGFuY2U6IHsobWVhc3VyZW1lbnQuZGlzdGFuY2UgLyAxMDAwKS50b0ZpeGVkKDIpfSBrbTwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICl9XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBNZWFzdXJlbWVudENvbnRyb2xzOyJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZU1lYXN1cmVtZW50IiwiUnVsZXIiLCJYIiwiVHJhc2gyIiwidHJhY2tFdmVudFdpdGhGb3JtIiwidHJhY2tFdmVudCIsIk1lYXN1cmVtZW50Q29udHJvbHMiLCJzdGFydE1lYXN1cmVtZW50Iiwic3RvcE1lYXN1cmVtZW50IiwiY2xlYXJNZWFzdXJlbWVudCIsImlzTWVhc3VyaW5nIiwibWVhc3VyZW1lbnQiLCJoYW5kbGVUb2dnbGVNZWFzdXJlbWVudCIsInBhbmVsIiwiZGl2IiwiY2xhc3NOYW1lIiwiYnV0dG9uIiwib25DbGljayIsInRpdGxlIiwicG9pbnRzIiwibGVuZ3RoIiwiaDQiLCJkaXN0YW5jZSIsInRvRml4ZWQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./src/app/components/Map/MeasurementControls.tsx\n");

/***/ }),

/***/ "(ssr)/./src/app/components/Map/Utils/markerPopup.ts":
/*!*****************************************************!*\
  !*** ./src/app/components/Map/Utils/markerPopup.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createMarkerPopup: () => (/* binding */ createMarkerPopup)\n/* harmony export */ });\n/* harmony import */ var mapbox_gl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mapbox-gl */ \"(ssr)/./node_modules/mapbox-gl/dist/mapbox-gl.js\");\n/* harmony import */ var mapbox_gl__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mapbox_gl__WEBPACK_IMPORTED_MODULE_0__);\n// src/app/utils/markerPopup.ts\n\nfunction createMarkerPopup(markerType, initialElevation, elevationOffset, onDelete, markerId = '', markerIndex = 0, hasMultiple = false // Default to false for backward compatibility\n) {\n    const popupDiv = document.createElement(\"div\");\n    // Define your inline styles here or consider moving to CSS modules\n    const styles = {\n        container: \"padding: 8px; min-width: 200px;\",\n        header: \"display: flex; justify-content: space-between; align-items: center; margin-bottom: 8px;\",\n        deleteBtn: \"background: #e53e3e; color: white; border: none; padding: 2px 4px; border-radius: 4px; cursor: pointer; font-size: 10px;\",\n        label: \"color: #4a5568; font-size: 12px; display: block; margin-bottom: 4px;\",\n        value: \"color: #1a202c; font-size: 12px; font-weight: 500;\",\n        id: \"color: #4a5568; font-size: 10px; display: block; margin-left: 4px;\"\n    };\n    const markerInfo = {\n        gcs: {\n            icon: \"📡\",\n            title: \"GCS\"\n        },\n        observer: {\n            icon: \"🔭\",\n            title: \"Observer\"\n        },\n        repeater: {\n            icon: \"⚡️\",\n            title: \"Repeater\"\n        }\n    };\n    const { icon, title } = markerInfo[markerType];\n    const stationElevation = initialElevation + elevationOffset;\n    // Add marker index to title if there are multiple markers of this type\n    const markerTitle = hasMultiple ? `${title} #${markerIndex + 1}` : title;\n    popupDiv.innerHTML = `\n    <div class=\"popup-container\" style=\"${styles.container}\">\n      <div style=\"${styles.header}\">\n        <div style=\"display: flex; align-items: center;\">\n          <h5 style=\"font-weight: 600; font-size: 0.875rem; color: #4a5568;\">\n            ${markerTitle} ${icon}\n          </h5>\n          <span style=\"${styles.id}\" title=\"Marker ID\">${markerId.substring(0, 6)}</span>\n        </div>\n        <button id=\"delete-marker-btn\" style=\"${styles.deleteBtn}\">\n          Delete\n        </button>\n      </div>\n      <div style=\"margin-bottom: 8px;\">\n        <label style=\"${styles.label}\">Ground Elevation:</label>\n        <span style=\"${styles.value}\">${initialElevation.toFixed(1)} m ASL</span>\n      </div>\n      <div style=\"margin-bottom: 8px;\">\n        <label style=\"${styles.label}\">Elevation Offset:</label>\n        <span style=\"${styles.value}\">${elevationOffset.toFixed(1)} m</span>\n      </div>\n      <div style=\"margin-bottom: 8px;\">\n        <label style=\"${styles.label}\">Station Elevation:</label>\n        <span style=\"${styles.value}\">${stationElevation.toFixed(1)} m ASL</span>\n      </div>\n    </div>\n  `;\n    // Use a generic button ID since we're passing the callback directly\n    popupDiv.querySelector(`#delete-marker-btn`)?.addEventListener(\"click\", onDelete);\n    return new (mapbox_gl__WEBPACK_IMPORTED_MODULE_0___default().Popup)({\n        closeButton: false\n    }).setDOMContent(popupDiv);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvYXBwL2NvbXBvbmVudHMvTWFwL1V0aWxzL21hcmtlclBvcHVwLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLCtCQUErQjtBQUNFO0FBRTFCLFNBQVNDLGtCQUNkQyxVQUEyQyxFQUMzQ0MsZ0JBQXdCLEVBQ3hCQyxlQUF1QixFQUN2QkMsUUFBb0IsRUFDcEJDLFdBQW1CLEVBQUUsRUFDckJDLGNBQXNCLENBQUMsRUFDdkJDLGNBQXVCLE1BQU0sOENBQThDO0FBQS9DO0lBRTVCLE1BQU1DLFdBQVdDLFNBQVNDLGFBQWEsQ0FBQztJQUV4QyxtRUFBbUU7SUFDbkUsTUFBTUMsU0FBUztRQUNiQyxXQUFXO1FBQ1hDLFFBQ0U7UUFDRkMsV0FDRTtRQUNGQyxPQUFPO1FBQ1BDLE9BQU87UUFDUEMsSUFBSTtJQUNOO0lBRUEsTUFBTUMsYUFBYTtRQUNqQkMsS0FBSztZQUFFQyxNQUFNO1lBQU1DLE9BQU87UUFBTTtRQUNoQ0MsVUFBVTtZQUFFRixNQUFNO1lBQU1DLE9BQU87UUFBVztRQUMxQ0UsVUFBVTtZQUFFSCxNQUFNO1lBQU1DLE9BQU87UUFBVztJQUM1QztJQUVBLE1BQU0sRUFBRUQsSUFBSSxFQUFFQyxLQUFLLEVBQUUsR0FBR0gsVUFBVSxDQUFDakIsV0FBVztJQUM5QyxNQUFNdUIsbUJBQW1CdEIsbUJBQW1CQztJQUU1Qyx1RUFBdUU7SUFDdkUsTUFBTXNCLGNBQWNsQixjQUFjLEdBQUdjLE1BQU0sRUFBRSxFQUFFZixjQUFjLEdBQUcsR0FBR2U7SUFFbkViLFNBQVNrQixTQUFTLEdBQUcsQ0FBQzt3Q0FDZ0IsRUFBRWYsT0FBT0MsU0FBUyxDQUFDO2tCQUN6QyxFQUFFRCxPQUFPRSxNQUFNLENBQUM7OztZQUd0QixFQUFFWSxZQUFZLENBQUMsRUFBRUwsS0FBSzs7dUJBRVgsRUFBRVQsT0FBT00sRUFBRSxDQUFDLG9CQUFvQixFQUFFWixTQUFTc0IsU0FBUyxDQUFDLEdBQUcsR0FBRzs7OENBRXBDLEVBQUVoQixPQUFPRyxTQUFTLENBQUM7Ozs7O3NCQUszQyxFQUFFSCxPQUFPSSxLQUFLLENBQUM7cUJBQ2hCLEVBQUVKLE9BQU9LLEtBQUssQ0FBQyxFQUFFLEVBQUVkLGlCQUFpQjBCLE9BQU8sQ0FBQyxHQUFHOzs7c0JBRzlDLEVBQUVqQixPQUFPSSxLQUFLLENBQUM7cUJBQ2hCLEVBQUVKLE9BQU9LLEtBQUssQ0FBQyxFQUFFLEVBQUViLGdCQUFnQnlCLE9BQU8sQ0FBQyxHQUFHOzs7c0JBRzdDLEVBQUVqQixPQUFPSSxLQUFLLENBQUM7cUJBQ2hCLEVBQUVKLE9BQU9LLEtBQUssQ0FBQyxFQUFFLEVBQUVRLGlCQUFpQkksT0FBTyxDQUFDLEdBQUc7OztFQUdsRSxDQUFDO0lBRUQsb0VBQW9FO0lBQ3BFcEIsU0FBU3FCLGFBQWEsQ0FBQyxDQUFDLGtCQUFrQixDQUFDLEdBQ3ZDQyxpQkFBaUIsU0FBUzFCO0lBRTlCLE9BQU8sSUFBSUwsd0RBQWMsQ0FBQztRQUFFaUMsYUFBYTtJQUFNLEdBQUdDLGFBQWEsQ0FBQ3pCO0FBQ2xFIiwic291cmNlcyI6WyIvVXNlcnMva2llcmFuYmxhaXIvZ2l0L2ZhL2ZsaWdodC1hc3N1cmFuY2Uvc3JjL2FwcC9jb21wb25lbnRzL01hcC9VdGlscy9tYXJrZXJQb3B1cC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvYXBwL3V0aWxzL21hcmtlclBvcHVwLnRzXG5pbXBvcnQgbWFwYm94Z2wgZnJvbSAnbWFwYm94LWdsJztcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZU1hcmtlclBvcHVwKFxuICBtYXJrZXJUeXBlOiAnZ2NzJyB8ICdvYnNlcnZlcicgfCAncmVwZWF0ZXInLFxuICBpbml0aWFsRWxldmF0aW9uOiBudW1iZXIsXG4gIGVsZXZhdGlvbk9mZnNldDogbnVtYmVyLFxuICBvbkRlbGV0ZTogKCkgPT4gdm9pZCxcbiAgbWFya2VySWQ6IHN0cmluZyA9ICcnLCAvLyBEZWZhdWx0IHRvIGVtcHR5IHN0cmluZyBmb3IgYmFja3dhcmQgY29tcGF0aWJpbGl0eVxuICBtYXJrZXJJbmRleDogbnVtYmVyID0gMCwgLy8gRGVmYXVsdCB0byAwIGZvciBiYWNrd2FyZCBjb21wYXRpYmlsaXR5XG4gIGhhc011bHRpcGxlOiBib29sZWFuID0gZmFsc2UgLy8gRGVmYXVsdCB0byBmYWxzZSBmb3IgYmFja3dhcmQgY29tcGF0aWJpbGl0eVxuKTogbWFwYm94Z2wuUG9wdXAge1xuICBjb25zdCBwb3B1cERpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIFxuICAvLyBEZWZpbmUgeW91ciBpbmxpbmUgc3R5bGVzIGhlcmUgb3IgY29uc2lkZXIgbW92aW5nIHRvIENTUyBtb2R1bGVzXG4gIGNvbnN0IHN0eWxlcyA9IHtcbiAgICBjb250YWluZXI6IFwicGFkZGluZzogOHB4OyBtaW4td2lkdGg6IDIwMHB4O1wiLFxuICAgIGhlYWRlcjpcbiAgICAgIFwiZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyBhbGlnbi1pdGVtczogY2VudGVyOyBtYXJnaW4tYm90dG9tOiA4cHg7XCIsXG4gICAgZGVsZXRlQnRuOlxuICAgICAgXCJiYWNrZ3JvdW5kOiAjZTUzZTNlOyBjb2xvcjogd2hpdGU7IGJvcmRlcjogbm9uZTsgcGFkZGluZzogMnB4IDRweDsgYm9yZGVyLXJhZGl1czogNHB4OyBjdXJzb3I6IHBvaW50ZXI7IGZvbnQtc2l6ZTogMTBweDtcIixcbiAgICBsYWJlbDogXCJjb2xvcjogIzRhNTU2ODsgZm9udC1zaXplOiAxMnB4OyBkaXNwbGF5OiBibG9jazsgbWFyZ2luLWJvdHRvbTogNHB4O1wiLFxuICAgIHZhbHVlOiBcImNvbG9yOiAjMWEyMDJjOyBmb250LXNpemU6IDEycHg7IGZvbnQtd2VpZ2h0OiA1MDA7XCIsXG4gICAgaWQ6IFwiY29sb3I6ICM0YTU1Njg7IGZvbnQtc2l6ZTogMTBweDsgZGlzcGxheTogYmxvY2s7IG1hcmdpbi1sZWZ0OiA0cHg7XCIsXG4gIH07XG4gIFxuICBjb25zdCBtYXJrZXJJbmZvID0ge1xuICAgIGdjczogeyBpY29uOiBcIvCfk6FcIiwgdGl0bGU6IFwiR0NTXCIgfSxcbiAgICBvYnNlcnZlcjogeyBpY29uOiBcIvCflK1cIiwgdGl0bGU6IFwiT2JzZXJ2ZXJcIiB9LFxuICAgIHJlcGVhdGVyOiB7IGljb246IFwi4pqh77iPXCIsIHRpdGxlOiBcIlJlcGVhdGVyXCIgfSxcbiAgfTtcbiAgXG4gIGNvbnN0IHsgaWNvbiwgdGl0bGUgfSA9IG1hcmtlckluZm9bbWFya2VyVHlwZV07XG4gIGNvbnN0IHN0YXRpb25FbGV2YXRpb24gPSBpbml0aWFsRWxldmF0aW9uICsgZWxldmF0aW9uT2Zmc2V0O1xuICBcbiAgLy8gQWRkIG1hcmtlciBpbmRleCB0byB0aXRsZSBpZiB0aGVyZSBhcmUgbXVsdGlwbGUgbWFya2VycyBvZiB0aGlzIHR5cGVcbiAgY29uc3QgbWFya2VyVGl0bGUgPSBoYXNNdWx0aXBsZSA/IGAke3RpdGxlfSAjJHttYXJrZXJJbmRleCArIDF9YCA6IHRpdGxlO1xuICBcbiAgcG9wdXBEaXYuaW5uZXJIVE1MID0gYFxuICAgIDxkaXYgY2xhc3M9XCJwb3B1cC1jb250YWluZXJcIiBzdHlsZT1cIiR7c3R5bGVzLmNvbnRhaW5lcn1cIj5cbiAgICAgIDxkaXYgc3R5bGU9XCIke3N0eWxlcy5oZWFkZXJ9XCI+XG4gICAgICAgIDxkaXYgc3R5bGU9XCJkaXNwbGF5OiBmbGV4OyBhbGlnbi1pdGVtczogY2VudGVyO1wiPlxuICAgICAgICAgIDxoNSBzdHlsZT1cImZvbnQtd2VpZ2h0OiA2MDA7IGZvbnQtc2l6ZTogMC44NzVyZW07IGNvbG9yOiAjNGE1NTY4O1wiPlxuICAgICAgICAgICAgJHttYXJrZXJUaXRsZX0gJHtpY29ufVxuICAgICAgICAgIDwvaDU+XG4gICAgICAgICAgPHNwYW4gc3R5bGU9XCIke3N0eWxlcy5pZH1cIiB0aXRsZT1cIk1hcmtlciBJRFwiPiR7bWFya2VySWQuc3Vic3RyaW5nKDAsIDYpfTwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxidXR0b24gaWQ9XCJkZWxldGUtbWFya2VyLWJ0blwiIHN0eWxlPVwiJHtzdHlsZXMuZGVsZXRlQnRufVwiPlxuICAgICAgICAgIERlbGV0ZVxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBzdHlsZT1cIm1hcmdpbi1ib3R0b206IDhweDtcIj5cbiAgICAgICAgPGxhYmVsIHN0eWxlPVwiJHtzdHlsZXMubGFiZWx9XCI+R3JvdW5kIEVsZXZhdGlvbjo8L2xhYmVsPlxuICAgICAgICA8c3BhbiBzdHlsZT1cIiR7c3R5bGVzLnZhbHVlfVwiPiR7aW5pdGlhbEVsZXZhdGlvbi50b0ZpeGVkKDEpfSBtIEFTTDwvc3Bhbj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBzdHlsZT1cIm1hcmdpbi1ib3R0b206IDhweDtcIj5cbiAgICAgICAgPGxhYmVsIHN0eWxlPVwiJHtzdHlsZXMubGFiZWx9XCI+RWxldmF0aW9uIE9mZnNldDo8L2xhYmVsPlxuICAgICAgICA8c3BhbiBzdHlsZT1cIiR7c3R5bGVzLnZhbHVlfVwiPiR7ZWxldmF0aW9uT2Zmc2V0LnRvRml4ZWQoMSl9IG08L3NwYW4+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgc3R5bGU9XCJtYXJnaW4tYm90dG9tOiA4cHg7XCI+XG4gICAgICAgIDxsYWJlbCBzdHlsZT1cIiR7c3R5bGVzLmxhYmVsfVwiPlN0YXRpb24gRWxldmF0aW9uOjwvbGFiZWw+XG4gICAgICAgIDxzcGFuIHN0eWxlPVwiJHtzdHlsZXMudmFsdWV9XCI+JHtzdGF0aW9uRWxldmF0aW9uLnRvRml4ZWQoMSl9IG0gQVNMPC9zcGFuPlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gIGA7XG4gIFxuICAvLyBVc2UgYSBnZW5lcmljIGJ1dHRvbiBJRCBzaW5jZSB3ZSdyZSBwYXNzaW5nIHRoZSBjYWxsYmFjayBkaXJlY3RseVxuICBwb3B1cERpdi5xdWVyeVNlbGVjdG9yKGAjZGVsZXRlLW1hcmtlci1idG5gKVxuICAgID8uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIG9uRGVsZXRlKTtcbiAgICBcbiAgcmV0dXJuIG5ldyBtYXBib3hnbC5Qb3B1cCh7IGNsb3NlQnV0dG9uOiBmYWxzZSB9KS5zZXRET01Db250ZW50KHBvcHVwRGl2KTtcbn0iXSwibmFtZXMiOlsibWFwYm94Z2wiLCJjcmVhdGVNYXJrZXJQb3B1cCIsIm1hcmtlclR5cGUiLCJpbml0aWFsRWxldmF0aW9uIiwiZWxldmF0aW9uT2Zmc2V0Iiwib25EZWxldGUiLCJtYXJrZXJJZCIsIm1hcmtlckluZGV4IiwiaGFzTXVsdGlwbGUiLCJwb3B1cERpdiIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInN0eWxlcyIsImNvbnRhaW5lciIsImhlYWRlciIsImRlbGV0ZUJ0biIsImxhYmVsIiwidmFsdWUiLCJpZCIsIm1hcmtlckluZm8iLCJnY3MiLCJpY29uIiwidGl0bGUiLCJvYnNlcnZlciIsInJlcGVhdGVyIiwic3RhdGlvbkVsZXZhdGlvbiIsIm1hcmtlclRpdGxlIiwiaW5uZXJIVE1MIiwic3Vic3RyaW5nIiwidG9GaXhlZCIsInF1ZXJ5U2VsZWN0b3IiLCJhZGRFdmVudExpc3RlbmVyIiwiUG9wdXAiLCJjbG9zZUJ1dHRvbiIsInNldERPTUNvbnRlbnQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./src/app/components/Map/Utils/markerPopup.ts\n");

/***/ }),

/***/ "(ssr)/./src/app/components/Map/index.tsx":
/*!******************************************!*\
  !*** ./src/app/components/Map/index.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Hooks_useMap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Hooks/useMap */ \"(ssr)/./src/app/components/Map/Hooks/useMap.ts\");\n/* harmony import */ var _context_mapcontext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../context/mapcontext */ \"(ssr)/./src/app/context/mapcontext.tsx\");\n/* harmony import */ var _context_FlightPlanContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../context/FlightPlanContext */ \"(ssr)/./src/app/context/FlightPlanContext.tsx\");\n/* harmony import */ var _context_LOSAnalysisContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../context/LOSAnalysisContext */ \"(ssr)/./src/app/context/LOSAnalysisContext.tsx\");\n/* harmony import */ var _context_AreaOfOpsContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../context/AreaOfOpsContext */ \"(ssr)/./src/app/context/AreaOfOpsContext.tsx\");\n/* harmony import */ var _Map_Hooks_useFlightPlanProcessor__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Map/Hooks/useFlightPlanProcessor */ \"(ssr)/./src/app/components/Map/Hooks/useFlightPlanProcessor.tsx\");\n/* harmony import */ var _Hooks_useMarkers__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Hooks/useMarkers */ \"(ssr)/./src/app/components/Map/Hooks/useMarkers.ts\");\n/* harmony import */ var _hooks_useTowerToMarker__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../hooks/useTowerToMarker */ \"(ssr)/./src/app/hooks/useTowerToMarker.ts\");\n/* harmony import */ var _hooks_useLayers__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../hooks/useLayers */ \"(ssr)/./src/app/hooks/useLayers.ts\");\n/* harmony import */ var _MarkerControls__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./MarkerControls */ \"(ssr)/./src/app/components/Map/MarkerControls.tsx\");\n/* harmony import */ var _LayerControls__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./LayerControls */ \"(ssr)/./src/app/components/Map/LayerControls.tsx\");\n/* harmony import */ var _MeasurementControls__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./MeasurementControls */ \"(ssr)/./src/app/components/Map/MeasurementControls.tsx\");\n/* harmony import */ var _MapLegend__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./MapLegend */ \"(ssr)/./src/app/components/Map/MapLegend.tsx\");\n/* harmony import */ var _AnalysisStatus__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./AnalysisStatus */ \"(ssr)/./src/app/components/Map/AnalysisStatus.tsx\");\n/* harmony import */ var _FlightPathDisplay__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./FlightPathDisplay */ \"(ssr)/./src/app/components/Map/FlightPathDisplay.tsx\");\n/* harmony import */ var _AO_AODisplay__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../AO/AODisplay */ \"(ssr)/./src/app/components/AO/AODisplay.tsx\");\n/* harmony import */ var _MapboxLayerHandler__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./MapboxLayerHandler */ \"(ssr)/./src/app/components/Map/MapboxLayerHandler.tsx\");\n/* harmony import */ var _DBYDLayerHandler__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./DBYDLayerHandler */ \"(ssr)/./src/app/components/Map/DBYDLayerHandler.tsx\");\n/* harmony import */ var _Analyses_Services_GridAnalysis_GridAnalysisController__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../Analyses/Services/GridAnalysis/GridAnalysisController */ \"(ssr)/./src/app/components/Analyses/Services/GridAnalysis/GridAnalysisController.tsx\");\n/* harmony import */ var _context_AnalysisControllerContext__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../context/AnalysisControllerContext */ \"(ssr)/./src/app/context/AnalysisControllerContext.tsx\");\n/* harmony import */ var _tracking_tracking__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../tracking/tracking */ \"(ssr)/./src/app/components/tracking/tracking.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Map component that renders the Mapbox map and associated controls\n */ const Map = ({ activePanel, togglePanel, flightPlan, setShowUploader })=>{\n    const { setMap, elevationService } = (0,_context_mapcontext__WEBPACK_IMPORTED_MODULE_3__.useMapContext)();\n    const { setFlightPlan, setDistance, setProcessed } = (0,_context_FlightPlanContext__WEBPACK_IMPORTED_MODULE_4__.useFlightPlanContext)();\n    const { isAnalyzing, setIsAnalyzing, setResults, setError, error, resetAnalysis } = (0,_context_LOSAnalysisContext__WEBPACK_IMPORTED_MODULE_5__.useLOSAnalysis)();\n    const { aoGeometry } = (0,_context_AreaOfOpsContext__WEBPACK_IMPORTED_MODULE_6__.useAreaOfOpsContext)();\n    const mapContainerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const DBYDLayerHandlerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const { gridAnalysisRef } = (0,_context_AnalysisControllerContext__WEBPACK_IMPORTED_MODULE_21__.useAnalysisController)();\n    const hasSetMapRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    const { map, terrainLoaded } = (0,_Hooks_useMap__WEBPACK_IMPORTED_MODULE_2__.useMap)('map-container', {\n        style: 'mapbox://styles/intelaero/cm7pqu42s000601svdp7m3h0b',\n        center: [\n            0,\n            0\n        ],\n        zoom: 2.5,\n        projection: 'globe'\n    });\n    const { processFlightPlan } = (0,_Map_Hooks_useFlightPlanProcessor__WEBPACK_IMPORTED_MODULE_7__.useFlightPlanProcessor)();\n    const { markers, updateMarkerPopups } = (0,_Hooks_useMarkers__WEBPACK_IMPORTED_MODULE_8__.useMarkers)({\n        map,\n        terrainLoaded\n    });\n    const { convertTowerToRepeater } = (0,_hooks_useTowerToMarker__WEBPACK_IMPORTED_MODULE_9__.useTowerToMarker)({\n        map,\n        terrainLoaded\n    });\n    const { addFlightPath, resetLayers } = (0,_hooks_useLayers__WEBPACK_IMPORTED_MODULE_10__.useLayers)();\n    /**\n   * Set map instance when map and terrain are loaded\n   */ (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Map.useEffect\": ()=>{\n            if (map && terrainLoaded && !hasSetMapRef.current) {\n                setMap(map, terrainLoaded);\n                hasSetMapRef.current = true;\n                (0,_tracking_tracking__WEBPACK_IMPORTED_MODULE_22__.trackEventWithForm)('map_initialized', {\n                    mapLoaded: true\n                });\n            }\n        }\n    }[\"Map.useEffect\"], [\n        map,\n        terrainLoaded,\n        setMap\n    ]);\n    /**\n   * Process flight plan when available\n   */ (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Map.useEffect\": ()=>{\n            if (!flightPlan || flightPlan.properties?.processed || !map || !elevationService) {\n                console.log('Skipping flight plan processing:', {\n                    hasFlightPlan: !!flightPlan,\n                    isProcessed: flightPlan?.properties?.processed,\n                    mapLoaded: !!map,\n                    elevationServiceAvailable: !!elevationService\n                });\n                return;\n            }\n            console.log(`Starting flight plan processing: elevationService=${!!elevationService}, ` + `mapbox-dem loaded=${map?.isSourceLoaded('mapbox-dem') ?? false}`);\n            const handleProcessedPlan = {\n                \"Map.useEffect.handleProcessedPlan\": (processedPlan)=>{\n                    console.log('Flight plan processed:', {\n                        planId: processedPlan.properties?.id || 'unknown',\n                        distance: processedPlan.properties?.totalDistance,\n                        hasFeatures: processedPlan.features?.length > 0\n                    });\n                    if (processedPlan.properties?.totalDistance) {\n                        setDistance(processedPlan.properties.totalDistance);\n                    }\n                    addFlightPath(processedPlan);\n                    (0,_tracking_tracking__WEBPACK_IMPORTED_MODULE_22__.trackEventWithForm)('flight_plan_processing_completed', {\n                        planId: processedPlan.properties?.id || 'unknown',\n                        distance: processedPlan.properties?.totalDistance\n                    });\n                }\n            }[\"Map.useEffect.handleProcessedPlan\"];\n            const handleProcessingError = {\n                \"Map.useEffect.handleProcessingError\": (error)=>{\n                    console.error('Failed to process flight plan:', error);\n                    setError('Failed to process flight plan. Please try again.');\n                    (0,_tracking_tracking__WEBPACK_IMPORTED_MODULE_22__.trackEventWithForm)('flight_plan_processing_error', {\n                        error: error instanceof Error ? error.message : 'Unknown error'\n                    });\n                }\n            }[\"Map.useEffect.handleProcessingError\"];\n            (0,_tracking_tracking__WEBPACK_IMPORTED_MODULE_22__.trackEventWithForm)('flight_plan_processing_started', {\n                planId: flightPlan.properties?.id || 'unknown'\n            });\n            console.time('FlightPlanProcessing');\n            elevationService.ensureTerrainReady().then({\n                \"Map.useEffect\": ()=>{\n                    console.log('Terrain ready');\n                    return elevationService.preloadArea(flightPlan.features[0].geometry.coordinates);\n                }\n            }[\"Map.useEffect\"]).then({\n                \"Map.useEffect\": ()=>{\n                    console.log('Terrain area preloaded');\n                    return processFlightPlan(flightPlan);\n                }\n            }[\"Map.useEffect\"]).then({\n                \"Map.useEffect\": (processedPlan)=>{\n                    console.log('processFlightPlan completed:', processedPlan);\n                    return processedPlan;\n                }\n            }[\"Map.useEffect\"]).then(handleProcessedPlan).catch({\n                \"Map.useEffect\": (error)=>{\n                    console.error('Processing pipeline error:', error);\n                    handleProcessingError(error);\n                }\n            }[\"Map.useEffect\"]).finally({\n                \"Map.useEffect\": ()=>{\n                    console.timeEnd('FlightPlanProcessing');\n                }\n            }[\"Map.useEffect\"]);\n        }\n    }[\"Map.useEffect\"], [\n        flightPlan,\n        map,\n        elevationService,\n        processFlightPlan,\n        setFlightPlan,\n        setDistance,\n        setProcessed,\n        setError,\n        addFlightPath\n    ]);\n    /**\n   * Update marker popups when map or terrain changes\n   */ (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Map.useEffect\": ()=>{\n            if (map && terrainLoaded) {\n                updateMarkerPopups();\n            }\n        }\n    }[\"Map.useEffect\"], [\n        updateMarkerPopups,\n        map,\n        terrainLoaded\n    ]);\n    /**\n   * Run ELOS analysis\n   */ const runElosAnalysis = async ()=>{\n        if (!map || !gridAnalysisRef.current) return;\n        try {\n            setIsAnalyzing(true);\n            setError(null);\n            (0,_tracking_tracking__WEBPACK_IMPORTED_MODULE_22__.trackEventWithForm)('elos_analysis_started', {});\n            resetLayers();\n            // Import useAreaOpsProcessor here as a local import if used only in this function\n            const { showAreaOfOperations } = (__webpack_require__(/*! ../AO/Hooks/useAreaOpsProcessor */ \"(ssr)/./src/app/components/AO/Hooks/useAreaOpsProcessor.ts\").useAreaOpsProcessor)();\n            // Show Area of Operations for the analysis\n            showAreaOfOperations();\n            await gridAnalysisRef.current.runFlightPathAnalysis();\n            (0,_tracking_tracking__WEBPACK_IMPORTED_MODULE_22__.trackEventWithForm)('elos_analysis_completed', {});\n        } catch (err) {\n            setError(err instanceof Error ? err.message : 'Analysis failed');\n            (0,_tracking_tracking__WEBPACK_IMPORTED_MODULE_22__.trackEventWithForm)('elos_analysis_error', {\n                error: err instanceof Error ? err.message : 'Unknown error'\n            });\n        } finally{\n            setIsAnalyzing(false);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"relative\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                id: \"map-container\",\n                ref: mapContainerRef,\n                className: \"w-full h-screen\"\n            }, void 0, false, {\n                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/index.tsx\",\n                lineNumber: 191,\n                columnNumber: 7\n            }, undefined),\n            map && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_MapboxLayerHandler__WEBPACK_IMPORTED_MODULE_18__[\"default\"], {\n                        map: map\n                    }, void 0, false, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/index.tsx\",\n                        lineNumber: 198,\n                        columnNumber: 11\n                    }, undefined),\n                    aoGeometry && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_DBYDLayerHandler__WEBPACK_IMPORTED_MODULE_19__[\"default\"], {\n                        ref: DBYDLayerHandlerRef,\n                        map: map\n                    }, void 0, false, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/index.tsx\",\n                        lineNumber: 199,\n                        columnNumber: 26\n                    }, undefined)\n                ]\n            }, void 0, true),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_MarkerControls__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {}, void 0, false, {\n                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/index.tsx\",\n                lineNumber: 202,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute top-4 left-4 z-10 flex flex-col gap-4\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_LayerControls__WEBPACK_IMPORTED_MODULE_12__[\"default\"], {\n                        onToggleDBYD: ()=>{\n                            if (DBYDLayerHandlerRef.current) {\n                                (0,_tracking_tracking__WEBPACK_IMPORTED_MODULE_22__.trackEventWithForm)('dbyd_powerlines_requested', {});\n                                DBYDLayerHandlerRef.current.fetchLayers();\n                            }\n                        },\n                        activePanel: activePanel,\n                        togglePanel: togglePanel,\n                        flightPlan: flightPlan,\n                        setShowUploader: setShowUploader\n                    }, void 0, false, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/index.tsx\",\n                        lineNumber: 204,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_MeasurementControls__WEBPACK_IMPORTED_MODULE_13__[\"default\"], {}, void 0, false, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/index.tsx\",\n                        lineNumber: 216,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/index.tsx\",\n                lineNumber: 203,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_MapLegend__WEBPACK_IMPORTED_MODULE_14__[\"default\"], {}, void 0, false, {\n                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/index.tsx\",\n                lineNumber: 218,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_AnalysisStatus__WEBPACK_IMPORTED_MODULE_15__[\"default\"], {\n                onStopLOS: ()=>{\n                // LOS analysis cancel logic\n                },\n                onStopObstacle: ()=>{\n                // Any additional logic beyond calling cancelAnalysis\n                }\n            }, void 0, false, {\n                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/index.tsx\",\n                lineNumber: 219,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_FlightPathDisplay__WEBPACK_IMPORTED_MODULE_16__[\"default\"], {}, void 0, false, {\n                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/index.tsx\",\n                lineNumber: 229,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_AO_AODisplay__WEBPACK_IMPORTED_MODULE_17__[\"default\"], {}, void 0, false, {\n                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/index.tsx\",\n                lineNumber: 230,\n                columnNumber: 7\n            }, undefined),\n            error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute bottom-4 left-4 bg-red-500 text-white px-4 py-2 rounded-lg shadow-lg flex items-center\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        children: \"⚠️\"\n                    }, void 0, false, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/index.tsx\",\n                        lineNumber: 233,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"ml-2\",\n                        children: error\n                    }, void 0, false, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/index.tsx\",\n                        lineNumber: 234,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: ()=>setError(null),\n                        className: \"ml-2 hover:opacity-75\",\n                        children: \"✕\"\n                    }, void 0, false, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/index.tsx\",\n                        lineNumber: 235,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/index.tsx\",\n                lineNumber: 232,\n                columnNumber: 9\n            }, undefined),\n            map && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Analyses_Services_GridAnalysis_GridAnalysisController__WEBPACK_IMPORTED_MODULE_20__[\"default\"], {\n                ref: gridAnalysisRef,\n                flightPlan: flightPlan?.properties?.processed ? flightPlan : undefined,\n                onProgress: (progress)=>{},\n                onError: (error)=>{\n                    console.error(\"ELOS Analysis error:\", error);\n                    setError(error.message);\n                },\n                onComplete: (result)=>{\n                    console.log(\"ELOS Analysis completed:\", result);\n                    setResults(result);\n                }\n            }, void 0, false, {\n                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/index.tsx\",\n                lineNumber: 245,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/Map/index.tsx\",\n        lineNumber: 190,\n        columnNumber: 5\n    }, undefined);\n};\nMap.displayName = 'Map';\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Map);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/components/Map/index.tsx\n");

/***/ }),

/***/ "(ssr)/./src/app/components/UI/Card.tsx":
/*!****************************************!*\
  !*** ./src/app/components/UI/Card.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n// components/Card.tsx\n\n\nconst Card = ({ children })=>{\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex-1 bg-white shadow-lg p-6 rounded-lg border border-gray-200\",\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/UI/Card.tsx\",\n        lineNumber: 11,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Card);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvYXBwL2NvbXBvbmVudHMvVUkvQ2FyZC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxzQkFBc0I7O0FBQ21CO0FBT3pDLE1BQU1DLE9BQTRCLENBQUMsRUFBRUMsUUFBUSxFQUFFO0lBQzdDLHFCQUNFLDhEQUFDQztRQUFJQyxXQUFVO2tCQUNaRjs7Ozs7O0FBR1A7QUFFQSxpRUFBZUQsSUFBSUEsRUFBQyIsInNvdXJjZXMiOlsiL1VzZXJzL2tpZXJhbmJsYWlyL2dpdC9mYS9mbGlnaHQtYXNzdXJhbmNlL3NyYy9hcHAvY29tcG9uZW50cy9VSS9DYXJkLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBjb21wb25lbnRzL0NhcmQudHN4XG5pbXBvcnQgUmVhY3QsIHsgUmVhY3ROb2RlIH0gZnJvbSBcInJlYWN0XCI7XG5cbmludGVyZmFjZSBDYXJkUHJvcHMge1xuICBjaGlsZHJlbjogUmVhY3ROb2RlO1xuICBjbGFzc05hbWU/OiBzdHJpbmc7IFxufVxuXG5jb25zdCBDYXJkOiBSZWFjdC5GQzxDYXJkUHJvcHM+ID0gKHsgY2hpbGRyZW4gfSkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleC0xIGJnLXdoaXRlIHNoYWRvdy1sZyBwLTYgcm91bmRlZC1sZyBib3JkZXIgYm9yZGVyLWdyYXktMjAwXCI+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDYXJkO1xuIl0sIm5hbWVzIjpbIlJlYWN0IiwiQ2FyZCIsImNoaWxkcmVuIiwiZGl2IiwiY2xhc3NOYW1lIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./src/app/components/UI/Card.tsx\n");

/***/ }),

/***/ "(ssr)/./src/app/components/UI/MapSidePanel.tsx":
/*!************************************************!*\
  !*** ./src/app/components/UI/MapSidePanel.tsx ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_ChevronRight_lucide_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! __barrel_optimize__?names=ChevronRight!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/chevron-right.js\");\n// This component is designed to be used beside the map where you want to show additional information or controls\n// in a side panel that can be toggled open or closed.\n\n\n\nconst MapSidePanel = ({ title, children, className = '', isExpanded, onToggle, icon })=>{\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: `fixed top-0 right-0 h-full w-80 transition-transform duration-300 ease-in-out\n        ${isExpanded ? 'translate-x-0' : 'translate-x-full'}\n        ${className}`,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"h-full\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"relative bg-white/95 backdrop-blur-sm shadow-xl w-full h-full flex flex-col rounded-l-lg border border-gray-200  overflow-hidden\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"px-4 py-3 bg-gray-50/90 border-b border-gray-200 flex items-center justify-between shadow-sm\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex items-center gap-2\",\n                                children: [\n                                    icon && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        className: \"text-gray-600\",\n                                        children: icon\n                                    }, void 0, false, {\n                                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/UI/MapSidePanel.tsx\",\n                                        lineNumber: 40,\n                                        columnNumber: 24\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                        className: \"font-medium text-gray-900\",\n                                        children: title\n                                    }, void 0, false, {\n                                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/UI/MapSidePanel.tsx\",\n                                        lineNumber: 41,\n                                        columnNumber: 15\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/UI/MapSidePanel.tsx\",\n                                lineNumber: 39,\n                                columnNumber: 13\n                            }, undefined),\n                            isExpanded && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>{\n                                    console.log(\"Close button clicked\"); // Debug log\n                                    onToggle();\n                                },\n                                className: \"p-1.5 hover:bg-gray-200 rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500\",\n                                \"aria-label\": \"Close panel\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_ChevronRight_lucide_react__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                                    className: \"w-5 h-5 text-gray-600\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/UI/MapSidePanel.tsx\",\n                                    lineNumber: 55,\n                                    columnNumber: 15\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/UI/MapSidePanel.tsx\",\n                                lineNumber: 46,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/UI/MapSidePanel.tsx\",\n                        lineNumber: 37,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex-1 p-4 overflow-y-auto overscroll-contain scrollbar-thin scrollbar-thumb-gray-300 scrollbar-track-transparent hover:scrollbar-thumb-gray-400\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"max-w-full\",\n                            children: children\n                        }, void 0, false, {\n                            fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/UI/MapSidePanel.tsx\",\n                            lineNumber: 64,\n                            columnNumber: 13\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/UI/MapSidePanel.tsx\",\n                        lineNumber: 61,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/UI/MapSidePanel.tsx\",\n                lineNumber: 33,\n                columnNumber: 9\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/UI/MapSidePanel.tsx\",\n            lineNumber: 31,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/UI/MapSidePanel.tsx\",\n        lineNumber: 25,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MapSidePanel);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvYXBwL2NvbXBvbmVudHMvVUkvTWFwU2lkZVBhbmVsLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxpSEFBaUg7QUFDakgsc0RBQXNEOztBQUU1QjtBQUNrQjtBQVc1QyxNQUFNRSxlQUE0QyxDQUFDLEVBQ2pEQyxLQUFLLEVBQ0xDLFFBQVEsRUFDUkMsWUFBWSxFQUFFLEVBQ2RDLFVBQVUsRUFDVkMsUUFBUSxFQUNSQyxJQUFJLEVBQ0w7SUFDQyxxQkFDRSw4REFBQ0M7UUFDQ0osV0FBVyxDQUFDO1FBQ1YsRUFBRUMsYUFBYSxrQkFBa0IsbUJBQW1CO1FBQ3BELEVBQUVELFdBQVc7a0JBR2YsNEVBQUNJO1lBQUlKLFdBQVU7c0JBRWIsNEVBQUNJO2dCQUFJSixXQUFVOztrQ0FJYiw4REFBQ0k7d0JBQUlKLFdBQVU7OzBDQUViLDhEQUFDSTtnQ0FBSUosV0FBVTs7b0NBQ1pHLHNCQUFRLDhEQUFDRTt3Q0FBS0wsV0FBVTtrREFBaUJHOzs7Ozs7a0RBQzFDLDhEQUFDRzt3Q0FBR04sV0FBVTtrREFBNkJGOzs7Ozs7Ozs7Ozs7NEJBSTVDRyw0QkFDRCw4REFBQ007Z0NBQ0NDLFNBQVM7b0NBQ1BDLFFBQVFDLEdBQUcsQ0FBQyx5QkFBeUIsWUFBWTtvQ0FDakRSO2dDQUNGO2dDQUNBRixXQUFVO2dDQUVWVyxjQUFXOzBDQUVYLDRFQUFDZix3RkFBWUE7b0NBQUNJLFdBQVU7Ozs7Ozs7Ozs7Ozs7Ozs7O2tDQU01Qiw4REFBQ0k7d0JBQUlKLFdBQVU7a0NBR2IsNEVBQUNJOzRCQUFJSixXQUFVO3NDQUNaRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBUWY7QUFFQSxpRUFBZUYsWUFBWUEsRUFBQyIsInNvdXJjZXMiOlsiL1VzZXJzL2tpZXJhbmJsYWlyL2dpdC9mYS9mbGlnaHQtYXNzdXJhbmNlL3NyYy9hcHAvY29tcG9uZW50cy9VSS9NYXBTaWRlUGFuZWwudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoaXMgY29tcG9uZW50IGlzIGRlc2lnbmVkIHRvIGJlIHVzZWQgYmVzaWRlIHRoZSBtYXAgd2hlcmUgeW91IHdhbnQgdG8gc2hvdyBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIG9yIGNvbnRyb2xzXG4vLyBpbiBhIHNpZGUgcGFuZWwgdGhhdCBjYW4gYmUgdG9nZ2xlZCBvcGVuIG9yIGNsb3NlZC5cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IENoZXZyb25SaWdodCB9IGZyb20gJ2x1Y2lkZS1yZWFjdCc7XG5cbmludGVyZmFjZSBNYXBTaWRlUGFuZWxQcm9wcyB7XG4gIHRpdGxlOiBzdHJpbmc7XG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGU7XG4gIGNsYXNzTmFtZT86IHN0cmluZztcbiAgaXNFeHBhbmRlZDogYm9vbGVhbjtcbiAgb25Ub2dnbGU6ICgpID0+IHZvaWQ7XG4gIGljb24/OiBSZWFjdC5SZWFjdE5vZGU7XG59XG5cbmNvbnN0IE1hcFNpZGVQYW5lbDogUmVhY3QuRkM8TWFwU2lkZVBhbmVsUHJvcHM+ID0gKHtcbiAgdGl0bGUsXG4gIGNoaWxkcmVuLFxuICBjbGFzc05hbWUgPSAnJyxcbiAgaXNFeHBhbmRlZCxcbiAgb25Ub2dnbGUsXG4gIGljb25cbn0pID0+IHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICBjbGFzc05hbWU9e2BmaXhlZCB0b3AtMCByaWdodC0wIGgtZnVsbCB3LTgwIHRyYW5zaXRpb24tdHJhbnNmb3JtIGR1cmF0aW9uLTMwMCBlYXNlLWluLW91dFxuICAgICAgICAke2lzRXhwYW5kZWQgPyAndHJhbnNsYXRlLXgtMCcgOiAndHJhbnNsYXRlLXgtZnVsbCd9XG4gICAgICAgICR7Y2xhc3NOYW1lfWB9XG4gICAgPlxuICAgICAgey8qIE1haW4gUGFuZWwgKi99XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImgtZnVsbFwiPlxuICAgICAgICB7LyogQ29udGVudCBDb250YWluZXIgKi99XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicmVsYXRpdmUgYmctd2hpdGUvOTUgYmFja2Ryb3AtYmx1ci1zbSBzaGFkb3cteGxcbiAgICAgICAgICB3LWZ1bGwgaC1mdWxsIGZsZXggZmxleC1jb2wgcm91bmRlZC1sLWxnIGJvcmRlciBib3JkZXItZ3JheS0yMDAgXG4gICAgICAgICAgb3ZlcmZsb3ctaGlkZGVuXCI+XG4gICAgICAgICAgey8qIEhlYWRlciAqL31cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInB4LTQgcHktMyBiZy1ncmF5LTUwLzkwIGJvcmRlci1iIGJvcmRlci1ncmF5LTIwMFxuICAgICAgICAgICAgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIHNoYWRvdy1zbVwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBnYXAtMlwiPlxuICAgICAgICAgICAgICB7aWNvbiAmJiA8c3BhbiBjbGFzc05hbWU9XCJ0ZXh0LWdyYXktNjAwXCI+e2ljb259PC9zcGFuPn1cbiAgICAgICAgICAgICAgPGgzIGNsYXNzTmFtZT1cImZvbnQtbWVkaXVtIHRleHQtZ3JheS05MDBcIj57dGl0bGV9PC9oMz5cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICB7LyogQ2xvc2UgYnV0dG9uICovfVxuICAgICAgICAgICAge2lzRXhwYW5kZWQgJiYgKFxuICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJDbG9zZSBidXR0b24gY2xpY2tlZFwiKTsgLy8gRGVidWcgbG9nXG4gICAgICAgICAgICAgICAgb25Ub2dnbGUoKTtcbiAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwicC0xLjUgaG92ZXI6YmctZ3JheS0yMDAgcm91bmRlZC1mdWxsIHRyYW5zaXRpb24tY29sb3JzXG4gICAgICAgICAgICAgICAgZm9jdXM6b3V0bGluZS1ub25lIGZvY3VzOnJpbmctMiBmb2N1czpyaW5nLWJsdWUtNTAwXCJcbiAgICAgICAgICAgICAgYXJpYS1sYWJlbD1cIkNsb3NlIHBhbmVsXCJcbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPENoZXZyb25SaWdodCBjbGFzc05hbWU9XCJ3LTUgaC01IHRleHQtZ3JheS02MDBcIiAvPlxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgKX1cblxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIHsvKiBDb250ZW50ICovfVxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleC0xIHAtNCBvdmVyZmxvdy15LWF1dG8gb3ZlcnNjcm9sbC1jb250YWluXG4gICAgICAgICAgICBzY3JvbGxiYXItdGhpbiBzY3JvbGxiYXItdGh1bWItZ3JheS0zMDAgc2Nyb2xsYmFyLXRyYWNrLXRyYW5zcGFyZW50XG4gICAgICAgICAgICBob3ZlcjpzY3JvbGxiYXItdGh1bWItZ3JheS00MDBcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWF4LXctZnVsbFwiPlxuICAgICAgICAgICAgICB7Y2hpbGRyZW59XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICAgIFxuICAgIDwvZGl2PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgTWFwU2lkZVBhbmVsOyJdLCJuYW1lcyI6WyJSZWFjdCIsIkNoZXZyb25SaWdodCIsIk1hcFNpZGVQYW5lbCIsInRpdGxlIiwiY2hpbGRyZW4iLCJjbGFzc05hbWUiLCJpc0V4cGFuZGVkIiwib25Ub2dnbGUiLCJpY29uIiwiZGl2Iiwic3BhbiIsImgzIiwiYnV0dG9uIiwib25DbGljayIsImNvbnNvbGUiLCJsb2ciLCJhcmlhLWxhYmVsIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./src/app/components/UI/MapSidePanel.tsx\n");

/***/ }),

/***/ "(ssr)/./src/app/components/UI/PremiumButton.tsx":
/*!*************************************************!*\
  !*** ./src/app/components/UI/PremiumButton.tsx ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _context_PremiumContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../context/PremiumContext */ \"(ssr)/./src/app/context/PremiumContext.tsx\");\n/* harmony import */ var _types_PremiumTypes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../types/PremiumTypes */ \"(ssr)/./src/app/types/PremiumTypes.ts\");\n/* harmony import */ var _barrel_optimize_names_Sparkles_lucide_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! __barrel_optimize__?names=Sparkles!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/sparkles.js\");\n/**\n * src/app/components/UI/PremiumButton.tsx\n * \n * Purpose:\n * A permission-aware button component that acts as a drop-in replacement for standard buttons.\n * It checks if the user has access to the specified feature before executing the onClick handler.\n * \n * If the user doesn't have access, it triggers the upgrade flow instead of performing the action.\n * This component maintains the original button styling and behavior for seamless integration.\n */ /**\n * PremiumButton.tsx - Enhanced with subtle premium indicators\n */ \n\n\n\n // Or another icon from your library\nconst PremiumButton = ({ featureId, onClick, children, permissionParams, disabled, className, showIndicator = true, indicatorPosition = 'right', ...props })=>{\n    const { canUseFeature, requestUpgrade, getRequiredTierForFeature, tierLevel } = (0,_context_PremiumContext__WEBPACK_IMPORTED_MODULE_2__.usePremium)();\n    // Check if user has permission to use this feature\n    const hasPermission = canUseFeature(featureId, permissionParams);\n    // Get the tier required for this feature\n    const requiredTier = getRequiredTierForFeature(featureId);\n    // Only show indicator if this is a premium feature and user doesn't have access\n    const shouldShowIndicator = showIndicator && requiredTier > _types_PremiumTypes__WEBPACK_IMPORTED_MODULE_3__.TierLevel.FREE && requiredTier > tierLevel;\n    // Handle button click\n    const handleClick = (e)=>{\n        if (!hasPermission) {\n            requestUpgrade(featureId);\n            return;\n        }\n        if (onClick) {\n            onClick(e);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n        onClick: handleClick,\n        disabled: disabled,\n        className: `relative ${className}`,\n        ...props,\n        children: [\n            shouldShowIndicator && indicatorPosition === 'left' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                className: \"inline-flex items-center mr-1.5 text-amber-500\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Sparkles_lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                    size: 14\n                }, void 0, false, {\n                    fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/UI/PremiumButton.tsx\",\n                    lineNumber: 73,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/UI/PremiumButton.tsx\",\n                lineNumber: 72,\n                columnNumber: 9\n            }, undefined),\n            children,\n            shouldShowIndicator && indicatorPosition === 'right' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                className: \"inline-flex items-center ml-1.5 text-amber-500\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Sparkles_lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                    size: 14\n                }, void 0, false, {\n                    fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/UI/PremiumButton.tsx\",\n                    lineNumber: 81,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/UI/PremiumButton.tsx\",\n                lineNumber: 80,\n                columnNumber: 9\n            }, undefined),\n            shouldShowIndicator && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                className: \"absolute -top-8 left-1/2 transform -translate-x-1/2 px-2 py-1 bg-amber-50  text-amber-800 text-xs rounded shadow-sm opacity-0 group-hover:opacity-100  pointer-events-none transition-opacity whitespace-nowrap border border-amber-200\",\n                children: [\n                    requiredTier === _types_PremiumTypes__WEBPACK_IMPORTED_MODULE_3__.TierLevel.COMMUNITY ? 'Community' : 'Commercial',\n                    \" feature\"\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/UI/PremiumButton.tsx\",\n                lineNumber: 87,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/components/UI/PremiumButton.tsx\",\n        lineNumber: 65,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PremiumButton);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvYXBwL2NvbXBvbmVudHMvVUkvUHJlbWl1bUJ1dHRvbi50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7O0NBU0MsR0FFRDs7Q0FFQztBQUU4RDtBQUNMO0FBQ007QUFDeEIsQ0FBQyxvQ0FBb0M7QUFXN0UsTUFBTUksZ0JBQThDLENBQUMsRUFDbkRDLFNBQVMsRUFDVEMsT0FBTyxFQUNQQyxRQUFRLEVBQ1JDLGdCQUFnQixFQUNoQkMsUUFBUSxFQUNSQyxTQUFTLEVBQ1RDLGdCQUFnQixJQUFJLEVBQ3BCQyxvQkFBb0IsT0FBTyxFQUMzQixHQUFHQyxPQUNKO0lBQ0MsTUFBTSxFQUFFQyxhQUFhLEVBQUVDLGNBQWMsRUFBRUMseUJBQXlCLEVBQUVDLFNBQVMsRUFBRSxHQUFHaEIsbUVBQVVBO0lBRTFGLG1EQUFtRDtJQUNuRCxNQUFNaUIsZ0JBQWdCSixjQUFjVCxXQUFXRztJQUUvQyx5Q0FBeUM7SUFDekMsTUFBTVcsZUFBZUgsMEJBQTBCWDtJQUUvQyxnRkFBZ0Y7SUFDaEYsTUFBTWUsc0JBQXNCVCxpQkFBa0JRLGVBQWVqQiwwREFBU0EsQ0FBQ21CLElBQUksSUFBTUYsZUFBZUY7SUFFaEcsc0JBQXNCO0lBQ3RCLE1BQU1LLGNBQWMsQ0FBQ0M7UUFDbkIsSUFBSSxDQUFDTCxlQUFlO1lBQ2xCSCxlQUFlVjtZQUNmO1FBQ0Y7UUFFQSxJQUFJQyxTQUFTO1lBQ1hBLFFBQVFpQjtRQUNWO0lBQ0Y7SUFFQSxxQkFDRSw4REFBQ0M7UUFDQ2xCLFNBQVNnQjtRQUNUYixVQUFVQTtRQUNWQyxXQUFXLENBQUMsU0FBUyxFQUFFQSxXQUFXO1FBQ2pDLEdBQUdHLEtBQUs7O1lBRVJPLHVCQUF1QlIsc0JBQXNCLHdCQUM1Qyw4REFBQ2E7Z0JBQUtmLFdBQVU7MEJBQ2QsNEVBQUNQLG9GQUFRQTtvQkFBQ3VCLE1BQU07Ozs7Ozs7Ozs7O1lBSW5CbkI7WUFFQWEsdUJBQXVCUixzQkFBc0IseUJBQzVDLDhEQUFDYTtnQkFBS2YsV0FBVTswQkFDZCw0RUFBQ1Asb0ZBQVFBO29CQUFDdUIsTUFBTTs7Ozs7Ozs7Ozs7WUFLbkJOLHFDQUNDLDhEQUFDSztnQkFBS2YsV0FBVTs7b0JBR2JTLGlCQUFpQmpCLDBEQUFTQSxDQUFDeUIsU0FBUyxHQUFHLGNBQWM7b0JBQWE7Ozs7Ozs7Ozs7Ozs7QUFLN0U7QUFFQSxpRUFBZXZCLGFBQWFBLEVBQUMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9raWVyYW5ibGFpci9naXQvZmEvZmxpZ2h0LWFzc3VyYW5jZS9zcmMvYXBwL2NvbXBvbmVudHMvVUkvUHJlbWl1bUJ1dHRvbi50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBzcmMvYXBwL2NvbXBvbmVudHMvVUkvUHJlbWl1bUJ1dHRvbi50c3hcbiAqIFxuICogUHVycG9zZTpcbiAqIEEgcGVybWlzc2lvbi1hd2FyZSBidXR0b24gY29tcG9uZW50IHRoYXQgYWN0cyBhcyBhIGRyb3AtaW4gcmVwbGFjZW1lbnQgZm9yIHN0YW5kYXJkIGJ1dHRvbnMuXG4gKiBJdCBjaGVja3MgaWYgdGhlIHVzZXIgaGFzIGFjY2VzcyB0byB0aGUgc3BlY2lmaWVkIGZlYXR1cmUgYmVmb3JlIGV4ZWN1dGluZyB0aGUgb25DbGljayBoYW5kbGVyLlxuICogXG4gKiBJZiB0aGUgdXNlciBkb2Vzbid0IGhhdmUgYWNjZXNzLCBpdCB0cmlnZ2VycyB0aGUgdXBncmFkZSBmbG93IGluc3RlYWQgb2YgcGVyZm9ybWluZyB0aGUgYWN0aW9uLlxuICogVGhpcyBjb21wb25lbnQgbWFpbnRhaW5zIHRoZSBvcmlnaW5hbCBidXR0b24gc3R5bGluZyBhbmQgYmVoYXZpb3IgZm9yIHNlYW1sZXNzIGludGVncmF0aW9uLlxuICovXG5cbi8qKlxuICogUHJlbWl1bUJ1dHRvbi50c3ggLSBFbmhhbmNlZCB3aXRoIHN1YnRsZSBwcmVtaXVtIGluZGljYXRvcnNcbiAqL1xuXG5pbXBvcnQgUmVhY3QsIHsgQnV0dG9uSFRNTEF0dHJpYnV0ZXMsIFJlYWN0Tm9kZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZVByZW1pdW0gfSBmcm9tICcuLi8uLi9jb250ZXh0L1ByZW1pdW1Db250ZXh0JztcbmltcG9ydCB7IEZlYXR1cmVJZCwgVGllckxldmVsIH0gZnJvbSAnLi4vLi4vdHlwZXMvUHJlbWl1bVR5cGVzJztcbmltcG9ydCB7IFNwYXJrbGVzIH0gZnJvbSAnbHVjaWRlLXJlYWN0JzsgLy8gT3IgYW5vdGhlciBpY29uIGZyb20geW91ciBsaWJyYXJ5XG5cbmludGVyZmFjZSBQcmVtaXVtQnV0dG9uUHJvcHMgZXh0ZW5kcyBCdXR0b25IVE1MQXR0cmlidXRlczxIVE1MQnV0dG9uRWxlbWVudD4ge1xuICBmZWF0dXJlSWQ6IEZlYXR1cmVJZDtcbiAgY2hpbGRyZW46IFJlYWN0Tm9kZTtcbiAgcGVybWlzc2lvblBhcmFtcz86IGFueTtcbiAgLy8gTmV3IHByb3BzXG4gIHNob3dJbmRpY2F0b3I/OiBib29sZWFuOyAvLyBXaGV0aGVyIHRvIHNob3cgdGhlIHByZW1pdW0gaW5kaWNhdG9yXG4gIGluZGljYXRvclBvc2l0aW9uPzogJ2xlZnQnIHwgJ3JpZ2h0JzsgLy8gV2hlcmUgdG8gcG9zaXRpb24gdGhlIGluZGljYXRvclxufVxuXG5jb25zdCBQcmVtaXVtQnV0dG9uOiBSZWFjdC5GQzxQcmVtaXVtQnV0dG9uUHJvcHM+ID0gKHtcbiAgZmVhdHVyZUlkLFxuICBvbkNsaWNrLFxuICBjaGlsZHJlbixcbiAgcGVybWlzc2lvblBhcmFtcyxcbiAgZGlzYWJsZWQsXG4gIGNsYXNzTmFtZSxcbiAgc2hvd0luZGljYXRvciA9IHRydWUsXG4gIGluZGljYXRvclBvc2l0aW9uID0gJ3JpZ2h0JyxcbiAgLi4ucHJvcHNcbn0pID0+IHtcbiAgY29uc3QgeyBjYW5Vc2VGZWF0dXJlLCByZXF1ZXN0VXBncmFkZSwgZ2V0UmVxdWlyZWRUaWVyRm9yRmVhdHVyZSwgdGllckxldmVsIH0gPSB1c2VQcmVtaXVtKCk7XG4gIFxuICAvLyBDaGVjayBpZiB1c2VyIGhhcyBwZXJtaXNzaW9uIHRvIHVzZSB0aGlzIGZlYXR1cmVcbiAgY29uc3QgaGFzUGVybWlzc2lvbiA9IGNhblVzZUZlYXR1cmUoZmVhdHVyZUlkLCBwZXJtaXNzaW9uUGFyYW1zKTtcbiAgXG4gIC8vIEdldCB0aGUgdGllciByZXF1aXJlZCBmb3IgdGhpcyBmZWF0dXJlXG4gIGNvbnN0IHJlcXVpcmVkVGllciA9IGdldFJlcXVpcmVkVGllckZvckZlYXR1cmUoZmVhdHVyZUlkKTtcbiAgXG4gIC8vIE9ubHkgc2hvdyBpbmRpY2F0b3IgaWYgdGhpcyBpcyBhIHByZW1pdW0gZmVhdHVyZSBhbmQgdXNlciBkb2Vzbid0IGhhdmUgYWNjZXNzXG4gIGNvbnN0IHNob3VsZFNob3dJbmRpY2F0b3IgPSBzaG93SW5kaWNhdG9yICYmIChyZXF1aXJlZFRpZXIgPiBUaWVyTGV2ZWwuRlJFRSkgJiYgKHJlcXVpcmVkVGllciA+IHRpZXJMZXZlbCk7XG5cbiAgLy8gSGFuZGxlIGJ1dHRvbiBjbGlja1xuICBjb25zdCBoYW5kbGVDbGljayA9IChlOiBSZWFjdC5Nb3VzZUV2ZW50PEhUTUxCdXR0b25FbGVtZW50PikgPT4ge1xuICAgIGlmICghaGFzUGVybWlzc2lvbikge1xuICAgICAgcmVxdWVzdFVwZ3JhZGUoZmVhdHVyZUlkKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgXG4gICAgaWYgKG9uQ2xpY2spIHtcbiAgICAgIG9uQ2xpY2soZSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPGJ1dHRvblxuICAgICAgb25DbGljaz17aGFuZGxlQ2xpY2t9XG4gICAgICBkaXNhYmxlZD17ZGlzYWJsZWR9XG4gICAgICBjbGFzc05hbWU9e2ByZWxhdGl2ZSAke2NsYXNzTmFtZX1gfVxuICAgICAgey4uLnByb3BzfVxuICAgID5cbiAgICAgIHtzaG91bGRTaG93SW5kaWNhdG9yICYmIGluZGljYXRvclBvc2l0aW9uID09PSAnbGVmdCcgJiYgKFxuICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJpbmxpbmUtZmxleCBpdGVtcy1jZW50ZXIgbXItMS41IHRleHQtYW1iZXItNTAwXCI+XG4gICAgICAgICAgPFNwYXJrbGVzIHNpemU9ezE0fSAvPlxuICAgICAgICA8L3NwYW4+XG4gICAgICApfVxuICAgICAgXG4gICAgICB7Y2hpbGRyZW59XG4gICAgICBcbiAgICAgIHtzaG91bGRTaG93SW5kaWNhdG9yICYmIGluZGljYXRvclBvc2l0aW9uID09PSAncmlnaHQnICYmIChcbiAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiaW5saW5lLWZsZXggaXRlbXMtY2VudGVyIG1sLTEuNSB0ZXh0LWFtYmVyLTUwMFwiPlxuICAgICAgICAgIDxTcGFya2xlcyBzaXplPXsxNH0gLz5cbiAgICAgICAgPC9zcGFuPlxuICAgICAgKX1cbiAgICAgIFxuICAgICAgey8qIE9wdGlvbmFsIHRvb2x0aXAtc3R5bGUgaW5kaWNhdG9yIHRoYXQgYXBwZWFycyBvbiBob3ZlciAqL31cbiAgICAgIHtzaG91bGRTaG93SW5kaWNhdG9yICYmIChcbiAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiYWJzb2x1dGUgLXRvcC04IGxlZnQtMS8yIHRyYW5zZm9ybSAtdHJhbnNsYXRlLXgtMS8yIHB4LTIgcHktMSBiZy1hbWJlci01MCBcbiAgICAgICAgICAgICAgICAgICAgICAgdGV4dC1hbWJlci04MDAgdGV4dC14cyByb3VuZGVkIHNoYWRvdy1zbSBvcGFjaXR5LTAgZ3JvdXAtaG92ZXI6b3BhY2l0eS0xMDAgXG4gICAgICAgICAgICAgICAgICAgICAgIHBvaW50ZXItZXZlbnRzLW5vbmUgdHJhbnNpdGlvbi1vcGFjaXR5IHdoaXRlc3BhY2Utbm93cmFwIGJvcmRlciBib3JkZXItYW1iZXItMjAwXCI+XG4gICAgICAgICAge3JlcXVpcmVkVGllciA9PT0gVGllckxldmVsLkNPTU1VTklUWSA/ICdDb21tdW5pdHknIDogJ0NvbW1lcmNpYWwnfSBmZWF0dXJlXG4gICAgICAgIDwvc3Bhbj5cbiAgICAgICl9XG4gICAgPC9idXR0b24+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBQcmVtaXVtQnV0dG9uOyJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZVByZW1pdW0iLCJUaWVyTGV2ZWwiLCJTcGFya2xlcyIsIlByZW1pdW1CdXR0b24iLCJmZWF0dXJlSWQiLCJvbkNsaWNrIiwiY2hpbGRyZW4iLCJwZXJtaXNzaW9uUGFyYW1zIiwiZGlzYWJsZWQiLCJjbGFzc05hbWUiLCJzaG93SW5kaWNhdG9yIiwiaW5kaWNhdG9yUG9zaXRpb24iLCJwcm9wcyIsImNhblVzZUZlYXR1cmUiLCJyZXF1ZXN0VXBncmFkZSIsImdldFJlcXVpcmVkVGllckZvckZlYXR1cmUiLCJ0aWVyTGV2ZWwiLCJoYXNQZXJtaXNzaW9uIiwicmVxdWlyZWRUaWVyIiwic2hvdWxkU2hvd0luZGljYXRvciIsIkZSRUUiLCJoYW5kbGVDbGljayIsImUiLCJidXR0b24iLCJzcGFuIiwic2l6ZSIsIkNPTU1VTklUWSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./src/app/components/UI/PremiumButton.tsx\n");

/***/ }),

/***/ "(ssr)/./src/app/components/tracking/tracking.js":
/*!*************************************************!*\
  !*** ./src/app/components/tracking/tracking.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   trackEventWithForm: () => (/* binding */ trackEventWithForm)\n/* harmony export */ });\n// tracking.js\nconst trackEventWithForm = (eventName, additionalData = {})=>{\n    // Replace with your Google Form's \"formResponse\" URL.\n    const formUrl = \"https://docs.google.com/forms/d/e/1FAIpQLSe5Des09Yq8IRnPmTyiIlAjXQPpoauiD1oWfgDHZdogGgwEtw/formResponse\";\n    // Map your data to the form fields using the entry IDs from your pre-filled link.\n    const formData = {\n        \"entry.1568339444\": new Date().toISOString(),\n        \"entry.1539634642\": eventName,\n        \"entry.1014763706\": additionalData.panel || \"\"\n    };\n    // Create (or reuse) a hidden iframe to target the form submission.\n    let iframe = document.getElementById(\"hidden_iframe\");\n    if (!iframe) {\n        iframe = document.createElement(\"iframe\");\n        iframe.name = \"hidden_iframe\";\n        iframe.id = \"hidden_iframe\";\n        iframe.style.display = \"none\";\n        document.body.appendChild(iframe);\n    }\n    // Create a hidden form element.\n    const form = document.createElement(\"form\");\n    form.action = formUrl;\n    form.method = \"POST\";\n    form.target = \"hidden_iframe\";\n    form.style.display = \"none\";\n    // Create hidden input elements for each field.\n    Object.keys(formData).forEach((key)=>{\n        const input = document.createElement(\"input\");\n        input.type = \"hidden\";\n        input.name = key;\n        input.value = formData[key];\n        form.appendChild(input);\n    });\n    // Append the form, submit it, then remove it.\n    document.body.appendChild(form);\n    form.submit();\n    document.body.removeChild(form);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvYXBwL2NvbXBvbmVudHMvdHJhY2tpbmcvdHJhY2tpbmcuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDUCxNQUFNQSxxQkFBcUIsQ0FBQ0MsV0FBV0MsaUJBQWlCLENBQUMsQ0FBQztJQUM3RCxzREFBc0Q7SUFDdEQsTUFBTUMsVUFDSjtJQUVGLGtGQUFrRjtJQUNsRixNQUFNQyxXQUFXO1FBQ2Ysb0JBQW9CLElBQUlDLE9BQU9DLFdBQVc7UUFDMUMsb0JBQW9CTDtRQUNwQixvQkFBb0JDLGVBQWVLLEtBQUssSUFBSTtJQUM5QztJQUVBLG1FQUFtRTtJQUNuRSxJQUFJQyxTQUFTQyxTQUFTQyxjQUFjLENBQUM7SUFDckMsSUFBSSxDQUFDRixRQUFRO1FBQ1hBLFNBQVNDLFNBQVNFLGFBQWEsQ0FBQztRQUNoQ0gsT0FBT0ksSUFBSSxHQUFHO1FBQ2RKLE9BQU9LLEVBQUUsR0FBRztRQUNaTCxPQUFPTSxLQUFLLENBQUNDLE9BQU8sR0FBRztRQUN2Qk4sU0FBU08sSUFBSSxDQUFDQyxXQUFXLENBQUNUO0lBQzVCO0lBRUEsZ0NBQWdDO0lBQ2hDLE1BQU1VLE9BQU9ULFNBQVNFLGFBQWEsQ0FBQztJQUNwQ08sS0FBS0MsTUFBTSxHQUFHaEI7SUFDZGUsS0FBS0UsTUFBTSxHQUFHO0lBQ2RGLEtBQUtHLE1BQU0sR0FBRztJQUNkSCxLQUFLSixLQUFLLENBQUNDLE9BQU8sR0FBRztJQUVyQiwrQ0FBK0M7SUFDL0NPLE9BQU9DLElBQUksQ0FBQ25CLFVBQVVvQixPQUFPLENBQUMsQ0FBQ0M7UUFDN0IsTUFBTUMsUUFBUWpCLFNBQVNFLGFBQWEsQ0FBQztRQUNyQ2UsTUFBTUMsSUFBSSxHQUFHO1FBQ2JELE1BQU1kLElBQUksR0FBR2E7UUFDYkMsTUFBTUUsS0FBSyxHQUFHeEIsUUFBUSxDQUFDcUIsSUFBSTtRQUMzQlAsS0FBS0QsV0FBVyxDQUFDUztJQUNuQjtJQUVBLDhDQUE4QztJQUM5Q2pCLFNBQVNPLElBQUksQ0FBQ0MsV0FBVyxDQUFDQztJQUMxQkEsS0FBS1csTUFBTTtJQUNYcEIsU0FBU08sSUFBSSxDQUFDYyxXQUFXLENBQUNaO0FBQzVCLEVBQUUiLCJzb3VyY2VzIjpbIi9Vc2Vycy9raWVyYW5ibGFpci9naXQvZmEvZmxpZ2h0LWFzc3VyYW5jZS9zcmMvYXBwL2NvbXBvbmVudHMvdHJhY2tpbmcvdHJhY2tpbmcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gdHJhY2tpbmcuanNcbmV4cG9ydCBjb25zdCB0cmFja0V2ZW50V2l0aEZvcm0gPSAoZXZlbnROYW1lLCBhZGRpdGlvbmFsRGF0YSA9IHt9KSA9PiB7XG4gICAgLy8gUmVwbGFjZSB3aXRoIHlvdXIgR29vZ2xlIEZvcm0ncyBcImZvcm1SZXNwb25zZVwiIFVSTC5cbiAgICBjb25zdCBmb3JtVXJsID1cbiAgICAgIFwiaHR0cHM6Ly9kb2NzLmdvb2dsZS5jb20vZm9ybXMvZC9lLzFGQUlwUUxTZTVEZXMwOVlxOElSblBtVHlpSWxBalhRUHBvYXVpRDFvV2ZnREhaZG9nR2d3RXR3L2Zvcm1SZXNwb25zZVwiO1xuICBcbiAgICAvLyBNYXAgeW91ciBkYXRhIHRvIHRoZSBmb3JtIGZpZWxkcyB1c2luZyB0aGUgZW50cnkgSURzIGZyb20geW91ciBwcmUtZmlsbGVkIGxpbmsuXG4gICAgY29uc3QgZm9ybURhdGEgPSB7XG4gICAgICBcImVudHJ5LjE1NjgzMzk0NDRcIjogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLCAvLyBUaW1lc3RhbXAgZmllbGRcbiAgICAgIFwiZW50cnkuMTUzOTYzNDY0MlwiOiBldmVudE5hbWUsICAgICAgICAgICAgICAgICAgLy8gRXZlbnQgTmFtZSBmaWVsZFxuICAgICAgXCJlbnRyeS4xMDE0NzYzNzA2XCI6IGFkZGl0aW9uYWxEYXRhLnBhbmVsIHx8IFwiXCIsIC8vIFBhbmVsIGZpZWxkXG4gICAgfTtcbiAgXG4gICAgLy8gQ3JlYXRlIChvciByZXVzZSkgYSBoaWRkZW4gaWZyYW1lIHRvIHRhcmdldCB0aGUgZm9ybSBzdWJtaXNzaW9uLlxuICAgIGxldCBpZnJhbWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImhpZGRlbl9pZnJhbWVcIik7XG4gICAgaWYgKCFpZnJhbWUpIHtcbiAgICAgIGlmcmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpZnJhbWVcIik7XG4gICAgICBpZnJhbWUubmFtZSA9IFwiaGlkZGVuX2lmcmFtZVwiO1xuICAgICAgaWZyYW1lLmlkID0gXCJoaWRkZW5faWZyYW1lXCI7XG4gICAgICBpZnJhbWUuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChpZnJhbWUpO1xuICAgIH1cbiAgXG4gICAgLy8gQ3JlYXRlIGEgaGlkZGVuIGZvcm0gZWxlbWVudC5cbiAgICBjb25zdCBmb3JtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImZvcm1cIik7XG4gICAgZm9ybS5hY3Rpb24gPSBmb3JtVXJsO1xuICAgIGZvcm0ubWV0aG9kID0gXCJQT1NUXCI7XG4gICAgZm9ybS50YXJnZXQgPSBcImhpZGRlbl9pZnJhbWVcIjsgXG4gICAgZm9ybS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gIFxuICAgIC8vIENyZWF0ZSBoaWRkZW4gaW5wdXQgZWxlbWVudHMgZm9yIGVhY2ggZmllbGQuXG4gICAgT2JqZWN0LmtleXMoZm9ybURhdGEpLmZvckVhY2goKGtleSkgPT4ge1xuICAgICAgY29uc3QgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgICBpbnB1dC50eXBlID0gXCJoaWRkZW5cIjtcbiAgICAgIGlucHV0Lm5hbWUgPSBrZXk7XG4gICAgICBpbnB1dC52YWx1ZSA9IGZvcm1EYXRhW2tleV07XG4gICAgICBmb3JtLmFwcGVuZENoaWxkKGlucHV0KTtcbiAgICB9KTtcbiAgXG4gICAgLy8gQXBwZW5kIHRoZSBmb3JtLCBzdWJtaXQgaXQsIHRoZW4gcmVtb3ZlIGl0LlxuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZm9ybSk7XG4gICAgZm9ybS5zdWJtaXQoKTtcbiAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGZvcm0pO1xuICB9O1xuICAiXSwibmFtZXMiOlsidHJhY2tFdmVudFdpdGhGb3JtIiwiZXZlbnROYW1lIiwiYWRkaXRpb25hbERhdGEiLCJmb3JtVXJsIiwiZm9ybURhdGEiLCJEYXRlIiwidG9JU09TdHJpbmciLCJwYW5lbCIsImlmcmFtZSIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJjcmVhdGVFbGVtZW50IiwibmFtZSIsImlkIiwic3R5bGUiLCJkaXNwbGF5IiwiYm9keSIsImFwcGVuZENoaWxkIiwiZm9ybSIsImFjdGlvbiIsIm1ldGhvZCIsInRhcmdldCIsIk9iamVjdCIsImtleXMiLCJmb3JFYWNoIiwia2V5IiwiaW5wdXQiLCJ0eXBlIiwidmFsdWUiLCJzdWJtaXQiLCJyZW1vdmVDaGlsZCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./src/app/components/tracking/tracking.js\n");

/***/ }),

/***/ "(ssr)/./src/app/context/AnalysisControllerContext.tsx":
/*!*******************************************************!*\
  !*** ./src/app/context/AnalysisControllerContext.tsx ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AnalysisControllerProvider: () => (/* binding */ AnalysisControllerProvider),\n/* harmony export */   useAnalysisController: () => (/* binding */ useAnalysisController)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/**\n * src/app/context/AnalysisControllerContext.tsx\n * \n * Purpose:\n * Central controller for managing analysis state and coordination between different analysis tools.\n * Acts as a communication layer between map, analysis panels, and various tools.\n * \n * Features:\n * - Provides shared references to analysis utilities\n * - Manages global UI states like modals that need to be rendered at the app level\n * - Coordinates analysis triggers and results across components\n * \n * Related Files:\n * - page.tsx: Consumes this context to render app-level modals\n * - VisibilityAnalysisDashboard.tsx: Uses this context to trigger modals\n */ \n\n// Create the context with a default value\nconst AnalysisControllerContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst AnalysisControllerProvider = ({ children })=>{\n    // Reference to the grid analysis component\n    const gridAnalysisRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // State for controlling marker locations modal visibility\n    const [showMarkerLocationsModal, setShowMarkerLocationsModal] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Context value\n    const value = {\n        gridAnalysisRef,\n        showMarkerLocationsModal,\n        setShowMarkerLocationsModal\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AnalysisControllerContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/context/AnalysisControllerContext.tsx\",\n        lineNumber: 52,\n        columnNumber: 5\n    }, undefined);\n};\n// Custom hook for using the context\nconst useAnalysisController = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AnalysisControllerContext);\n    if (context === undefined) {\n        throw new Error('useAnalysisController must be used within an AnalysisControllerProvider');\n    }\n    return context;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvYXBwL2NvbnRleHQvQW5hbHlzaXNDb250cm9sbGVyQ29udGV4dC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7OztDQWVDO0FBRXFGO0FBVXRGLDBDQUEwQztBQUMxQyxNQUFNSywwQ0FBNEJKLG9EQUFhQSxDQUE0Q0s7QUFPcEYsTUFBTUMsNkJBQXdFLENBQUMsRUFBRUMsUUFBUSxFQUFFO0lBQ2hHLDJDQUEyQztJQUMzQyxNQUFNQyxrQkFBa0JMLDZDQUFNQSxDQUFDO0lBRS9CLDBEQUEwRDtJQUMxRCxNQUFNLENBQUNNLDBCQUEwQkMsNEJBQTRCLEdBQUdSLCtDQUFRQSxDQUFDO0lBRXpFLGdCQUFnQjtJQUNoQixNQUFNUyxRQUFRO1FBQ1pIO1FBQ0FDO1FBQ0FDO0lBRUY7SUFFQSxxQkFDRSw4REFBQ04sMEJBQTBCUSxRQUFRO1FBQUNELE9BQU9BO2tCQUN4Q0o7Ozs7OztBQUdQLEVBQUU7QUFFRixvQ0FBb0M7QUFDN0IsTUFBTU0sd0JBQXdCO0lBQ25DLE1BQU1DLFVBQVViLGlEQUFVQSxDQUFDRztJQUMzQixJQUFJVSxZQUFZVCxXQUFXO1FBQ3pCLE1BQU0sSUFBSVUsTUFBTTtJQUNsQjtJQUNBLE9BQU9EO0FBQ1QsRUFBRSIsInNvdXJjZXMiOlsiL1VzZXJzL2tpZXJhbmJsYWlyL2dpdC9mYS9mbGlnaHQtYXNzdXJhbmNlL3NyYy9hcHAvY29udGV4dC9BbmFseXNpc0NvbnRyb2xsZXJDb250ZXh0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIHNyYy9hcHAvY29udGV4dC9BbmFseXNpc0NvbnRyb2xsZXJDb250ZXh0LnRzeFxuICogXG4gKiBQdXJwb3NlOlxuICogQ2VudHJhbCBjb250cm9sbGVyIGZvciBtYW5hZ2luZyBhbmFseXNpcyBzdGF0ZSBhbmQgY29vcmRpbmF0aW9uIGJldHdlZW4gZGlmZmVyZW50IGFuYWx5c2lzIHRvb2xzLlxuICogQWN0cyBhcyBhIGNvbW11bmljYXRpb24gbGF5ZXIgYmV0d2VlbiBtYXAsIGFuYWx5c2lzIHBhbmVscywgYW5kIHZhcmlvdXMgdG9vbHMuXG4gKiBcbiAqIEZlYXR1cmVzOlxuICogLSBQcm92aWRlcyBzaGFyZWQgcmVmZXJlbmNlcyB0byBhbmFseXNpcyB1dGlsaXRpZXNcbiAqIC0gTWFuYWdlcyBnbG9iYWwgVUkgc3RhdGVzIGxpa2UgbW9kYWxzIHRoYXQgbmVlZCB0byBiZSByZW5kZXJlZCBhdCB0aGUgYXBwIGxldmVsXG4gKiAtIENvb3JkaW5hdGVzIGFuYWx5c2lzIHRyaWdnZXJzIGFuZCByZXN1bHRzIGFjcm9zcyBjb21wb25lbnRzXG4gKiBcbiAqIFJlbGF0ZWQgRmlsZXM6XG4gKiAtIHBhZ2UudHN4OiBDb25zdW1lcyB0aGlzIGNvbnRleHQgdG8gcmVuZGVyIGFwcC1sZXZlbCBtb2RhbHNcbiAqIC0gVmlzaWJpbGl0eUFuYWx5c2lzRGFzaGJvYXJkLnRzeDogVXNlcyB0aGlzIGNvbnRleHQgdG8gdHJpZ2dlciBtb2RhbHNcbiAqL1xuXG5pbXBvcnQgUmVhY3QsIHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgdXNlU3RhdGUsIHVzZVJlZiwgUmVhY3ROb2RlIH0gZnJvbSAncmVhY3QnO1xuXG4vLyBEZWZpbmUgdGhlIHNoYXBlIG9mIHRoZSBjb250ZXh0XG5pbnRlcmZhY2UgQW5hbHlzaXNDb250cm9sbGVyQ29udGV4dFR5cGUge1xuICBncmlkQW5hbHlzaXNSZWY6IFJlYWN0LlJlZk9iamVjdDxhbnk+O1xuICBzaG93TWFya2VyTG9jYXRpb25zTW9kYWw6IGJvb2xlYW47XG4gIHNldFNob3dNYXJrZXJMb2NhdGlvbnNNb2RhbDogUmVhY3QuRGlzcGF0Y2g8UmVhY3QuU2V0U3RhdGVBY3Rpb248Ym9vbGVhbj4+O1xuICAvLyBBZGQgb3RoZXIgYW5hbHlzaXMgY29udHJvbGxlciBzdGF0ZXMgYW5kIG1ldGhvZHMgYXMgbmVlZGVkXG59XG5cbi8vIENyZWF0ZSB0aGUgY29udGV4dCB3aXRoIGEgZGVmYXVsdCB2YWx1ZVxuY29uc3QgQW5hbHlzaXNDb250cm9sbGVyQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQ8QW5hbHlzaXNDb250cm9sbGVyQ29udGV4dFR5cGUgfCB1bmRlZmluZWQ+KHVuZGVmaW5lZCk7XG5cbi8vIFByb3ZpZGVyIGNvbXBvbmVudFxuaW50ZXJmYWNlIEFuYWx5c2lzQ29udHJvbGxlclByb3ZpZGVyUHJvcHMge1xuICBjaGlsZHJlbjogUmVhY3ROb2RlO1xufVxuXG5leHBvcnQgY29uc3QgQW5hbHlzaXNDb250cm9sbGVyUHJvdmlkZXI6IFJlYWN0LkZDPEFuYWx5c2lzQ29udHJvbGxlclByb3ZpZGVyUHJvcHM+ID0gKHsgY2hpbGRyZW4gfSkgPT4ge1xuICAvLyBSZWZlcmVuY2UgdG8gdGhlIGdyaWQgYW5hbHlzaXMgY29tcG9uZW50XG4gIGNvbnN0IGdyaWRBbmFseXNpc1JlZiA9IHVzZVJlZihudWxsKTtcbiAgXG4gIC8vIFN0YXRlIGZvciBjb250cm9sbGluZyBtYXJrZXIgbG9jYXRpb25zIG1vZGFsIHZpc2liaWxpdHlcbiAgY29uc3QgW3Nob3dNYXJrZXJMb2NhdGlvbnNNb2RhbCwgc2V0U2hvd01hcmtlckxvY2F0aW9uc01vZGFsXSA9IHVzZVN0YXRlKGZhbHNlKTtcblxuICAvLyBDb250ZXh0IHZhbHVlXG4gIGNvbnN0IHZhbHVlID0ge1xuICAgIGdyaWRBbmFseXNpc1JlZixcbiAgICBzaG93TWFya2VyTG9jYXRpb25zTW9kYWwsXG4gICAgc2V0U2hvd01hcmtlckxvY2F0aW9uc01vZGFsLFxuICAgIC8vIEFkZCBvdGhlciBjb250cm9sbGVyIHZhbHVlcyBhcyBuZWVkZWRcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxBbmFseXNpc0NvbnRyb2xsZXJDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXt2YWx1ZX0+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9BbmFseXNpc0NvbnRyb2xsZXJDb250ZXh0LlByb3ZpZGVyPlxuICApO1xufTtcblxuLy8gQ3VzdG9tIGhvb2sgZm9yIHVzaW5nIHRoZSBjb250ZXh0XG5leHBvcnQgY29uc3QgdXNlQW5hbHlzaXNDb250cm9sbGVyID0gKCkgPT4ge1xuICBjb25zdCBjb250ZXh0ID0gdXNlQ29udGV4dChBbmFseXNpc0NvbnRyb2xsZXJDb250ZXh0KTtcbiAgaWYgKGNvbnRleHQgPT09IHVuZGVmaW5lZCkge1xuICAgIHRocm93IG5ldyBFcnJvcigndXNlQW5hbHlzaXNDb250cm9sbGVyIG11c3QgYmUgdXNlZCB3aXRoaW4gYW4gQW5hbHlzaXNDb250cm9sbGVyUHJvdmlkZXInKTtcbiAgfVxuICByZXR1cm4gY29udGV4dDtcbn07Il0sIm5hbWVzIjpbIlJlYWN0IiwiY3JlYXRlQ29udGV4dCIsInVzZUNvbnRleHQiLCJ1c2VTdGF0ZSIsInVzZVJlZiIsIkFuYWx5c2lzQ29udHJvbGxlckNvbnRleHQiLCJ1bmRlZmluZWQiLCJBbmFseXNpc0NvbnRyb2xsZXJQcm92aWRlciIsImNoaWxkcmVuIiwiZ3JpZEFuYWx5c2lzUmVmIiwic2hvd01hcmtlckxvY2F0aW9uc01vZGFsIiwic2V0U2hvd01hcmtlckxvY2F0aW9uc01vZGFsIiwidmFsdWUiLCJQcm92aWRlciIsInVzZUFuYWx5c2lzQ29udHJvbGxlciIsImNvbnRleHQiLCJFcnJvciJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./src/app/context/AnalysisControllerContext.tsx\n");

/***/ }),

/***/ "(ssr)/./src/app/context/AreaOfOpsContext.tsx":
/*!**********************************************!*\
  !*** ./src/app/context/AreaOfOpsContext.tsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AreaOfOpsProvider: () => (/* binding */ AreaOfOpsProvider),\n/* harmony export */   useAreaOfOpsContext: () => (/* binding */ useAreaOfOpsContext)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _mapcontext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mapcontext */ \"(ssr)/./src/app/context/mapcontext.tsx\");\n/* harmony import */ var _components_Analyses_Utils_GridAnalysisCore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/Analyses/Utils/GridAnalysisCore */ \"(ssr)/./src/app/components/Analyses/Utils/GridAnalysisCore.ts\");\n/* harmony import */ var _AnalysisControllerContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./AnalysisControllerContext */ \"(ssr)/./src/app/context/AnalysisControllerContext.tsx\");\n// src/context/AreaOfOpsContext.tsx\n/* __next_internal_client_entry_do_not_use__ AreaOfOpsProvider,useAreaOfOpsContext auto */ \n\n\n\n\nconst AreaOfOpsContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\n// Add this at the top of AreaOfOpsContext.tsx, outside of any component\nconst createError = (message, code, details)=>{\n    const error = new Error(message);\n    error.code = code;\n    error.details = details;\n    return error;\n};\nconst AreaOfOpsProvider = ({ children })=>{\n    const { map, elevationService } = (0,_mapcontext__WEBPACK_IMPORTED_MODULE_2__.useMapContext)();\n    const { gridAnalysisRef } = (0,_AnalysisControllerContext__WEBPACK_IMPORTED_MODULE_4__.useAnalysisController)();\n    // State for AO\n    const [aoGeometry, setAoGeometry] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [aoTerrainGrid, setAoTerrainGrid] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [bufferDistance, setBufferDistance] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(500);\n    // State for terrain analysis\n    const [terrainAnalysisResult, setTerrainAnalysisResult] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isAnalyzing, setIsAnalyzing] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [analysisProgress, setAnalysisProgress] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [analysisError, setAnalysisError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const abortAnalysisRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    /**\n * Analyzes the AO terrain grid for elevation data\n * Delegates to GridAnalysisController while maintaining compatible interface\n */ const analyzeTerrainElevation = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"AreaOfOpsProvider.useCallback[analyzeTerrainElevation]\": async (referenceAltitude = 120)=>{\n            if (!aoTerrainGrid || aoTerrainGrid.length === 0) {\n                setAnalysisError(\"No terrain grid available for analysis\");\n                return null;\n            }\n            if (!gridAnalysisRef.current) {\n                console.warn(\"GridAnalysisController not available, falling back to direct analysis\");\n                // Fall back to original implementation if controller not available\n                try {\n                    setIsAnalyzing(true);\n                    setAnalysisProgress(0);\n                    setAnalysisError(null);\n                    abortAnalysisRef.current = false;\n                    // Use grid analysis core directly as fallback\n                    const result = await (0,_components_Analyses_Utils_GridAnalysisCore__WEBPACK_IMPORTED_MODULE_3__.analyzeTerrainGrid)(aoTerrainGrid, {\n                        batchSize: 1000,\n                        referenceAltitude,\n                        onProgress: {\n                            \"AreaOfOpsProvider.useCallback[analyzeTerrainElevation]\": (progress)=>{\n                                setAnalysisProgress(progress);\n                                return abortAnalysisRef.current;\n                            }\n                        }[\"AreaOfOpsProvider.useCallback[analyzeTerrainElevation]\"]\n                    });\n                    if (abortAnalysisRef.current) return null;\n                    const analysisResult = {\n                        highestElevation: result.highestElevation,\n                        lowestElevation: result.lowestElevation,\n                        averageElevation: result.averageElevation,\n                        elevationDistribution: result.elevationDistribution,\n                        sampleElevations: result.elevations,\n                        gridCellCount: aoTerrainGrid.length,\n                        referenceAltitude\n                    };\n                    setTerrainAnalysisResult(analysisResult);\n                    return analysisResult;\n                } catch (error) {\n                    setAnalysisError(error instanceof Error ? error.message : String(error));\n                    return null;\n                } finally{\n                    setIsAnalyzing(false);\n                    setAnalysisProgress(0);\n                }\n            }\n            try {\n                setIsAnalyzing(true);\n                setAnalysisProgress(0);\n                setAnalysisError(null);\n                abortAnalysisRef.current = false;\n                // Use the controller instead\n                const analysisResults = await gridAnalysisRef.current.analyzeTerrainGrid(aoTerrainGrid, {\n                    referenceAltitude,\n                    onProgress: {\n                        \"AreaOfOpsProvider.useCallback[analyzeTerrainElevation]\": (progress)=>{\n                            setAnalysisProgress(progress);\n                            return abortAnalysisRef.current;\n                        }\n                    }[\"AreaOfOpsProvider.useCallback[analyzeTerrainElevation]\"]\n                });\n                if (abortAnalysisRef.current) return null;\n                // Convert controller results to expected TerrainAnalysisResult format\n                const terrainStats = analysisResults.stats.terrainStats;\n                if (!terrainStats) {\n                    throw new Error(\"Missing terrain statistics in analysis results\");\n                }\n                const analysisResult = {\n                    highestElevation: terrainStats.highestElevation,\n                    lowestElevation: terrainStats.lowestElevation,\n                    averageElevation: terrainStats.averageElevation,\n                    elevationDistribution: terrainStats.elevationDistribution,\n                    sampleElevations: terrainStats.sampleElevations || [],\n                    gridCellCount: aoTerrainGrid.length,\n                    referenceAltitude\n                };\n                setTerrainAnalysisResult(analysisResult);\n                return analysisResult;\n            } catch (error) {\n                setAnalysisError(error instanceof Error ? error.message : String(error));\n                return null;\n            } finally{\n                setIsAnalyzing(false);\n                setAnalysisProgress(0);\n            }\n        }\n    }[\"AreaOfOpsProvider.useCallback[analyzeTerrainElevation]\"], [\n        aoTerrainGrid,\n        gridAnalysisRef\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AreaOfOpsContext.Provider, {\n        value: {\n            aoGeometry,\n            setAoGeometry,\n            aoTerrainGrid,\n            setAoTerrainGrid,\n            bufferDistance,\n            setBufferDistance,\n            // New terrain analysis properties\n            terrainAnalysisResult,\n            analyzeTerrainElevation,\n            isAnalyzing,\n            analysisProgress,\n            analysisError\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/context/AreaOfOpsContext.tsx\",\n        lineNumber: 169,\n        columnNumber: 5\n    }, undefined);\n};\nconst useAreaOfOpsContext = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AreaOfOpsContext);\n    if (!context) {\n        throw new Error(\"useAreaOfOpsContext must be used within an AreaOfOpsProvider\");\n    }\n    return context;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/context/AreaOfOpsContext.tsx\n");

/***/ }),

/***/ "(ssr)/./src/app/context/ChecklistContext.tsx":
/*!**********************************************!*\
  !*** ./src/app/context/ChecklistContext.tsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChecklistProvider: () => (/* binding */ ChecklistProvider),\n/* harmony export */   useChecklistContext: () => (/* binding */ useChecklistContext)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ ChecklistProvider,useChecklistContext auto */ \n\nconst ChecklistContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\n/**\n * Mapping of analysis IDs to checklist steps\n * Static configuration that doesn't depend on component state\n */ const analysisToChecklistSteps = {\n    terrainProfile: [\n        {\n            label: 'Run Terrain Profile Analysis in AO',\n            action: 'Click the \"Analyse Terrain Profile in AO\" button under Terrain Analysis Tools',\n            target: {\n                component: 'TerrainAnalysisCard',\n                action: 'analyseTerrainInAO'\n            }\n        }\n    ],\n    observerVsTerrain: [\n        {\n            label: 'Place Observer Marker',\n            action: 'Click the \"Add Observer\" button on the map and select a location',\n            target: {\n                component: 'MarkerControls',\n                action: 'addObserver'\n            }\n        },\n        {\n            label: 'Run Observer vs Terrain Analysis',\n            action: 'Click the \"Analyse Terrain Profile in AO\" button under Visibility Analysis Tools with Observer marker placed',\n            target: {\n                component: 'AnalysisDashboard',\n                action: 'analyseObserverVsTerrain'\n            }\n        }\n    ],\n    gcsRepeaterVsTerrain: [\n        {\n            label: 'Place GCS or Repeater Marker',\n            action: 'Click the \"Add Ground Station\" or \"Add Repeater\" button on the map',\n            target: {\n                component: 'MarkerControls',\n                action: 'addGCSorRepeater'\n            }\n        },\n        {\n            label: 'Run GCS/Repeater vs Terrain Analysis',\n            action: 'Click the \"Analyse Terrain Profile in AO\" button under Visibility Analysis Tools with GCS/Repeater marker placed',\n            target: {\n                component: 'AnalysisDashboard',\n                action: 'analyseGCSRepeaterVsTerrain'\n            }\n        }\n    ],\n    powerline: [\n        {\n            label: 'Toggle Powerlines',\n            action: 'Click the \"Show Powerlines\" button under Terrain Analysis Tools',\n            target: {\n                component: 'TerrainAnalysisCard',\n                action: 'togglePowerlines'\n            }\n        }\n    ],\n    airspace: [\n        {\n            label: 'Toggle Airspace Overlay',\n            action: 'Toggle Airspace Overlay',\n            target: {\n                component: 'LayerControls',\n                action: 'toggleAirspace'\n            }\n        }\n    ],\n    observerToDrone: [\n        {\n            label: 'Place Observer Marker',\n            action: 'Click the \"Add Observer\" button on the map and select a location',\n            target: {\n                component: 'MarkerControls',\n                action: 'addObserver'\n            }\n        },\n        {\n            label: 'Run Observer to Drone Analysis',\n            action: 'Click the \"Station Analysis\" section and run the Observer analysis',\n            target: {\n                component: 'AnalysisDashboard',\n                action: 'observerToDrone'\n            }\n        }\n    ],\n    antennaToDrone: [\n        {\n            label: 'Place GCS or Repeater Marker',\n            action: 'Click the \"Add Ground Station\" or \"Add Repeater\" button on the map',\n            target: {\n                component: 'MarkerControls',\n                action: 'addGCSorRepeater'\n            }\n        },\n        {\n            label: 'Run Antenna to Drone Analysis',\n            action: 'Click the \"Station Analysis\" section and run the GCS or Repeater analysis',\n            target: {\n                component: 'AnalysisDashboard',\n                action: 'antennaToDrone'\n            }\n        }\n    ],\n    treeHeights: [\n        {\n            label: 'Show Tree Heights',\n            action: 'Click the \"Toggle Tree Heights\" button under Terrain Analysis Tools',\n            target: {\n                component: 'TerrainAnalysisDashboard',\n                action: 'toggleTreeHeights'\n            }\n        }\n    ],\n    mobileTowerCoverage: [\n        {\n            label: 'Show Mobile Tower Coverage',\n            action: 'Click the \"Toggle Mobile Towers\" button under Visibility Analysis Tools',\n            target: {\n                component: 'VisibilityAnalysisDashboard',\n                action: 'showMobileTowers'\n            }\n        }\n    ],\n    antennaToAntenna: [\n        {\n            label: 'Place Two Markers (GCS/Repeater)',\n            action: 'Click the \"Add Ground Station\" and \"Add Repeater\" buttons on the map',\n            target: {\n                component: 'MarkerControls',\n                action: 'addGCSorRepeater'\n            }\n        },\n        {\n            label: 'Run Antenna to Antenna Analysis',\n            action: 'Click the \"Station-to-Station LOS\" section and run the analysis',\n            target: {\n                component: 'AnalysisDashboard',\n                action: 'antennaToAntenna'\n            }\n        }\n    ]\n};\n/**\n * Mapping of checklist actions to MapSidePanel names\n * Static configuration that doesn't depend on component state\n */ const actionToPanelMap = {\n    analyseTerrainInAO: 'terrain',\n    analyseObserverVsTerrain: 'los',\n    analyseGCSRepeaterVsTerrain: 'los',\n    togglePowerlines: 'terrain',\n    addObserver: null,\n    addGCSorRepeater: null,\n    uploadFlightPlan: 'terrain',\n    openLayerControls: null,\n    toggleAirspace: 'terrain',\n    observerToDrone: 'los',\n    antennaToDrone: 'los',\n    antennaToAntenna: 'los',\n    toggleTreeHeights: 'terrain',\n    showMobileTowers: 'los'\n};\n/**\n * Provides checklist state and methods\n * @param children - React components to render within the provider\n */ const ChecklistProvider = ({ children })=>{\n    const [checks, setChecks] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [guidedTarget, setGuidedTarget] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [highlightMarkers, setHighlightMarkers] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    /**\n   * Adds checklist items based on selected analyses\n   * @param analyses - Array of analysis IDs from AnalysisWizard\n   */ const addChecks = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"ChecklistProvider.useCallback[addChecks]\": (analyses)=>{\n            const newChecks = analyses.filter({\n                \"ChecklistProvider.useCallback[addChecks].newChecks\": (id)=>analysisToChecklistSteps[id]\n            }[\"ChecklistProvider.useCallback[addChecks].newChecks\"]) // Ensure valid analysis IDs\n            .flatMap({\n                \"ChecklistProvider.useCallback[addChecks].newChecks\": (analysisId)=>{\n                    const steps = analysisToChecklistSteps[analysisId];\n                    return steps.map({\n                        \"ChecklistProvider.useCallback[addChecks].newChecks\": (step, index)=>({\n                                id: `${analysisId}-${index}`,\n                                group: analysisId,\n                                ...step,\n                                status: 'pending'\n                            })\n                    }[\"ChecklistProvider.useCallback[addChecks].newChecks\"]);\n                }\n            }[\"ChecklistProvider.useCallback[addChecks].newChecks\"]);\n            setChecks(newChecks);\n            console.log('[ChecklistContext] Added checks:', newChecks);\n        }\n    }[\"ChecklistProvider.useCallback[addChecks]\"], []);\n    /**\n   * Marks a checklist item as completed\n   * @param id - The ID of the check to complete\n   */ const completeCheck = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"ChecklistProvider.useCallback[completeCheck]\": (id)=>{\n            setChecks({\n                \"ChecklistProvider.useCallback[completeCheck]\": (prev)=>prev.map({\n                        \"ChecklistProvider.useCallback[completeCheck]\": (check)=>check.id === id ? {\n                                ...check,\n                                status: 'completed'\n                            } : check\n                    }[\"ChecklistProvider.useCallback[completeCheck]\"])\n            }[\"ChecklistProvider.useCallback[completeCheck]\"]);\n            console.log(`[ChecklistContext] Completed check: ${id}`);\n        }\n    }[\"ChecklistProvider.useCallback[completeCheck]\"], []);\n    /**\n   * Resets the checklist\n   */ const resetChecks = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"ChecklistProvider.useCallback[resetChecks]\": ()=>{\n            setChecks([]);\n            setGuidedTarget(null);\n            console.log('[ChecklistContext] Reset checks');\n        }\n    }[\"ChecklistProvider.useCallback[resetChecks]\"], []);\n    const contextValue = {\n        checks,\n        addChecks,\n        completeCheck,\n        resetChecks,\n        guidedTarget,\n        setGuidedTarget,\n        actionToPanelMap,\n        highlightMarkers,\n        setHighlightMarkers\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ChecklistContext.Provider, {\n        value: contextValue,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/context/ChecklistContext.tsx\",\n        lineNumber: 230,\n        columnNumber: 5\n    }, undefined);\n};\n/**\n * Hook to access the ChecklistContext\n * @returns The ChecklistContext properties\n * @throws Error if used outside of ChecklistProvider\n */ const useChecklistContext = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ChecklistContext);\n    if (!context) {\n        throw new Error('useChecklistContext must be used within a ChecklistProvider');\n    }\n    return context;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/context/ChecklistContext.tsx\n");

/***/ }),

/***/ "(ssr)/./src/app/context/FlightConfigurationContext.tsx":
/*!********************************************************!*\
  !*** ./src/app/context/FlightConfigurationContext.tsx ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FlightConfigurationProvider: () => (/* binding */ FlightConfigurationProvider),\n/* harmony export */   useFlightConfiguration: () => (/* binding */ useFlightConfiguration)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _FlightPlanContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./FlightPlanContext */ \"(ssr)/./src/app/context/FlightPlanContext.tsx\");\n/* eslint-disable @typescript-eslint/no-explicit-any */ \n\n\nconst FlightConfigurationContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst formatFlightTime = (timeInMinutes)=>{\n    const minutes = Math.floor(timeInMinutes);\n    const seconds = Math.round((timeInMinutes - minutes) * 60);\n    return `${minutes}:${seconds.toString().padStart(2, \"0\")}`;\n};\nconst FlightConfigurationProvider = ({ children })=>{\n    const { distance: flightPlanDistance } = (0,_FlightPlanContext__WEBPACK_IMPORTED_MODULE_2__.useFlightPlanContext)();\n    const [config, setConfig] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        batteryCapacity: \"28000\",\n        dischargeRate: \"700\",\n        assumedSpeed: \"20\",\n        batteryReserveReq: \"20\"\n    });\n    const [metrics, setMetrics] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        flightTime: \"0:00\",\n        maxDistance: 0,\n        batteryReserve: \"0%\",\n        totalEndurance: \"0:00\",\n        isFeasible: false,\n        estimatedDistance: 0,\n        flightPlanEstimatedTime: \"0:00\",\n        expectedBatteryConsumption: 0,\n        numberOfWaypoints: 0,\n        mainAltitudeMode: \"N/A\",\n        availableBatteryCapacity: 0,\n        remainingCapacity: 0,\n        remainingTime: \"0:00\",\n        flightTimeMargin: \"0:00\"\n    });\n    const calculateMetrics = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"FlightConfigurationProvider.useCallback[calculateMetrics]\": ()=>{\n            // Parse input values\n            const batteryCapacity = parseFloat(config.batteryCapacity) || 0;\n            const dischargeRate = parseFloat(config.dischargeRate) || 0;\n            const assumedSpeed = parseFloat(config.assumedSpeed) || 20;\n            const reservePercentage = parseFloat(config.batteryReserveReq) || 20;\n            // Battery calculations\n            const reserveAmount = batteryCapacity * (reservePercentage / 100);\n            const availableBatteryCapacity = batteryCapacity - reserveAmount;\n            // Time calculations\n            const availableFlightTime = availableBatteryCapacity / dischargeRate || 0;\n            const totalFlightTime = batteryCapacity / dischargeRate || 0;\n            // Distance calculations\n            const maxAvailableDistance = availableFlightTime / 60 * assumedSpeed;\n            // Initialize metrics object\n            const newMetrics = {\n                flightTime: formatFlightTime(availableFlightTime),\n                maxDistance: maxAvailableDistance,\n                batteryReserve: `${reservePercentage}%`,\n                isFeasible: true,\n                estimatedDistance: maxAvailableDistance,\n                totalEndurance: formatFlightTime(totalFlightTime),\n                flightPlanEstimatedTime: \"0:00\",\n                expectedBatteryConsumption: 0,\n                numberOfWaypoints: 0,\n                mainAltitudeMode: \"N/A\",\n                availableBatteryCapacity: Math.round(availableBatteryCapacity),\n                remainingCapacity: Math.round(availableBatteryCapacity),\n                remainingTime: formatFlightTime(availableFlightTime),\n                flightTimeMargin: formatFlightTime(availableFlightTime) // Initial placeholder\n            };\n            // Flight plan specific calculations\n            if (flightPlanDistance) {\n                const flightPlanTimeMinutes = flightPlanDistance / assumedSpeed * 60;\n                const requiredBatteryCapacity = flightPlanTimeMinutes * dischargeRate;\n                newMetrics.isFeasible = requiredBatteryCapacity <= availableBatteryCapacity;\n                newMetrics.flightPlanEstimatedTime = formatFlightTime(flightPlanTimeMinutes);\n                newMetrics.expectedBatteryConsumption = Math.round(requiredBatteryCapacity);\n                // Calculate remaining capacity after flight plan\n                const remainingCapacity = availableBatteryCapacity - requiredBatteryCapacity;\n                newMetrics.remainingCapacity = Math.round(remainingCapacity);\n                // Calculate excess flight time available (in minutes)\n                const extraFlightTimeMinutes = remainingCapacity / dischargeRate;\n                newMetrics.remainingTime = formatFlightTime(extraFlightTimeMinutes);\n                newMetrics.flightTimeMargin = formatFlightTime(extraFlightTimeMinutes);\n            }\n            setMetrics(newMetrics);\n        }\n    }[\"FlightConfigurationProvider.useCallback[calculateMetrics]\"], [\n        config.batteryCapacity,\n        config.dischargeRate,\n        config.assumedSpeed,\n        config.batteryReserveReq,\n        flightPlanDistance\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"FlightConfigurationProvider.useEffect\": ()=>{\n            calculateMetrics();\n        }\n    }[\"FlightConfigurationProvider.useEffect\"], [\n        calculateMetrics\n    ]);\n    const updateConfig = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"FlightConfigurationProvider.useCallback[updateConfig]\": (updates)=>{\n            setConfig({\n                \"FlightConfigurationProvider.useCallback[updateConfig]\": (prev)=>({\n                        ...prev,\n                        ...updates\n                    })\n            }[\"FlightConfigurationProvider.useCallback[updateConfig]\"]);\n        }\n    }[\"FlightConfigurationProvider.useCallback[updateConfig]\"], []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(FlightConfigurationContext.Provider, {\n        value: {\n            config,\n            metrics,\n            updateConfig\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/context/FlightConfigurationContext.tsx\",\n        lineNumber: 144,\n        columnNumber: 5\n    }, undefined);\n};\nconst useFlightConfiguration = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(FlightConfigurationContext);\n    if (!context) {\n        throw new Error('useFlightConfiguration must be used within a FlightConfigurationProvider');\n    }\n    return context;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/context/FlightConfigurationContext.tsx\n");

/***/ }),

/***/ "(ssr)/./src/app/context/FlightPlanContext.tsx":
/*!***********************************************!*\
  !*** ./src/app/context/FlightPlanContext.tsx ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FlightPlanProvider: () => (/* binding */ FlightPlanProvider),\n/* harmony export */   useFlightPlanContext: () => (/* binding */ useFlightPlanContext)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst FlightPlanContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\n/**\n * Provides flight plan state and methods\n * @param children - React components to render within the provider\n */ const FlightPlanProvider = ({ children })=>{\n    const [flightPlan, setFlightPlanState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [distance, setDistanceState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isProcessed, setProcessedState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const setFlightPlan = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"FlightPlanProvider.useCallback[setFlightPlan]\": (data)=>{\n            const planId = data.properties?.metadata?.source || data.properties?.metadata?.created?.toString() || 'unknown';\n            console.groupCollapsed(`[FlightPlanContext] setFlightPlan (${planId})`);\n            console.time('[FlightPlanContext] ⏱ setFlightPlan');\n            // Add debug log for flight plan data\n            console.log(`[${new Date().toISOString()}] [FlightPlanContext] Flight plan data:`, {\n                featureCount: data.features?.length,\n                geometryType: data.features[0]?.geometry?.type,\n                coordinates: data.features[0]?.geometry?.coordinates,\n                coordinateCount: data.features[0]?.geometry?.coordinates?.length\n            });\n            // Critical summary of incoming data\n            console.log('▶ Incoming summary', {\n                features: data.features.length,\n                geometry: data.features[0]?.geometry.type,\n                totalDistance: data.properties?.totalDistance,\n                processed: data.properties?.processed\n            });\n            setFlightPlanState({\n                \"FlightPlanProvider.useCallback[setFlightPlan]\": (prev)=>{\n                    const updated = {\n                        ...prev,\n                        ...data,\n                        properties: {\n                            ...prev?.properties,\n                            ...data.properties,\n                            processed: data.properties?.processed ?? prev?.properties?.processed ?? false\n                        }\n                    };\n                    console.log('✅ Flight plan state prepared');\n                    return updated;\n                }\n            }[\"FlightPlanProvider.useCallback[setFlightPlan]\"]);\n            setDistanceState(data.properties?.totalDistance ?? null);\n            console.log('ℹ️ Distance state updated →', data.properties?.totalDistance ?? null);\n            setProcessedState(Boolean(data.properties?.processed));\n            console.log('ℹ️ Processed state updated →', Boolean(data.properties?.processed));\n            console.timeEnd('[FlightPlanContext] ⏱ setFlightPlan');\n            console.groupEnd();\n        }\n    }[\"FlightPlanProvider.useCallback[setFlightPlan]\"], []);\n    const setDistance = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"FlightPlanProvider.useCallback[setDistance]\": (distance)=>{\n            console.log('[FlightPlanContext] setDistance →', distance);\n            setDistanceState(distance);\n        }\n    }[\"FlightPlanProvider.useCallback[setDistance]\"], []);\n    const setProcessed = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"FlightPlanProvider.useCallback[setProcessed]\": (processed)=>{\n            console.log('[FlightPlanContext] setProcessed →', processed);\n            setProcessedState(processed);\n        }\n    }[\"FlightPlanProvider.useCallback[setProcessed]\"], []);\n    const contextValue = {\n        flightPlan,\n        setFlightPlan,\n        distance,\n        setDistance,\n        isProcessed,\n        setProcessed\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(FlightPlanContext.Provider, {\n        value: contextValue,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/context/FlightPlanContext.tsx\",\n        lineNumber: 165,\n        columnNumber: 10\n    }, undefined);\n};\n/**\n * Hook to access the FlightPlanContext\n * @returns The FlightPlanContext properties\n * @throws Error if used outside of FlightPlanProvider\n */ const useFlightPlanContext = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(FlightPlanContext);\n    if (!context) throw new Error('useFlightPlanContext must be used within a FlightPlanProvider');\n    return context;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/context/FlightPlanContext.tsx\n");

/***/ }),

/***/ "(ssr)/./src/app/context/LOSAnalysisContext.tsx":
/*!************************************************!*\
  !*** ./src/app/context/LOSAnalysisContext.tsx ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LOSAnalysisProvider: () => (/* binding */ LOSAnalysisProvider),\n/* harmony export */   useLOSAnalysis: () => (/* binding */ useLOSAnalysis)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n// src/context/LOSAnalysisContext.tsx\n/* __next_internal_client_entry_do_not_use__ LOSAnalysisProvider,useLOSAnalysis auto */ \n\n// ======== Default Values ========\nconst DEFAULT_MARKER_CONFIG = {\n    gridRange: 500\n};\nconst DEFAULT_MARKER_CONFIGS = {\n    gcs: {\n        ...DEFAULT_MARKER_CONFIG\n    },\n    observer: {\n        ...DEFAULT_MARKER_CONFIG\n    },\n    repeater: {\n        ...DEFAULT_MARKER_CONFIG\n    }\n};\n// Default sampling resolution (10 meters)\nconst DEFAULT_SAMPLING_RESOLUTION = 10;\n// ======== Context Creation ========\nconst LOSAnalysisContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\n// ======== Provider Component ========\nfunction LOSAnalysisProvider({ children }) {\n    // Configuration State\n    const [gridSize, setGridSize] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(30);\n    const [elosGridRange, setElosGridRange] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(1000);\n    const [markerConfigs, setMarkerConfigs] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(DEFAULT_MARKER_CONFIGS);\n    // Add sampling resolution state\n    const [samplingResolution, setSamplingResolution] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(DEFAULT_SAMPLING_RESOLUTION);\n    // Analysis State\n    const [isAnalyzing, setIsAnalyzing] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [results, setResults] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [progress, setProgress] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    // Marker Configuration Handler (now only updates gridRange)\n    const handleMarkerConfigUpdate = (markerType, config)=>{\n        setMarkerConfigs((prev)=>({\n                ...prev,\n                [markerType]: {\n                    ...prev[markerType],\n                    ...config\n                }\n            }));\n    };\n    // Analysis Reset Handler\n    const resetAnalysis = ()=>{\n        setResults(null);\n        setError(null);\n        setIsAnalyzing(false);\n        setProgress(0);\n    };\n    const contextValue = {\n        // Configuration State\n        gridSize,\n        elosGridRange,\n        markerConfigs,\n        samplingResolution,\n        // Analysis State\n        isAnalyzing,\n        results,\n        error,\n        progress,\n        setProgress,\n        // Configuration Actions\n        setGridSize,\n        setElosGridRange,\n        setMarkerConfig: handleMarkerConfigUpdate,\n        setSamplingResolution,\n        // Analysis Actions\n        setResults,\n        setIsAnalyzing,\n        setError,\n        resetAnalysis\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(LOSAnalysisContext.Provider, {\n        value: contextValue,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/context/LOSAnalysisContext.tsx\",\n        lineNumber: 180,\n        columnNumber: 5\n    }, this);\n}\n// ======== Custom Hook ========\nfunction useLOSAnalysis() {\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(LOSAnalysisContext);\n    if (context === undefined) {\n        throw new Error('useLOSAnalysis must be used within a LOSAnalysisProvider');\n    }\n    return context;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/context/LOSAnalysisContext.tsx\n");

/***/ }),

/***/ "(ssr)/./src/app/context/MarkerContext.tsx":
/*!*******************************************!*\
  !*** ./src/app/context/MarkerContext.tsx ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MarkerProvider: () => (/* binding */ MarkerProvider),\n/* harmony export */   useMarkersContext: () => (/* binding */ useMarkersContext)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uuid */ \"(ssr)/../../../node_modules/uuid/dist/esm/v4.js\");\n/* harmony import */ var _PremiumContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./PremiumContext */ \"(ssr)/./src/app/context/PremiumContext.tsx\");\n/* harmony import */ var _utils_premiumConfig__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/premiumConfig */ \"(ssr)/./src/app/utils/premiumConfig.ts\");\n// src/app/context/MarkerContext.tsx\n\n\n\n\n // Import TIER_CONFIG directly\nconst MarkerContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\n/**\n * Provider component for marker management\n */ function MarkerProvider({ children }) {\n    // Core state: collection of all markers\n    const [markers, setMarkers] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // Default elevation offsets for each marker type\n    const [defaultElevationOffsets, setDefaultElevationOffsets] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        gcs: 2,\n        observer: 2,\n        repeater: 2\n    });\n    // Get premium context\n    const { tierLevel, getTierName } = (0,_PremiumContext__WEBPACK_IMPORTED_MODULE_2__.usePremium)();\n    /**\n   * Adds a new marker of specified type if allowed by tier limitations\n   * @param type The marker type (gcs, observer, repeater)\n   * @param location The geographic location of the marker\n   * @param towerMetadata Optional metadata if marker is derived from a tower\n   * @returns Object with success status and either marker ID or error message\n   */ const addMarker = (type, location, towerMetadata)=>{\n        // Get current count of markers of this type\n        const typeCount = markers.filter((m)=>m.type === type).length;\n        // Get the maximum allowed for this marker type at current tier\n        const maxAllowed = _utils_premiumConfig__WEBPACK_IMPORTED_MODULE_3__.TIER_CONFIG[tierLevel].maxMarkers[type];\n        // Check if adding this marker is allowed by tier limitations\n        if (typeCount >= maxAllowed) {\n            const tierName = getTierName();\n            // Create a user-friendly error message based on the limitation\n            let errorMessage = '';\n            if (maxAllowed === 0) {\n                // This marker type is not available at this tier\n                errorMessage = `${tierName} tier doesn't support ${type} markers. Upgrade to add this marker type.`;\n            } else {\n                // User has reached their limit for this marker type\n                errorMessage = `${tierName} tier allows only ${maxAllowed} ${type} marker(s). Upgrade to add more.`;\n            }\n            return {\n                success: false,\n                error: errorMessage\n            };\n        }\n        // If we get here, adding the marker is allowed\n        const id = (0,uuid__WEBPACK_IMPORTED_MODULE_4__[\"default\"])();\n        const newMarker = {\n            id,\n            type,\n            location,\n            elevationOffset: defaultElevationOffsets[type],\n            // Include tower metadata if provided\n            ...towerMetadata && {\n                towerMetadata\n            }\n        };\n        setMarkers((prev)=>[\n                ...prev,\n                newMarker\n            ]);\n        return {\n            success: true,\n            markerId: id\n        };\n    };\n    // Update an existing marker\n    const updateMarker = (id, updates)=>{\n        setMarkers((prev)=>prev.map((marker)=>{\n                if (marker.id === id) {\n                    // Handle special case for towerMetadata to merge it properly\n                    if (updates.towerMetadata && marker.towerMetadata) {\n                        return {\n                            ...marker,\n                            ...updates,\n                            towerMetadata: {\n                                ...marker.towerMetadata,\n                                ...updates.towerMetadata\n                            }\n                        };\n                    }\n                    return {\n                        ...marker,\n                        ...updates\n                    };\n                }\n                return marker;\n            }));\n    };\n    // Remove a marker by ID\n    const removeMarker = (id)=>{\n        setMarkers((prev)=>prev.filter((marker)=>marker.id !== id));\n    };\n    // Set the default elevation offset for a marker type\n    const setDefaultElevationOffset = (type, offset)=>{\n        setDefaultElevationOffsets((prev)=>({\n                ...prev,\n                [type]: offset\n            }));\n        // Also update any existing markers of this type\n        setMarkers((prev)=>prev.map((marker)=>marker.type === type ? {\n                    ...marker,\n                    elevationOffset: offset\n                } : marker));\n    };\n    // Get markers filtered by type\n    const getMarkersByType = (type)=>{\n        return markers.filter((m)=>m.type === type);\n    };\n    // ADDED: Computed properties for backward compatibility\n    const gcsLocation = markers.find((m)=>m.type === 'gcs')?.location || null;\n    const observerLocation = markers.find((m)=>m.type === 'observer')?.location || null;\n    const repeaterLocation = markers.find((m)=>m.type === 'repeater')?.location || null;\n    const gcsElevationOffset = markers.find((m)=>m.type === 'gcs')?.elevationOffset || defaultElevationOffsets.gcs;\n    const observerElevationOffset = markers.find((m)=>m.type === 'observer')?.elevationOffset || defaultElevationOffsets.observer;\n    const repeaterElevationOffset = markers.find((m)=>m.type === 'repeater')?.elevationOffset || defaultElevationOffsets.repeater;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(MarkerContext.Provider, {\n        value: {\n            markers,\n            addMarker,\n            updateMarker,\n            removeMarker,\n            defaultElevationOffsets,\n            setDefaultElevationOffset,\n            getMarkersByType,\n            // ADDED: Computed properties\n            gcsLocation,\n            observerLocation,\n            repeaterLocation,\n            gcsElevationOffset,\n            observerElevationOffset,\n            repeaterElevationOffset\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/context/MarkerContext.tsx\",\n        lineNumber: 202,\n        columnNumber: 5\n    }, this);\n}\n/**\n * Custom hook to access marker context\n */ function useMarkersContext() {\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(MarkerContext);\n    if (context === undefined) {\n        throw new Error('useMarkersContext must be used within a MarkerProvider');\n    }\n    return context;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/context/MarkerContext.tsx\n");

/***/ }),

/***/ "(ssr)/./src/app/context/ObstacleAnalysisContext.tsx":
/*!*****************************************************!*\
  !*** ./src/app/context/ObstacleAnalysisContext.tsx ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ObstacleAnalysisProvider: () => (/* binding */ ObstacleAnalysisProvider),\n/* harmony export */   useObstacleAnalysis: () => (/* binding */ useObstacleAnalysis)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _mapcontext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mapcontext */ \"(ssr)/./src/app/context/mapcontext.tsx\");\n/* harmony import */ var _FlightPlanContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./FlightPlanContext */ \"(ssr)/./src/app/context/FlightPlanContext.tsx\");\n/* harmony import */ var _AreaOfOpsContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./AreaOfOpsContext */ \"(ssr)/./src/app/context/AreaOfOpsContext.tsx\");\n/* harmony import */ var _hooks_useFlightPathSampling__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../hooks/useFlightPathSampling */ \"(ssr)/./src/app/hooks/useFlightPathSampling.ts\");\n/* harmony import */ var _turf_turf__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @turf/turf */ \"(ssr)/./node_modules/@turf/distance/dist/esm/index.js\");\n/* harmony import */ var _utils_TerrainUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/TerrainUtils */ \"(ssr)/./src/app/utils/TerrainUtils.ts\");\n/**\n * ObstacleAnalysisContext.tsx\n * \n * Purpose:\n * Provides a context for obstacle analysis functionality, including state management\n * and methods for running terrain clearance analysis. This context serves as the\n * data layer for the obstacle analysis feature.\n * \n * Related Files:\n * - ObstacleChart.tsx: Visualizes the analysis results\n * - ObstacleAnalysisDashboard.tsx: UI component using this context\n * - ObstacleChartModal.tsx: Modal dialog showing the chart\n * - useFlightPathSampling.ts: Utility for generating sample points\n */ \n\n\n\n\n\n\n\n/**\n * Default analysis options\n */ const defaultAnalysisOptions = {\n    samplingResolution: 10\n};\nconst ObstacleAnalysisContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null);\n/**\n * Provides obstacle analysis state and methods\n * @param children - React components to render within the provider\n */ const ObstacleAnalysisProvider = ({ children })=>{\n    const { map, elevationService } = (0,_mapcontext__WEBPACK_IMPORTED_MODULE_2__.useMapContext)();\n    const { flightPlan, isProcessed, setFlightPlan } = (0,_FlightPlanContext__WEBPACK_IMPORTED_MODULE_3__.useFlightPlanContext)();\n    const [status, setStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('idle');\n    const [progress, setProgress] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [results, setResults] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [chartData, setChartData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [analysisOptions, setAnalysisOptions] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(defaultAnalysisOptions);\n    const cancelAnalysisRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    const { aoTerrainGrid } = (0,_AreaOfOpsContext__WEBPACK_IMPORTED_MODULE_4__.useAreaOfOpsContext)();\n    /**\n * Converts analysis results to chart data format\n * @param result - The analysis result to convert\n * @returns The formatted chart data\n */ const generateChartData = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"ObstacleAnalysisProvider.useCallback[generateChartData]\": (result)=>{\n            const altitudeMode = flightPlan?.features[0]?.properties?.waypoints?.[0]?.altitudeMode ?? 'absolute';\n            console.log(`Generating chart data for altitude mode: ${altitudeMode}`);\n            const distancesInKm = result.distances.map({\n                \"ObstacleAnalysisProvider.useCallback[generateChartData].distancesInKm\": (d)=>d / 1000\n            }[\"ObstacleAnalysisProvider.useCallback[generateChartData].distancesInKm\"]);\n            const highestTerrain = Math.max(...result.terrainElevations);\n            const highestFlight = Math.max(...result.flightAltitudes);\n            const waypoints = [];\n            const pointsOfInterest = [];\n            console.groupCollapsed('[generateChartData] Distance Sources and Units');\n            console.log('Sampled Distances (meters, source: sampleFlightPath via result.distances):', result.distances);\n            console.log('Sampled Distances (km, source: result.distances / 1000):', distancesInKm);\n            if (flightPlan?.features?.[0]?.properties?.waypoints && flightPlan?.originalWaypointDistances) {\n                const waypointData = flightPlan.features[0].properties.waypoints;\n                const waypointDistances = flightPlan.originalWaypointDistances;\n                const navigationIndices = flightPlan.properties.metadata?.metadata?.navigationIndices || [];\n                console.log('Original Waypoints (source: flightPlan.properties.waypoints):', waypointData);\n                console.log('Waypoint Distances (meters, source: flightPlan.originalWaypointDistances):', waypointDistances);\n                console.log('Converted Waypoint Distances (km, source: waypointDistances / 1000):', waypointDistances.map({\n                    \"ObstacleAnalysisProvider.useCallback[generateChartData]\": (d)=>d / 1000\n                }[\"ObstacleAnalysisProvider.useCallback[generateChartData]\"]));\n                console.log('Navigation Indices:', navigationIndices);\n                // Use navigationIndices to select only navigation waypoints\n                navigationIndices.forEach({\n                    \"ObstacleAnalysisProvider.useCallback[generateChartData]\": (navIdx, distIdx)=>{\n                        if (distIdx < waypointDistances.length) {\n                            const wp = waypointData.find({\n                                \"ObstacleAnalysisProvider.useCallback[generateChartData].wp\": (w)=>w.index === navIdx\n                            }[\"ObstacleAnalysisProvider.useCallback[generateChartData].wp\"]);\n                            if (wp) {\n                                const distanceInKm = waypointDistances[distIdx] / 1000;\n                                const label = `WP ${wp.index + 1}`;\n                                const elevation = wp.originalAltitude;\n                                waypoints.push({\n                                    distance: distanceInKm,\n                                    label: label\n                                });\n                                pointsOfInterest.push({\n                                    type: 'waypoint',\n                                    distance: distanceInKm,\n                                    elevation: elevation,\n                                    label: label\n                                });\n                            }\n                        }\n                    }\n                }[\"ObstacleAnalysisProvider.useCallback[generateChartData]\"]);\n            } else {\n                console.warn('Missing waypoints or originalWaypointDistances:', {\n                    hasWaypoints: !!flightPlan?.features?.[0]?.properties?.waypoints,\n                    hasDistances: !!flightPlan?.originalWaypointDistances\n                });\n            }\n            console.groupEnd();\n            if (result.criticalPointDistance !== null) {\n                const criticalIndex = result.distances.findIndex({\n                    \"ObstacleAnalysisProvider.useCallback[generateChartData].criticalIndex\": (d)=>d === result.criticalPointDistance\n                }[\"ObstacleAnalysisProvider.useCallback[generateChartData].criticalIndex\"]);\n                if (criticalIndex >= 0) {\n                    pointsOfInterest.push({\n                        type: 'minimumClearance',\n                        distance: distancesInKm[criticalIndex],\n                        elevation: result.flightAltitudes[criticalIndex],\n                        clearance: result.minimumClearance,\n                        label: 'Min Clearance'\n                    });\n                }\n            }\n            if (result.minimumClearance < 0) {\n                result.distances.forEach({\n                    \"ObstacleAnalysisProvider.useCallback[generateChartData]\": (d, i)=>{\n                        const clearance = result.flightAltitudes[i] - result.terrainElevations[i];\n                        if (clearance < 0) {\n                            pointsOfInterest.push({\n                                type: 'collision',\n                                distance: distancesInKm[i],\n                                elevation: result.flightAltitudes[i],\n                                clearance: clearance,\n                                label: 'Collision'\n                            });\n                        }\n                    }\n                }[\"ObstacleAnalysisProvider.useCallback[generateChartData]\"]);\n            }\n            if (result.pointsOfInterest && result.pointsOfInterest.length > 0) {\n                result.pointsOfInterest.forEach({\n                    \"ObstacleAnalysisProvider.useCallback[generateChartData]\": (poi)=>{\n                        if (poi.type !== 'waypoint') {\n                            pointsOfInterest.push({\n                                ...poi,\n                                distance: poi.distance / 1000,\n                                elevation: poi.elevation || 0\n                            });\n                        }\n                    }\n                }[\"ObstacleAnalysisProvider.useCallback[generateChartData]\"]);\n            }\n            return {\n                distances: distancesInKm,\n                terrainElevations: result.terrainElevations,\n                flightAltitudes: result.flightAltitudes,\n                minimumClearance: result.minimumClearance,\n                criticalPointDistance: result.criticalPointDistance !== null ? result.criticalPointDistance / 1000 : null,\n                highestPoint: {\n                    terrain: highestTerrain,\n                    flight: highestFlight\n                },\n                waypoints,\n                pointsOfInterest\n            };\n        }\n    }[\"ObstacleAnalysisProvider.useCallback[generateChartData]\"], [\n        flightPlan\n    ]);\n    /**\n * Fills terrain elevation data for sample points using TerrainUtils\n * @param pts - Array of sample points to fill with terrain elevation\n * @param onProgress - Optional callback to report progress (returns true to cancel)\n * @returns Promise that resolves when terrain data is filled\n */ const fillTerrain = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"ObstacleAnalysisProvider.useCallback[fillTerrain]\": async (pts, onProgress)=>{\n            if (!map) {\n                throw new Error(\"Map not available\");\n            }\n            // For absolute/relative modes with few points, add intermediate points\n            const altitudeMode = flightPlan?.features[0]?.properties?.waypoints?.[0]?.altitudeMode ?? 'absolute';\n            const isNonTerrainMode = altitudeMode !== 'terrain';\n            const hasLimitedPoints = pts.length < 20;\n            let additionalPoints = [];\n            if (isNonTerrainMode && hasLimitedPoints) {\n                for(let i = 0; i < pts.length - 1; i++){\n                    const startPoint = pts[i];\n                    const endPoint = pts[i + 1];\n                    const segmentDistance = endPoint.distanceFromStart - startPoint.distanceFromStart;\n                    if (segmentDistance < 2) continue;\n                    const numPoints = Math.min(Math.floor(segmentDistance / 2), 10);\n                    for(let j = 1; j < numPoints; j++){\n                        const ratio = j / numPoints;\n                        const distance = startPoint.distanceFromStart + ratio * (endPoint.distanceFromStart - startPoint.distanceFromStart);\n                        const lon = startPoint.position[0] + ratio * (endPoint.position[0] - startPoint.position[0]);\n                        const lat = startPoint.position[1] + ratio * (endPoint.position[1] - startPoint.position[1]);\n                        const flightElevation = startPoint.flightElevation + ratio * (endPoint.flightElevation - startPoint.flightElevation);\n                        additionalPoints.push({\n                            position: [\n                                lon,\n                                lat,\n                                flightElevation\n                            ],\n                            distanceFromStart: distance,\n                            flightElevation: flightElevation,\n                            terrainElevation: 0,\n                            clearance: 0\n                        });\n                    }\n                }\n            }\n            // Combine and deduplicate points\n            const allPoints = [\n                ...pts,\n                ...additionalPoints\n            ];\n            const uniquePoints = Array.from(new Map(allPoints.map({\n                \"ObstacleAnalysisProvider.useCallback[fillTerrain].uniquePoints\": (p)=>[\n                        `${p.position[0].toFixed(10)},${p.position[1].toFixed(10)}`,\n                        p\n                    ]\n            }[\"ObstacleAnalysisProvider.useCallback[fillTerrain].uniquePoints\"])).values());\n            uniquePoints.sort({\n                \"ObstacleAnalysisProvider.useCallback[fillTerrain]\": (a, b)=>a.distanceFromStart - b.distanceFromStart\n            }[\"ObstacleAnalysisProvider.useCallback[fillTerrain]\"]);\n            const CHUNK_SIZE = 250;\n            let totalProcessed = 0;\n            const elevationCache = {};\n            for(let i = 0; i < uniquePoints.length; i += CHUNK_SIZE){\n                const chunk = uniquePoints.slice(i, i + CHUNK_SIZE);\n                const pointsToFetch = [];\n                const cachedElevations = [];\n                chunk.forEach({\n                    \"ObstacleAnalysisProvider.useCallback[fillTerrain]\": (p)=>{\n                        const key = `${p.position[0].toFixed(10)},${p.position[1].toFixed(10)}`;\n                        const cachedElev = elevationCache[key];\n                        if (cachedElev !== undefined) {\n                            cachedElevations.push(cachedElev);\n                        } else {\n                            cachedElevations.push(null);\n                            pointsToFetch.push([\n                                p.position[0],\n                                p.position[1]\n                            ]);\n                        }\n                    }\n                }[\"ObstacleAnalysisProvider.useCallback[fillTerrain]\"]);\n                let elevations = [];\n                if (pointsToFetch.length > 0) {\n                    elevations = await (0,_utils_TerrainUtils__WEBPACK_IMPORTED_MODULE_6__.getReliableTerrainElevations)(map, pointsToFetch, {\n                        \"ObstacleAnalysisProvider.useCallback[fillTerrain]\": (chunkProgress)=>{\n                            if (onProgress) {\n                                const chunkFraction = Math.min(CHUNK_SIZE, uniquePoints.length - i) / uniquePoints.length;\n                                const adjustedProgress = (totalProcessed / uniquePoints.length + chunkProgress / 100 * chunkFraction) * 100;\n                                const cappedProgress = Math.min(adjustedProgress, 100);\n                                return onProgress(cappedProgress);\n                            }\n                            return false;\n                        }\n                    }[\"ObstacleAnalysisProvider.useCallback[fillTerrain]\"]);\n                    // Retry negative elevations\n                    for(let j = 0; j < elevations.length; j++){\n                        if (elevations[j] < 0) {\n                            const [lon, lat] = pointsToFetch[j];\n                            await (0,_utils_TerrainUtils__WEBPACK_IMPORTED_MODULE_6__.ensureDEMLoaded)(map);\n                            const retryElevations = await (0,_utils_TerrainUtils__WEBPACK_IMPORTED_MODULE_6__.getReliableTerrainElevations)(map, [\n                                [\n                                    lon,\n                                    lat\n                                ]\n                            ]);\n                            elevations[j] = retryElevations[0];\n                        }\n                    }\n                    // Update cache with new elevations\n                    pointsToFetch.forEach({\n                        \"ObstacleAnalysisProvider.useCallback[fillTerrain]\": (point, idx)=>{\n                            const key = `${point[0].toFixed(10)},${point[1].toFixed(10)}`;\n                            elevationCache[key] = elevations[idx];\n                        }\n                    }[\"ObstacleAnalysisProvider.useCallback[fillTerrain]\"]);\n                }\n                let elevationIndex = 0;\n                chunk.forEach({\n                    \"ObstacleAnalysisProvider.useCallback[fillTerrain]\": (p, j)=>{\n                        let elevation;\n                        if (cachedElevations[j] !== null) {\n                            elevation = cachedElevations[j];\n                        } else {\n                            elevation = elevations[elevationIndex++];\n                        }\n                        p.terrainElevation = elevation;\n                        p.clearance = p.flightElevation - p.terrainElevation;\n                    }\n                }[\"ObstacleAnalysisProvider.useCallback[fillTerrain]\"]);\n                totalProcessed += chunk.length;\n                const progress = Math.min(totalProcessed / uniquePoints.length * 100, 100);\n                if (onProgress && onProgress(progress)) return;\n                await new Promise({\n                    \"ObstacleAnalysisProvider.useCallback[fillTerrain]\": (resolve)=>setTimeout(resolve, 15)\n                }[\"ObstacleAnalysisProvider.useCallback[fillTerrain]\"]);\n            }\n            // Update critical points for non-terrain modes\n            if (additionalPoints.length > 0) {\n                const criticalPoints = additionalPoints.filter({\n                    \"ObstacleAnalysisProvider.useCallback[fillTerrain].criticalPoints\": (p)=>p.clearance < 0 || p.clearance < Math.min(...pts.map({\n                            \"ObstacleAnalysisProvider.useCallback[fillTerrain].criticalPoints\": (op)=>op.clearance\n                        }[\"ObstacleAnalysisProvider.useCallback[fillTerrain].criticalPoints\"])) + 5\n                }[\"ObstacleAnalysisProvider.useCallback[fillTerrain].criticalPoints\"]);\n                if (criticalPoints.length > 0) {\n                    criticalPoints.forEach({\n                        \"ObstacleAnalysisProvider.useCallback[fillTerrain]\": (cp)=>{\n                            const tooClose = pts.some({\n                                \"ObstacleAnalysisProvider.useCallback[fillTerrain].tooClose\": (p)=>Math.abs(p.distanceFromStart - cp.distanceFromStart) < 2\n                            }[\"ObstacleAnalysisProvider.useCallback[fillTerrain].tooClose\"]);\n                            if (!tooClose) {\n                                pts.push(cp);\n                            }\n                        }\n                    }[\"ObstacleAnalysisProvider.useCallback[fillTerrain]\"]);\n                    pts.sort({\n                        \"ObstacleAnalysisProvider.useCallback[fillTerrain]\": (a, b)=>a.distanceFromStart - b.distanceFromStart\n                    }[\"ObstacleAnalysisProvider.useCallback[fillTerrain]\"]);\n                }\n            }\n        }\n    }[\"ObstacleAnalysisProvider.useCallback[fillTerrain]\"], [\n        map,\n        flightPlan\n    ]);\n    /**\n * Runs the obstacle analysis for the flight plan\n * @param options - Optional analysis options to override defaults\n */ const runAnalysis = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"ObstacleAnalysisProvider.useCallback[runAnalysis]\": async (options)=>{\n            if (status === 'loading') {\n                return;\n            }\n            const analysisId = Date.now();\n            if (!map || !flightPlan || !isProcessed) {\n                const errorMessage = `Map, flight plan, or processing incomplete (map: ${!!map}, flightPlan: ${!!flightPlan}, isProcessed: ${isProcessed})`;\n                setError(errorMessage);\n                setStatus('error');\n                return;\n            }\n            try {\n                setStatus('loading');\n                setProgress(0);\n                setError(null);\n                cancelAnalysisRef.current = false;\n                await new Promise({\n                    \"ObstacleAnalysisProvider.useCallback[runAnalysis]\": (resolve)=>setTimeout(resolve, 15)\n                }[\"ObstacleAnalysisProvider.useCallback[runAnalysis]\"]);\n                if (cancelAnalysisRef.current) {\n                    console.log(`[${new Date().toISOString()}] [ObstacleAnalysisContext.tsx] Analysis cancelled during initial delay`);\n                    return;\n                }\n                if (options) {\n                    setAnalysisOptions({\n                        \"ObstacleAnalysisProvider.useCallback[runAnalysis]\": (prev)=>({\n                                ...prev,\n                                ...options\n                            })\n                    }[\"ObstacleAnalysisProvider.useCallback[runAnalysis]\"]);\n                }\n                const flightFeature = flightPlan.features[0];\n                if (!flightFeature || flightFeature.geometry.type !== 'LineString') {\n                    throw new Error('Invalid flight plan geometry. Expected LineString.');\n                }\n                const coords = flightFeature.geometry.coordinates;\n                if (!Array.isArray(coords) || coords.length < 2) {\n                    throw new Error('Flight plan must have at least 2 waypoints.');\n                }\n                // Ensure DEM is loaded\n                await (0,_utils_TerrainUtils__WEBPACK_IMPORTED_MODULE_6__.ensureDEMLoaded)(map);\n                const waypoints = flightFeature.properties?.waypoints || [];\n                if (waypoints.length < 2) {\n                    throw new Error('Flight plan must have at least 2 valid waypoints.');\n                }\n                const progressCallback = {\n                    \"ObstacleAnalysisProvider.useCallback[runAnalysis].progressCallback\": (value)=>{\n                        const roundedValue = Math.round(value);\n                        if (roundedValue % 5 === 0 || roundedValue === 100) {\n                            setProgress(roundedValue);\n                        }\n                        return cancelAnalysisRef.current;\n                    }\n                }[\"ObstacleAnalysisProvider.useCallback[runAnalysis].progressCallback\"];\n                const altitudeMode = waypoints[0]?.altitudeMode ?? 'absolute';\n                console.time(\"sampleFlightPath\");\n                let samplePoints = await (0,_hooks_useFlightPathSampling__WEBPACK_IMPORTED_MODULE_5__.sampleFlightPath)(flightFeature.geometry, {\n                    resolution: analysisOptions.samplingResolution,\n                    progressCallback,\n                    isTerrainMode: altitudeMode === 'terrain'\n                });\n                console.timeEnd(\"sampleFlightPath\");\n                if (cancelAnalysisRef.current) {\n                    setStatus('idle');\n                    return;\n                }\n                // Compute waypoint distances\n                let cumulativeDistance = 0;\n                const originalWaypointDistances = [\n                    0\n                ];\n                const waypointCoords = waypoints.map({\n                    \"ObstacleAnalysisProvider.useCallback[runAnalysis].waypointCoords\": (wp, idx)=>{\n                        const coord = flightFeature.geometry.coordinates[idx];\n                        if (!coord || !Array.isArray(coord) || coord.length < 2) {\n                            return null;\n                        }\n                        return coord;\n                    }\n                }[\"ObstacleAnalysisProvider.useCallback[runAnalysis].waypointCoords\"]).filter({\n                    \"ObstacleAnalysisProvider.useCallback[runAnalysis].waypointCoords\": (coord)=>coord !== null\n                }[\"ObstacleAnalysisProvider.useCallback[runAnalysis].waypointCoords\"]);\n                if (waypointCoords.length !== waypoints.length) {\n                    console.warn(`[${new Date().toISOString()}] [ObstacleAnalysisContext.tsx] Coordinate mismatch:`, {\n                        waypointsLength: waypoints.length,\n                        coordsLength: waypointCoords.length\n                    });\n                }\n                for(let i = 1; i < waypointCoords.length; i++){\n                    const prevCoord = waypointCoords[i - 1];\n                    const currCoord = waypointCoords[i];\n                    const segmentDistance = _turf_turf__WEBPACK_IMPORTED_MODULE_7__.distance([\n                        prevCoord[0],\n                        prevCoord[1]\n                    ], [\n                        currCoord[0],\n                        currCoord[1]\n                    ], {\n                        units: 'meters'\n                    });\n                    cumulativeDistance += segmentDistance;\n                    originalWaypointDistances.push(cumulativeDistance);\n                }\n                const totalDistance = flightPlan.properties?.totalDistance ?? cumulativeDistance;\n                if (originalWaypointDistances.length < waypoints.length && totalDistance) {\n                    console.warn(`[${new Date().toISOString()}] [ObstacleAnalysisContext.tsx] Incomplete waypoint distances, interpolating with totalDistance:`, totalDistance);\n                    const factor = totalDistance / (waypoints.length - 1);\n                    originalWaypointDistances.length = 0;\n                    for(let i = 0; i < waypoints.length; i++){\n                        originalWaypointDistances.push(i * factor);\n                    }\n                }\n                const updatedFlightPlan = {\n                    ...flightPlan,\n                    waypointDistances: flightPlan.originalWaypointDistances || flightPlan.waypointDistances\n                };\n                setFlightPlan(updatedFlightPlan);\n                if (altitudeMode !== 'terrain') {\n                    samplePoints.forEach({\n                        \"ObstacleAnalysisProvider.useCallback[runAnalysis]\": (point)=>{\n                            let segmentIndex = 0;\n                            while(segmentIndex < originalWaypointDistances.length - 1 && point.distanceFromStart > originalWaypointDistances[segmentIndex + 1] + Number.EPSILON){\n                                segmentIndex++;\n                            }\n                            point.flightElevation = waypoints[segmentIndex].originalAltitude;\n                        }\n                    }[\"ObstacleAnalysisProvider.useCallback[runAnalysis]\"]);\n                }\n                // Use elevation cache in fillTerrain\n                const elevationCache = {};\n                await fillTerrain(samplePoints, {\n                    \"ObstacleAnalysisProvider.useCallback[runAnalysis]\": (p)=>{\n                        setProgress(60 + Math.round(p * 0.4));\n                        return cancelAnalysisRef.current;\n                    }\n                }[\"ObstacleAnalysisProvider.useCallback[runAnalysis]\"]);\n                if (cancelAnalysisRef.current) {\n                    setStatus('idle');\n                    return;\n                }\n                // Recalculate clearance\n                samplePoints.forEach({\n                    \"ObstacleAnalysisProvider.useCallback[runAnalysis]\": (point)=>{\n                        point.clearance = point.flightElevation - point.terrainElevation;\n                    }\n                }[\"ObstacleAnalysisProvider.useCallback[runAnalysis]\"]);\n                // Compute analysis results\n                const flightAltitudes = samplePoints.map({\n                    \"ObstacleAnalysisProvider.useCallback[runAnalysis].flightAltitudes\": (p)=>p.flightElevation\n                }[\"ObstacleAnalysisProvider.useCallback[runAnalysis].flightAltitudes\"]);\n                const terrainElevations = samplePoints.map({\n                    \"ObstacleAnalysisProvider.useCallback[runAnalysis].terrainElevations\": (p)=>p.terrainElevation\n                }[\"ObstacleAnalysisProvider.useCallback[runAnalysis].terrainElevations\"]);\n                const distances = samplePoints.map({\n                    \"ObstacleAnalysisProvider.useCallback[runAnalysis].distances\": (p)=>p.distanceFromStart\n                }[\"ObstacleAnalysisProvider.useCallback[runAnalysis].distances\"]);\n                const clearances = samplePoints.map({\n                    \"ObstacleAnalysisProvider.useCallback[runAnalysis].clearances\": (p)=>p.clearance\n                }[\"ObstacleAnalysisProvider.useCallback[runAnalysis].clearances\"]);\n                const minimumClearance = Math.min(...clearances);\n                const highestObstacle = Math.max(...terrainElevations);\n                const criticalPointIndex = clearances.indexOf(minimumClearance);\n                const criticalPointDistance = criticalPointIndex >= 0 ? distances[criticalPointIndex] : null;\n                const pointsOfInterest = [];\n                const result = {\n                    samplePoints,\n                    minimumClearance,\n                    criticalPointDistance,\n                    highestObstacle,\n                    flightAltitudes,\n                    terrainElevations,\n                    distances,\n                    pointsOfInterest\n                };\n                setResults(result);\n                setChartData(generateChartData(result));\n                setStatus('success');\n            } catch (err) {\n                console.error(`[${new Date().toISOString()}] [ObstacleAnalysisContext.tsx] Analysis ${analysisId} error:`, err);\n                setError(err instanceof Error ? err.message : String(err));\n                setStatus('error');\n            }\n        }\n    }[\"ObstacleAnalysisProvider.useCallback[runAnalysis]\"], [\n        map,\n        flightPlan,\n        isProcessed,\n        analysisOptions,\n        setError,\n        setStatus,\n        setProgress,\n        setFlightPlan,\n        generateChartData,\n        fillTerrain,\n        status\n    ]);\n    /**\n * Cancels the ongoing analysis\n */ const cancelAnalysis = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"ObstacleAnalysisProvider.useCallback[cancelAnalysis]\": ()=>{\n            cancelAnalysisRef.current = true;\n            setStatus('idle');\n            setProgress(0);\n        }\n    }[\"ObstacleAnalysisProvider.useCallback[cancelAnalysis]\"], []);\n    /**\n * Clears analysis results and elevation cache\n */ const clearResults = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"ObstacleAnalysisProvider.useCallback[clearResults]\": ()=>{\n            setResults(null);\n            setChartData(null);\n            setStatus('idle');\n            setProgress(0);\n            setError(null);\n        }\n    }[\"ObstacleAnalysisProvider.useCallback[clearResults]\"], []);\n    const value = {\n        status,\n        progress,\n        error,\n        results,\n        chartData,\n        runAnalysis,\n        cancelAnalysis,\n        clearResults\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ObstacleAnalysisContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/context/ObstacleAnalysisContext.tsx\",\n        lineNumber: 624,\n        columnNumber: 8\n    }, undefined);\n};\n/**\n * Hook to access the ObstacleAnalysisContext\n * @returns The ObstacleAnalysisContext properties\n * @throws Error if used outside of ObstacleAnalysisProvider\n */ const useObstacleAnalysis = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ObstacleAnalysisContext);\n    if (!context) throw new Error('useObstacleAnalysis must be used within an ObstacleAnalysisProvider');\n    return context;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/context/ObstacleAnalysisContext.tsx\n");

/***/ }),

/***/ "(ssr)/./src/app/context/PremiumContext.tsx":
/*!********************************************!*\
  !*** ./src/app/context/PremiumContext.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PremiumProvider: () => (/* binding */ PremiumProvider),\n/* harmony export */   TierLevel: () => (/* reexport safe */ _types_PremiumTypes__WEBPACK_IMPORTED_MODULE_2__.TierLevel),\n/* harmony export */   getParameterLimits: () => (/* binding */ getParameterLimits),\n/* harmony export */   usePremium: () => (/* binding */ usePremium)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _types_PremiumTypes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types/PremiumTypes */ \"(ssr)/./src/app/types/PremiumTypes.ts\");\n/* harmony import */ var _utils_premiumConfig__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/premiumConfig */ \"(ssr)/./src/app/utils/premiumConfig.ts\");\n/**\n * src/app/context/PremiumContext.tsx\n * \n * Purpose:\n * Provides centralized premium feature access management throughout the application.\n */ /* __next_internal_client_entry_do_not_use__ TierLevel,PremiumProvider,usePremium,getParameterLimits auto */ \n\n// Import shared types\n\n// Import from premiumConfig.ts\n\n// Context creation\nconst PremiumContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\n// Re-export TierLevel and FeatureId for backward compatibility\n\n// Storage keys\nconst STORAGE_KEYS = {\n    TIER_LEVEL: 'intel_aero_tier_level',\n    TIER_EXPIRATION: 'intel_aero_tier_expiration'\n};\n// Provider component\nconst PremiumProvider = ({ children })=>{\n    // State initialization\n    const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        tierLevel: _types_PremiumTypes__WEBPACK_IMPORTED_MODULE_2__.TierLevel.FREE,\n        tierExpiration: null,\n        isModalOpen: false,\n        attemptedFeature: null,\n        validationLoading: false,\n        validationError: null\n    });\n    // Load tier status from localStorage on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"PremiumProvider.useEffect\": ()=>{\n            if (false) {}\n        }\n    }[\"PremiumProvider.useEffect\"], []);\n    // Check if user can use a specific feature - Using FEATURE_TIER_REQUIREMENTS from premiumConfig\n    const canUseFeature = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"PremiumProvider.useCallback[canUseFeature]\": (featureId, params)=>{\n            // Check if the feature ID is marker-related\n            const isMarkerFeature = featureId.startsWith('add_');\n            if (isMarkerFeature) {\n                const markerType = featureId.replace('add_', '');\n                const currentCount = params?.currentCount || 0;\n                // Check marker limits for current tier\n                const maxAllowed = _utils_premiumConfig__WEBPACK_IMPORTED_MODULE_3__.TIER_CONFIG[state.tierLevel].maxMarkers[markerType];\n                // If no markers of this type are allowed, or we've reached the limit\n                if (maxAllowed === 0 || currentCount >= maxAllowed) {\n                    return false;\n                }\n                return true;\n            } else {\n                // For non-marker features, check the feature map directly\n                const availableInTier = _utils_premiumConfig__WEBPACK_IMPORTED_MODULE_3__.TIER_CONFIG[state.tierLevel].features[featureId];\n                return !!availableInTier;\n            }\n        }\n    }[\"PremiumProvider.useCallback[canUseFeature]\"], [\n        state.tierLevel\n    ]);\n    // Unified function to determine required tier level\n    const getRequiredTierForFeature = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"PremiumProvider.useCallback[getRequiredTierForFeature]\": (featureId, params)=>{\n            // For marker features with current count\n            if (featureId.startsWith('add_') && params?.currentCount !== undefined) {\n                const markerType = featureId.replace('add_', '');\n                const currentCount = params.currentCount;\n                // Find the lowest tier that allows this many markers of this type\n                for(let tier = _types_PremiumTypes__WEBPACK_IMPORTED_MODULE_2__.TierLevel.FREE; tier <= _types_PremiumTypes__WEBPACK_IMPORTED_MODULE_2__.TierLevel.COMMERCIAL; tier++){\n                    const maxAllowed = _utils_premiumConfig__WEBPACK_IMPORTED_MODULE_3__.TIER_CONFIG[tier].maxMarkers[markerType];\n                    if (maxAllowed > currentCount) {\n                        return tier;\n                    }\n                }\n                // Default to commercial if no tier is sufficient\n                return _types_PremiumTypes__WEBPACK_IMPORTED_MODULE_2__.TierLevel.COMMERCIAL;\n            }\n            // For basic feature access, return from the requirements map\n            return _utils_premiumConfig__WEBPACK_IMPORTED_MODULE_3__.FEATURE_TIER_REQUIREMENTS[featureId] || _types_PremiumTypes__WEBPACK_IMPORTED_MODULE_2__.TierLevel.COMMERCIAL;\n        }\n    }[\"PremiumProvider.useCallback[getRequiredTierForFeature]\"], []);\n    // Check if user can add a marker of a specific type\n    const canAddMarker = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"PremiumProvider.useCallback[canAddMarker]\": (markerType, currentCount)=>{\n            const maxAllowed = _utils_premiumConfig__WEBPACK_IMPORTED_MODULE_3__.TIER_CONFIG[state.tierLevel].maxMarkers[markerType];\n            return currentCount < maxAllowed;\n        }\n    }[\"PremiumProvider.useCallback[canAddMarker]\"], [\n        state.tierLevel\n    ]);\n    // Get parameter limits for current tier\n    const getParameterLimits = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"PremiumProvider.useCallback[getParameterLimits]\": (parameterType)=>{\n            return _utils_premiumConfig__WEBPACK_IMPORTED_MODULE_3__.TIER_CONFIG[state.tierLevel].parameters[parameterType];\n        }\n    }[\"PremiumProvider.useCallback[getParameterLimits]\"], [\n        state.tierLevel\n    ]);\n    // Open upgrade modal when attempting to use premium feature\n    const requestUpgrade = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"PremiumProvider.useCallback[requestUpgrade]\": (featureId)=>{\n            setState({\n                \"PremiumProvider.useCallback[requestUpgrade]\": (prev)=>({\n                        ...prev,\n                        isModalOpen: true,\n                        attemptedFeature: featureId\n                    })\n            }[\"PremiumProvider.useCallback[requestUpgrade]\"]);\n        }\n    }[\"PremiumProvider.useCallback[requestUpgrade]\"], []);\n    // Close upgrade modal\n    const closeModal = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"PremiumProvider.useCallback[closeModal]\": ()=>{\n            setState({\n                \"PremiumProvider.useCallback[closeModal]\": (prev)=>({\n                        ...prev,\n                        isModalOpen: false,\n                        attemptedFeature: null,\n                        validationError: null\n                    })\n            }[\"PremiumProvider.useCallback[closeModal]\"]);\n        }\n    }[\"PremiumProvider.useCallback[closeModal]\"], []);\n    // Validate access code\n    const validateAccessCode = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"PremiumProvider.useCallback[validateAccessCode]\": async (code)=>{\n            setState({\n                \"PremiumProvider.useCallback[validateAccessCode]\": (prev)=>({\n                        ...prev,\n                        validationLoading: true,\n                        validationError: null\n                    })\n            }[\"PremiumProvider.useCallback[validateAccessCode]\"]);\n            try {\n                // API call to validate code\n                const response = await fetch('/api/validate-code', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        code\n                    })\n                });\n                if (!response.ok) {\n                    throw new Error('Failed to validate code');\n                }\n                const data = await response.json();\n                if (!data.valid) {\n                    setState({\n                        \"PremiumProvider.useCallback[validateAccessCode]\": (prev)=>({\n                                ...prev,\n                                validationLoading: false,\n                                validationError: data.message || 'Invalid access code'\n                            })\n                    }[\"PremiumProvider.useCallback[validateAccessCode]\"]);\n                    return false;\n                }\n                // Valid code - update tier level\n                const newTierLevel = data.tierLevel || _types_PremiumTypes__WEBPACK_IMPORTED_MODULE_2__.TierLevel.COMMUNITY;\n                const expirationDate = data.expiresAt ? new Date(data.expiresAt) : null;\n                // Update localStorage\n                localStorage.setItem(STORAGE_KEYS.TIER_LEVEL, newTierLevel.toString());\n                if (expirationDate) {\n                    localStorage.setItem(STORAGE_KEYS.TIER_EXPIRATION, expirationDate.toISOString());\n                }\n                // Update state\n                setState({\n                    \"PremiumProvider.useCallback[validateAccessCode]\": (prev)=>({\n                            ...prev,\n                            tierLevel: newTierLevel,\n                            tierExpiration: expirationDate,\n                            validationLoading: false,\n                            isModalOpen: false\n                        })\n                }[\"PremiumProvider.useCallback[validateAccessCode]\"]);\n                return true;\n            } catch (error) {\n                console.error('Error validating access code:', error);\n                setState({\n                    \"PremiumProvider.useCallback[validateAccessCode]\": (prev)=>({\n                            ...prev,\n                            validationLoading: false,\n                            validationError: 'Error validating code. Please try again.'\n                        })\n                }[\"PremiumProvider.useCallback[validateAccessCode]\"]);\n                return false;\n            }\n        }\n    }[\"PremiumProvider.useCallback[validateAccessCode]\"], []);\n    // Get tier name\n    const getTierName = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"PremiumProvider.useCallback[getTierName]\": (level)=>{\n            // If a specific level is provided, use that; otherwise use the current user's tier\n            const tierToDisplay = level !== undefined ? level : state.tierLevel;\n            return _utils_premiumConfig__WEBPACK_IMPORTED_MODULE_3__.TIER_CONFIG[tierToDisplay].name;\n        }\n    }[\"PremiumProvider.useCallback[getTierName]\"], [\n        state.tierLevel\n    ]);\n    // Get remaining days for subscription\n    const getRemainingDays = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"PremiumProvider.useCallback[getRemainingDays]\": ()=>{\n            if (!state.tierExpiration) return null;\n            const now = new Date();\n            const diff = state.tierExpiration.getTime() - now.getTime();\n            const days = Math.ceil(diff / (1000 * 60 * 60 * 24));\n            return Math.max(0, days);\n        }\n    }[\"PremiumProvider.useCallback[getRemainingDays]\"], [\n        state.tierExpiration\n    ]);\n    // Context value\n    const contextValue = {\n        ...state,\n        canUseFeature,\n        canAddMarker,\n        requestUpgrade,\n        closeModal,\n        validateAccessCode,\n        getTierName,\n        getRequiredTierForFeature,\n        getRemainingDays,\n        getParameterLimits\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(PremiumContext.Provider, {\n        value: contextValue,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/context/PremiumContext.tsx\",\n        lineNumber: 298,\n        columnNumber: 5\n    }, undefined);\n};\n// Custom hook for using premium context\nconst usePremium = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(PremiumContext);\n    if (context === undefined) {\n        throw new Error('usePremium must be used within a PremiumProvider');\n    }\n    return context;\n};\n// Helper function for external use\nconst getParameterLimits = (parameterType, userTier)=>{\n    return _utils_premiumConfig__WEBPACK_IMPORTED_MODULE_3__.PARAMETER_LIMITS[userTier][parameterType];\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/context/PremiumContext.tsx\n");

/***/ }),

/***/ "(ssr)/./src/app/context/mapcontext.tsx":
/*!****************************************!*\
  !*** ./src/app/context/mapcontext.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MapProvider: () => (/* binding */ MapProvider),\n/* harmony export */   useMapContext: () => (/* binding */ useMapContext)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../services/LayerManager */ \"(ssr)/./src/app/services/LayerManager.ts\");\n/* harmony import */ var _services_ElevationService__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/ElevationService */ \"(ssr)/./src/app/services/ElevationService.ts\");\n// src/app/context/MapContext.tsx\n\n\n\n\nconst initialLayerState = Object.values(_services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.MAP_LAYERS).reduce((acc, layerId)=>({\n        ...acc,\n        [layerId]: false\n    }), {});\nconst MapContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null);\n/**\n * Provides map-related state and services to the application.\n * @param children - React components to render within the provider.\n */ const MapProvider = ({ children })=>{\n    const [map, setMapInstance] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [terrainLoaded, setTerrainLoaded] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [elevationService, setElevationService] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [layerVisibility, setLayerVisibility] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initialLayerState);\n    /**\n   * Sets the map instance and initializes related services.\n   * @param mapInstance - The Mapbox map instance or null.\n   * @param newTerrainLoaded - Indicates if the terrain source is loaded.\n   */ const setMap = (mapInstance, newTerrainLoaded)=>{\n        if (mapInstance === map && newTerrainLoaded === terrainLoaded) return;\n        if (mapInstance) {\n            _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.layerManager.setMap(mapInstance);\n            _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.layerManager.registerKnownLayers();\n            const layerState = _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.layerManager.getLayerState();\n            setLayerVisibility(layerState);\n            const elevService = new _services_ElevationService__WEBPACK_IMPORTED_MODULE_3__.ElevationService(mapInstance);\n            setElevationService(elevService);\n        } else {\n            setElevationService(null);\n        }\n        setMapInstance(mapInstance);\n        setTerrainLoaded(newTerrainLoaded);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"MapProvider.useEffect\": ()=>{\n            if (!map) return undefined; // Explicitly return undefined for cleanup\n            const cleanup = _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.layerManager.addEventListener({\n                \"MapProvider.useEffect.cleanup\": (event, layerId, visible)=>{\n                    if (event === 'visibilityChange' && visible !== undefined) {\n                        setLayerVisibility({\n                            \"MapProvider.useEffect.cleanup\": (prev)=>({\n                                    ...prev,\n                                    [layerId]: visible\n                                })\n                        }[\"MapProvider.useEffect.cleanup\"]);\n                    } else if (event === 'layerRemoved') {\n                        setLayerVisibility({\n                            \"MapProvider.useEffect.cleanup\": (prev)=>({\n                                    ...prev,\n                                    [layerId]: false\n                                })\n                        }[\"MapProvider.useEffect.cleanup\"]);\n                    }\n                }\n            }[\"MapProvider.useEffect.cleanup\"]);\n            return cleanup; // Return the cleanup function\n        }\n    }[\"MapProvider.useEffect\"], [\n        map\n    ]);\n    const toggleLayer = (layerId)=>{\n        if (map) {\n            _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.layerManager.toggleLayerVisibility(layerId);\n        }\n    };\n    const setLayerVisibilityValue = (layerId, visible)=>{\n        if (map) {\n            _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.layerManager.setLayerVisibility(layerId, visible);\n        }\n    };\n    const resetLayers = ()=>{\n        if (map) {\n            _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.layerManager.resetLayers();\n        }\n    };\n    const value = {\n        map,\n        terrainLoaded,\n        elevationService,\n        layerVisibility,\n        setMap,\n        toggleLayer,\n        setLayerVisibility: setLayerVisibilityValue,\n        resetLayers\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(MapContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/context/mapcontext.tsx\",\n        lineNumber: 111,\n        columnNumber: 10\n    }, undefined);\n};\n/**\n * Hook to access the MapContext.\n * @returns The MapContext properties.\n * @throws Error if used outside of MapProvider.\n */ const useMapContext = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(MapContext);\n    if (!context) throw new Error('useMapContext must be used within a MapProvider');\n    return context;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/context/mapcontext.tsx\n");

/***/ }),

/***/ "(ssr)/./src/app/hooks/useFlightPathSampling.ts":
/*!************************************************!*\
  !*** ./src/app/hooks/useFlightPathSampling.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sampleFlightPath: () => (/* binding */ sampleFlightPath),\n/* harmony export */   useFlightPathSampling: () => (/* binding */ useFlightPathSampling)\n/* harmony export */ });\n/* harmony import */ var _turf_turf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @turf/turf */ \"(ssr)/./node_modules/@turf/distance/dist/esm/index.js\");\n\n/**\n * Interpolates a 3‑D LineString at a fixed step size.\n *\n * NOTE: The heavy work – querying terrain – is *not* performed here;\n *       we only calculate the geometrical skeleton. That keeps this\n *       function pure and unit-testable.\n */ async function sampleFlightPath(line, { resolution = 10, progressCallback, isTerrainMode = false }) {\n    const coords3d = line.coordinates;\n    if (coords3d.length < 2) throw new Error(\"LineString must contain ≥2 points\");\n    const segments = [];\n    let cumulative = 0;\n    for(let i = 0; i < coords3d.length - 1; i++){\n        const [sx, sy] = coords3d[i];\n        const [ex, ey] = coords3d[i + 1];\n        const len = _turf_turf__WEBPACK_IMPORTED_MODULE_0__.distance([\n            sx,\n            sy\n        ], [\n            ex,\n            ey\n        ], {\n            units: \"meters\"\n        });\n        segments.push({\n            start: cumulative,\n            len,\n            a0: coords3d[i][2],\n            a1: coords3d[i + 1][2]\n        });\n        cumulative += len;\n    }\n    const totalLen = cumulative; // metres\n    const totalSteps = Math.floor(totalLen / resolution);\n    /* ───────────────────── 2. Sampling loop (O(n)) ──────────────────────── */ const samples = [];\n    let segIdx = 0;\n    for(let step = 0; step <= totalSteps; step++){\n        const dist = step * resolution; // metres from start\n        // Advance segment pointer lazily (monotonically)\n        while(segIdx < segments.length - 1 && dist > segments[segIdx].start + segments[segIdx].len + Number.EPSILON){\n            segIdx++;\n        }\n        const seg = segments[segIdx];\n        // Fraction along current segment, clamped [0,1]\n        const t = Math.min(Math.max((dist - seg.start) / seg.len, 0), 1);\n        const flightElev = seg.a0 + t * (seg.a1 - seg.a0);\n        // Interpolate lon/lat linearly – cheap and good enough at ≤10 m steps\n        const [sx, sy] = coords3d[segIdx];\n        const [ex, ey] = coords3d[segIdx + 1];\n        const lon = sx + t * (ex - sx);\n        const lat = sy + t * (ey - sy);\n        samples.push({\n            position: [\n                lon,\n                lat,\n                flightElev\n            ],\n            distanceFromStart: dist,\n            flightElevation: flightElev,\n            terrainElevation: 0,\n            clearance: 0\n        });\n        /* ── progress callback every ~5 % (cheap) ── */ if (progressCallback && step % Math.max(1, Math.floor(totalSteps / 20)) === 0) {\n            if (progressCallback(step / totalSteps * 100)) {\n                // user requested cancellation\n                return [];\n            }\n        }\n    }\n    // force 100 % when done\n    progressCallback?.(100);\n    return samples;\n}\n/**\n * Hook to access the sampleFlightPath function\n * @returns Object containing the sampleFlightPath function\n */ const useFlightPathSampling = ()=>{\n    return {\n        sampleFlightPath\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/hooks/useFlightPathSampling.ts\n");

/***/ }),

/***/ "(ssr)/./src/app/hooks/useLayers.ts":
/*!************************************!*\
  !*** ./src/app/hooks/useLayers.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useLayers: () => (/* binding */ useLayers)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _context_mapcontext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../context/mapcontext */ \"(ssr)/./src/app/context/mapcontext.tsx\");\n/* harmony import */ var _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../services/LayerManager */ \"(ssr)/./src/app/services/LayerManager.ts\");\n/* harmony import */ var _context_AreaOfOpsContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../context/AreaOfOpsContext */ \"(ssr)/./src/app/context/AreaOfOpsContext.tsx\");\n/* harmony import */ var _components_AO_Hooks_useAreaOpsProcessor__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/AO/Hooks/useAreaOpsProcessor */ \"(ssr)/./src/app/components/AO/Hooks/useAreaOpsProcessor.ts\");\n/* harmony import */ var _services_BYDAService__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../services/BYDAService */ \"(ssr)/./src/app/services/BYDAService.ts\");\n/* harmony import */ var _services_MobileTowerService__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../services/MobileTowerService */ \"(ssr)/./src/app/services/MobileTowerService.ts\");\n\n\n\n\n\n\n\nfunction useLayers() {\n    const { map, toggleLayer, setLayerVisibility } = (0,_context_mapcontext__WEBPACK_IMPORTED_MODULE_1__.useMapContext)();\n    const { aoGeometry } = (0,_context_AreaOfOpsContext__WEBPACK_IMPORTED_MODULE_3__.useAreaOfOpsContext)();\n    const { showAreaOfOperations } = (0,_components_AO_Hooks_useAreaOpsProcessor__WEBPACK_IMPORTED_MODULE_4__.useAreaOpsProcessor)();\n    /**\n   * Add a flight plan to the map\n   */ const addFlightPath = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useLayers.useCallback[addFlightPath]\": (geojson)=>{\n            console.log('addFlightPath: entry', {\n                timestamp: new Date().toISOString(),\n                hasMap: !!map,\n                geojsonFeatureCount: geojson.features?.length || 0,\n                message: 'Starting flight path addition'\n            });\n            if (!map) {\n                console.log('addFlightPath: no map', {\n                    timestamp: new Date().toISOString(),\n                    message: 'Map not available, exiting'\n                });\n                return false;\n            }\n            // Create source data\n            const source = {\n                type: 'geojson',\n                data: geojson,\n                lineMetrics: true\n            };\n            console.log('addFlightPath: source created', {\n                timestamp: new Date().toISOString(),\n                sourceType: source.type,\n                featureCount: source.data.features.length,\n                message: 'GeoJSON source prepared'\n            });\n            // Create layer config\n            const layerConfig = {\n                id: _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.MAP_LAYERS.FLIGHT_PATH,\n                type: 'line',\n                source: _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.MAP_LAYERS.FLIGHT_PATH,\n                layout: {\n                    'line-join': 'round',\n                    'line-cap': 'round'\n                },\n                paint: {\n                    'line-width': 2,\n                    'line-color': '#FFFF00',\n                    'line-opacity': 1\n                }\n            };\n            console.log('addFlightPath: layer config', {\n                timestamp: new Date().toISOString(),\n                layerId: layerConfig.id,\n                layerType: layerConfig.type,\n                message: 'Layer configuration prepared'\n            });\n            // Add the layer using the layer manager\n            let success = false;\n            try {\n                success = _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.layerManager.addLayer(_services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.MAP_LAYERS.FLIGHT_PATH, source, layerConfig, undefined, true // Make visible initially\n                );\n                console.log('addFlightPath: layerManager.addLayer', {\n                    timestamp: new Date().toISOString(),\n                    layerId: _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.MAP_LAYERS.FLIGHT_PATH,\n                    success,\n                    message: success ? 'Layer added successfully' : 'Failed to add layer'\n                });\n            } catch (error) {\n                console.error('addFlightPath: layerManager error', {\n                    timestamp: new Date().toISOString(),\n                    layerId: _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.MAP_LAYERS.FLIGHT_PATH,\n                    error: error instanceof Error ? error.message : String(error),\n                    message: 'Error adding layer via layerManager'\n                });\n                return false;\n            }\n            if (success) {\n                // Check geometry type before accessing coordinates\n                const feature = geojson.features[0];\n                const geometryType = feature?.geometry?.type;\n                console.log('addFlightPath: geometry check', {\n                    timestamp: new Date().toISOString(),\n                    geometryType,\n                    hasFeature: !!feature,\n                    message: 'Checking feature geometry type'\n                });\n                if (geometryType !== 'LineString' && geometryType !== 'MultiLineString') {\n                    console.error('addFlightPath: invalid geometry', {\n                        timestamp: new Date().toISOString(),\n                        geometryType,\n                        message: 'Expected LineString or MultiLineString, cannot calculate bounds'\n                    });\n                    return true; // Layer was added, but bounds calculation is skipped\n                }\n                const coordinates = feature.geometry.coordinates;\n                console.log('addFlightPath: coordinates', {\n                    timestamp: new Date().toISOString(),\n                    coordinateCount: coordinates.length,\n                    firstCoord: coordinates[0] ? `[${coordinates[0][0]},${coordinates[0][1]}]` : null,\n                    message: 'Extracted coordinates for bounds calculation'\n                });\n                // Calculate bounds\n                const bounds = coordinates.reduce({\n                    \"useLayers.useCallback[addFlightPath].bounds\": (acc, coord)=>{\n                        const [lng, lat] = coord;\n                        acc[0] = Math.min(acc[0], lng);\n                        acc[1] = Math.min(acc[1], lat);\n                        acc[2] = Math.max(acc[2], lng);\n                        acc[3] = Math.max(acc[3], lat);\n                        return acc;\n                    }\n                }[\"useLayers.useCallback[addFlightPath].bounds\"], [\n                    Infinity,\n                    Infinity,\n                    -Infinity,\n                    -Infinity\n                ]);\n                console.log('addFlightPath: bounds calculated', {\n                    timestamp: new Date().toISOString(),\n                    bounds,\n                    isValid: bounds.every({\n                        \"useLayers.useCallback[addFlightPath]\": (b)=>isFinite(b)\n                    }[\"useLayers.useCallback[addFlightPath]\"]),\n                    message: 'Bounds calculated from coordinates'\n                });\n                // Fit map to bounds with animation\n                try {\n                    map.fitBounds(bounds, {\n                        padding: 50,\n                        duration: 500,\n                        pitch: 70,\n                        zoom: 10.5\n                    });\n                    console.log('addFlightPath: map.fitBounds', {\n                        timestamp: new Date().toISOString(),\n                        bounds,\n                        options: {\n                            padding: 50,\n                            duration: 500,\n                            pitch: 70,\n                            zoom: 10.5\n                        },\n                        message: 'Map view adjusted to fit bounds'\n                    });\n                } catch (error) {\n                    console.error('addFlightPath: fitBounds error', {\n                        timestamp: new Date().toISOString(),\n                        bounds,\n                        error: error instanceof Error ? error.message : String(error),\n                        message: 'Error adjusting map bounds'\n                    });\n                }\n            }\n            console.log('addFlightPath: complete', {\n                timestamp: new Date().toISOString(),\n                success,\n                message: 'Flight path addition completed'\n            });\n            return success;\n        }\n    }[\"useLayers.useCallback[addFlightPath]\"], [\n        map\n    ]);\n    /**\n   * Toggle high-voltage powerlines layer\n   * @returns {boolean} Success status\n   */ const togglePowerlines = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useLayers.useCallback[togglePowerlines]\": ()=>{\n            toggleLayer(_services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.MAP_LAYERS.POWERLINES);\n            toggleLayer(_services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.MAP_LAYERS.POWERLINES_HITBOX);\n            console.log('togglePowerlines: toggled', {\n                timestamp: new Date().toISOString(),\n                layers: [\n                    _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.MAP_LAYERS.POWERLINES,\n                    _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.MAP_LAYERS.POWERLINES_HITBOX\n                ],\n                message: 'HV powerlines layers toggled'\n            });\n            return true;\n        }\n    }[\"useLayers.useCallback[togglePowerlines]\"], [\n        toggleLayer\n    ]);\n    /**\n   * Toggle DBYD (Dial Before You Dig) powerlines layers\n   * @returns {Promise<boolean>} Success status\n   */ const toggleDBYDPowerlines = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useLayers.useCallback[toggleDBYDPowerlines]\": async ()=>{\n            if (!map) {\n                console.warn('toggleDBYDPowerlines: Map not available', {\n                    timestamp: new Date().toISOString(),\n                    message: 'Cannot toggle DBYD powerlines'\n                });\n                return false;\n            }\n            if (!aoGeometry) {\n                console.warn('toggleDBYDPowerlines: AO geometry not available', {\n                    timestamp: new Date().toISOString(),\n                    message: 'Cannot fetch DBYD powerlines without AO'\n                });\n                return false;\n            }\n            try {\n                // Ensure AO is visible\n                showAreaOfOperations();\n                // Fetch and update DBYD layers\n                const success = await (0,_services_BYDAService__WEBPACK_IMPORTED_MODULE_5__.fetchBYDALayers)(map, aoGeometry, setLayerVisibility);\n                if (success) {\n                    console.log('toggleDBYDPowerlines: success', {\n                        timestamp: new Date().toISOString(),\n                        layers: [\n                            _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.MAP_LAYERS.BYDA_HV,\n                            _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.MAP_LAYERS.BYDA_LV,\n                            _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.MAP_LAYERS.BYDA_SWER,\n                            _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.MAP_LAYERS.BYDA_OTHER,\n                            _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.MAP_LAYERS.BYDA_DEVICE\n                        ],\n                        message: 'DBYD powerlines layers toggled'\n                    });\n                } else {\n                    console.error('toggleDBYDPowerlines: failed to fetch layers', {\n                        timestamp: new Date().toISOString(),\n                        message: 'Failed to fetch DBYD powerlines data'\n                    });\n                }\n                return success;\n            } catch (error) {\n                console.error('toggleDBYDPowerlines: error', {\n                    timestamp: new Date().toISOString(),\n                    error: error instanceof Error ? error.message : String(error),\n                    message: 'Error toggling DBYD powerlines'\n                });\n                return false;\n            }\n        }\n    }[\"useLayers.useCallback[toggleDBYDPowerlines]\"], [\n        map,\n        aoGeometry,\n        showAreaOfOperations,\n        setLayerVisibility\n    ]);\n    /**\n   * Toggle airspace layers\n   * @returns {boolean} Success status\n   */ const toggleAirspace = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useLayers.useCallback[toggleAirspace]\": ()=>{\n            if (!map) {\n                console.warn('toggleAirspace: Map not available', {\n                    timestamp: new Date().toISOString(),\n                    message: 'Cannot toggle airspace layers'\n                });\n                return false;\n            }\n            try {\n                toggleLayer(_services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.MAP_LAYERS.AIRFIELDS);\n                toggleLayer(_services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.MAP_LAYERS.AIRFIELDS_LABELS);\n                console.log('toggleAirspace: toggled', {\n                    timestamp: new Date().toISOString(),\n                    layers: [\n                        _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.MAP_LAYERS.AIRFIELDS,\n                        _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.MAP_LAYERS.AIRFIELDS_LABELS\n                    ],\n                    message: 'Airspace layers toggled'\n                });\n                return true;\n            } catch (error) {\n                console.error('toggleAirspace: error', {\n                    timestamp: new Date().toISOString(),\n                    error: error instanceof Error ? error.message : String(error),\n                    message: 'Error toggling airspace layers'\n                });\n                return false;\n            }\n        }\n    }[\"useLayers.useCallback[toggleAirspace]\"], [\n        map,\n        toggleLayer\n    ]);\n    /**\n   * Toggle mobile towers layer\n   * @returns {Promise<boolean>} Success status\n   */ const toggleMobileTowers = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useLayers.useCallback[toggleMobileTowers]\": async ()=>{\n            if (!map) {\n                console.warn('toggleMobileTowers: Map not available');\n                return false;\n            }\n            if (!aoGeometry) {\n                console.warn('toggleMobileTowers: AO geometry not available');\n                return false;\n            }\n            try {\n                // Ensure AO is visible\n                showAreaOfOperations();\n                // Check if layers already exist\n                const towerLayerExists = !!map.getLayer('mobile-towers-unclustered-point');\n                if (towerLayerExists) {\n                    // Just toggle visibility if already loaded\n                    const isVisible = map.getLayoutProperty('mobile-towers-unclustered-point', 'visibility') === 'visible';\n                    if (isVisible) {\n                        map.setLayoutProperty('mobile-towers-unclustered-point', 'visibility', 'none');\n                        if (map.getLayer('mobile-towers-labels')) {\n                            map.setLayoutProperty('mobile-towers-labels', 'visibility', 'none');\n                        }\n                    } else {\n                        map.setLayoutProperty('mobile-towers-unclustered-point', 'visibility', 'visible');\n                    // Labels depend on zoom level, so we don't need to set them visible here\n                    }\n                    return true;\n                } else {\n                    // Display towers with the new implementation\n                    const success = await (0,_services_MobileTowerService__WEBPACK_IMPORTED_MODULE_6__.displayMobileTowers)(map, aoGeometry, setLayerVisibility);\n                    return success;\n                }\n            } catch (error) {\n                console.error('toggleMobileTowers: error', error);\n                return false;\n            }\n        }\n    }[\"useLayers.useCallback[toggleMobileTowers]\"], [\n        map,\n        aoGeometry,\n        showAreaOfOperations,\n        setLayerVisibility\n    ]);\n    /**\n   * Filter mobile towers by carrier, technology, and frequency band\n   * @param {MobileTowerFilters} filters Filter criteria\n   * @returns {boolean} Success status\n   */ const filterMobileTowersLayer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useLayers.useCallback[filterMobileTowersLayer]\": (filters)=>{\n            if (!map || !map.getLayer('mobile-towers-unclustered-point')) {\n                return false;\n            }\n            return (0,_services_MobileTowerService__WEBPACK_IMPORTED_MODULE_6__.filterMobileTowers)(map, filters);\n        }\n    }[\"useLayers.useCallback[filterMobileTowersLayer]\"], [\n        map\n    ]);\n    /**\n   * Toggle tree height raw data visualization\n   * Calls the custom toggle function exposed by MapboxLayerHandler\n   */ const toggleTreeHeights = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useLayers.useCallback[toggleTreeHeights]\": ()=>{\n            if (!map) {\n                console.warn('toggleTreeHeights: Map not available');\n                return;\n            }\n            // Call the custom toggle function we exposed from MapboxLayerHandler\n            if (map.toggleTreeHeights) {\n                map.toggleTreeHeights();\n                console.log('toggleTreeHeights: Raw data visualization toggled');\n            } else {\n                console.warn('toggleTreeHeights: Tree height system not initialized');\n            }\n        }\n    }[\"useLayers.useCallback[toggleTreeHeights]\"], [\n        map\n    ]);\n    /**\n   * Reset all layers\n   */ const resetLayers = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useLayers.useCallback[resetLayers]\": ()=>{\n            // Reset analysis layers\n            _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.layerManager.removeLayer(_services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.MAP_LAYERS.ELOS_GRID);\n            _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.layerManager.removeLayer(_services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.MAP_LAYERS.GCS_GRID);\n            _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.layerManager.removeLayer(_services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.MAP_LAYERS.OBSERVER_GRID);\n            _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.layerManager.removeLayer(_services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.MAP_LAYERS.REPEATER_GRID);\n            _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.layerManager.removeLayer(_services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.MAP_LAYERS.MERGED_VISIBILITY);\n            _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.layerManager.removeLayer(_services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.MAP_LAYERS.FLIGHT_PATH_VISIBILITY);\n            return true;\n        }\n    }[\"useLayers.useCallback[resetLayers]\"], []);\n    return {\n        addFlightPath,\n        resetLayers,\n        toggleLayer,\n        togglePowerlines,\n        toggleDBYDPowerlines,\n        toggleAirspace,\n        toggleMobileTowers,\n        filterMobileTowersLayer,\n        toggleTreeHeights\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/hooks/useLayers.ts\n");

/***/ }),

/***/ "(ssr)/./src/app/hooks/useTowerToMarker.ts":
/*!*******************************************!*\
  !*** ./src/app/hooks/useTowerToMarker.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useTowerToMarker: () => (/* binding */ useTowerToMarker)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mapbox_gl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mapbox-gl */ \"(ssr)/./node_modules/mapbox-gl/dist/mapbox-gl.js\");\n/* harmony import */ var mapbox_gl__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(mapbox_gl__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _context_MarkerContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../context/MarkerContext */ \"(ssr)/./src/app/context/MarkerContext.tsx\");\n/* harmony import */ var _components_Map_Utils_markerPopup__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/Map/Utils/markerPopup */ \"(ssr)/./src/app/components/Map/Utils/markerPopup.ts\");\n/* harmony import */ var _components_tracking_tracking__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/tracking/tracking */ \"(ssr)/./src/app/components/tracking/tracking.js\");\n// src/app/hooks/useTowerToMarker.ts\n/**\n * useTowerToMarker.ts\n * \n * Purpose:\n * Provides functionality to convert mobile towers into repeater markers\n * with tower-specific metadata preserved. This hook bridges the gap between\n * the tower display system and the marker management system.\n * \n * Features:\n * - Converts mobile towers to repeater markers\n * - Preserves tower metadata (carrier, technology, frequency)\n * - Uses the same marker management approach as useMarkers\n * - Queries terrain elevation from the map for consistency\n */ \n\n\n\n\nfunction useTowerToMarker({ map, terrainLoaded }) {\n    const { markers, addMarker, updateMarker, removeMarker, defaultElevationOffsets } = (0,_context_MarkerContext__WEBPACK_IMPORTED_MODULE_2__.useMarkersContext)();\n    /**\n   * Helper to create a marker label element\n   */ const createMarkerLabel = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useTowerToMarker.useCallback[createMarkerLabel]\": (index, markerType)=>{\n            const el = document.createElement('div');\n            el.className = 'marker-label';\n            el.textContent = `${index + 1}`;\n            // Style the label based on marker type\n            el.style.cssText = `\n      position: absolute;\n      bottom: 0;\n      right: -5px;\n      width: 16px;\n      height: 16px;\n      background-color: white;\n      color: black;\n      border-radius: 50%;\n      text-align: center;\n      font-size: 10px;\n      font-weight: bold;\n      line-height: 16px;\n      border: 1px solid ${markerType === 'gcs' ? 'blue' : markerType === 'observer' ? 'green' : 'red'};\n    `;\n            return el;\n        }\n    }[\"useTowerToMarker.useCallback[createMarkerLabel]\"], []);\n    /**\n   * Query terrain elevation - matches the pattern in useMarkers\n   * This is crucial for consistency with other markers\n   */ const queryTerrainElevation = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useTowerToMarker.useCallback[queryTerrainElevation]\": async (coordinates, retryCount = 3)=>{\n            if (!map) {\n                throw new Error(\"Map not initialized\");\n            }\n            try {\n                const elevation = map.queryTerrainElevation(coordinates);\n                if (elevation !== null && elevation !== undefined) {\n                    return elevation;\n                }\n                throw new Error(\"Invalid elevation value\");\n            } catch (error) {\n                console.warn(\"Primary terrain query failed, trying fallback:\", error);\n                if (retryCount > 0) {\n                    try {\n                        const fallbackElevation = await fetchTerrainElevation(coordinates[0], coordinates[1]);\n                        return fallbackElevation;\n                    } catch (fallbackError) {\n                        if (retryCount > 1) {\n                            console.warn(\"Fallback failed, retrying:\", fallbackError);\n                            return queryTerrainElevation(coordinates, retryCount - 1);\n                        }\n                        throw fallbackError;\n                    }\n                }\n                throw error;\n            }\n        }\n    }[\"useTowerToMarker.useCallback[queryTerrainElevation]\"], [\n        map\n    ]);\n    /**\n   * Fallback function for elevation queries - copied from useMarkers\n   */ const fetchTerrainElevation = async (lng, lat)=>{\n        try {\n            const tileSize = 512;\n            const zoom = 15;\n            const scale = Math.pow(2, zoom);\n            const latRad = lat * Math.PI / 180;\n            const tileX = Math.floor((lng + 180) / 360 * scale);\n            const tileY = Math.floor((1 - Math.log(Math.tan(latRad) + 1 / Math.cos(latRad)) / Math.PI) / 2 * scale);\n            const pixelX = Math.floor(((lng + 180) / 360 * scale - tileX) * tileSize);\n            const pixelY = Math.floor(((1 - Math.log(Math.tan(latRad) + 1 / Math.cos(latRad)) / Math.PI) / 2 * scale - tileY) * tileSize);\n            const tileURL = `https://api.mapbox.com/v4/mapbox.terrain-rgb/${zoom}/${tileX}/${tileY}@2x.pngraw?access_token=${\"pk.eyJ1IjoiaW50ZWxhZXJvIiwiYSI6ImNtM2EwZzY3ODB5bDgyam9yOTZ1ajE2YWsifQ.b9w33legWjEDzezOZx1N4g\"}`;\n            const response = await fetch(tileURL);\n            const blob = await response.blob();\n            const imageBitmap = await createImageBitmap(blob);\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = tileSize;\n            canvas.height = tileSize;\n            const context = canvas.getContext(\"2d\");\n            if (!context) throw new Error(\"Failed to create canvas context\");\n            context.drawImage(imageBitmap, 0, 0);\n            const imageData = context.getImageData(0, 0, tileSize, tileSize);\n            const idx = (pixelY * tileSize + pixelX) * 4;\n            const [r, g, b] = [\n                imageData.data[idx],\n                imageData.data[idx + 1],\n                imageData.data[idx + 2]\n            ];\n            return -10000 + (r * 256 * 256 + g * 256 + b) * 0.1;\n        } catch (error) {\n            console.error(\"RGB elevation error:\", error);\n            return 0;\n        }\n    };\n    /**\n   * Converts a tower to a repeater marker\n   */ const convertTowerToRepeater = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useTowerToMarker.useCallback[convertTowerToRepeater]\": async (towerData)=>{\n            if (!map || !terrainLoaded) {\n                console.error('Map or terrain not initialized');\n                return false;\n            }\n            console.log('Converting tower to repeater:', towerData);\n            try {\n                // Query terrain elevation at tower location - this gets the map's ground elevation\n                const mapElevation = await queryTerrainElevation([\n                    towerData.lng,\n                    towerData.lat\n                ]);\n                console.log('Map terrain elevation at tower location:', mapElevation);\n                // Create location data from tower using the map's elevation\n                const location = {\n                    lng: towerData.lng,\n                    lat: towerData.lat,\n                    elevation: mapElevation\n                };\n                // Create tower metadata\n                const towerMetadata = {\n                    originalTowerId: towerData.id,\n                    carrier: towerData.carrier,\n                    technology: towerData.technology,\n                    frequency: towerData.frequency,\n                    height: towerData.height,\n                    azimuth: towerData.azimuth,\n                    tilt: towerData.tilt,\n                    eirp: towerData.eirp,\n                    eirp_unit: towerData.eirp_unit\n                };\n                // Add marker to context and check result for premium tier restrictions\n                const result = addMarker('repeater', location, towerMetadata);\n                // If failed due to premium tier restrictions, show error and return\n                if (!result.success) {\n                    console.error(`Failed to add repeater marker:`, result.error);\n                    return false;\n                }\n                // Get the marker ID\n                const markerId = result.markerId;\n                // Get markers of this type to determine index\n                const sameTypeMarkers = markers.filter({\n                    \"useTowerToMarker.useCallback[convertTowerToRepeater].sameTypeMarkers\": (m)=>m.type === 'repeater'\n                }[\"useTowerToMarker.useCallback[convertTowerToRepeater].sameTypeMarkers\"]);\n                const markerIndex = sameTypeMarkers.length - 1;\n                const hasMultiple = sameTypeMarkers.length > 1;\n                // Use the tower height as elevation offset\n                const elevationOffset = towerData.height || defaultElevationOffsets.repeater;\n                updateMarker(markerId, {\n                    elevationOffset\n                });\n                // Create the visual Mapbox marker with red color (for repeater)\n                const newMarker = new (mapbox_gl__WEBPACK_IMPORTED_MODULE_1___default().Marker)({\n                    color: \"red\",\n                    draggable: true,\n                    // Force high z-index to stay on top of other layers\n                    offset: [\n                        0,\n                        0\n                    ]\n                }).setLngLat([\n                    location.lng,\n                    location.lat\n                ]).addTo(map);\n                // Set high z-index to ensure visibility\n                const markerElement = newMarker.getElement();\n                markerElement.style.zIndex = '1000';\n                // Add label if multiple markers exist\n                if (hasMultiple) {\n                    // Create label element\n                    const label = createMarkerLabel(markerIndex, 'repeater');\n                    // Append label to marker element\n                    markerElement.appendChild(label);\n                }\n                // Create and set popup\n                const popup = (0,_components_Map_Utils_markerPopup__WEBPACK_IMPORTED_MODULE_3__.createMarkerPopup)('repeater', location.elevation, elevationOffset, {\n                    \"useTowerToMarker.useCallback[convertTowerToRepeater].popup\": ()=>{\n                        // Delete marker callback\n                        newMarker.remove();\n                        removeMarker(markerId);\n                    }\n                }[\"useTowerToMarker.useCallback[convertTowerToRepeater].popup\"], markerId, markerIndex, hasMultiple);\n                newMarker.setPopup(popup).togglePopup();\n                // Handle marker drag events - same as in useMarkers\n                newMarker.on(\"dragend\", {\n                    \"useTowerToMarker.useCallback[convertTowerToRepeater]\": async ()=>{\n                        const lngLat = newMarker.getLngLat();\n                        try {\n                            // Query new elevation at drag position\n                            const newElevation = await queryTerrainElevation([\n                                lngLat.lng,\n                                lngLat.lat\n                            ]);\n                            const updatedLocation = {\n                                lng: lngLat.lng,\n                                lat: lngLat.lat,\n                                elevation: newElevation\n                            };\n                            // Update marker in context\n                            updateMarker(markerId, {\n                                location: updatedLocation\n                            });\n                            // Get current markers of same type for indexing\n                            const currentSameTypeMarkers = markers.filter({\n                                \"useTowerToMarker.useCallback[convertTowerToRepeater].currentSameTypeMarkers\": (m)=>m.type === 'repeater'\n                            }[\"useTowerToMarker.useCallback[convertTowerToRepeater].currentSameTypeMarkers\"]);\n                            const currentMarkerIndex = currentSameTypeMarkers.findIndex({\n                                \"useTowerToMarker.useCallback[convertTowerToRepeater].currentMarkerIndex\": (m)=>m.id === markerId\n                            }[\"useTowerToMarker.useCallback[convertTowerToRepeater].currentMarkerIndex\"]);\n                            const hasMultipleNow = currentSameTypeMarkers.length > 1;\n                            // Recreate popup with updated elevation\n                            const newPopup = (0,_components_Map_Utils_markerPopup__WEBPACK_IMPORTED_MODULE_3__.createMarkerPopup)('repeater', newElevation, elevationOffset, {\n                                \"useTowerToMarker.useCallback[convertTowerToRepeater].newPopup\": ()=>{\n                                    newMarker.remove();\n                                    removeMarker(markerId);\n                                }\n                            }[\"useTowerToMarker.useCallback[convertTowerToRepeater].newPopup\"], markerId, currentMarkerIndex, hasMultipleNow);\n                            newMarker.setPopup(newPopup).togglePopup();\n                        } catch (error) {\n                            console.error(`Error updating repeater elevation:`, error);\n                        }\n                    }\n                }[\"useTowerToMarker.useCallback[convertTowerToRepeater]\"]);\n                // Track conversion event\n                (0,_components_tracking_tracking__WEBPACK_IMPORTED_MODULE_4__.trackEventWithForm)('convert_tower_to_repeater', {\n                    carrier: towerData.carrier,\n                    technology: towerData.technology,\n                    action: 'single_conversion'\n                });\n                console.log('Successfully created repeater from tower:', markerId);\n                return true;\n            } catch (error) {\n                console.error('Error converting tower to repeater:', error);\n                return false;\n            }\n        }\n    }[\"useTowerToMarker.useCallback[convertTowerToRepeater]\"], [\n        map,\n        terrainLoaded,\n        addMarker,\n        updateMarker,\n        removeMarker,\n        markers,\n        defaultElevationOffsets,\n        createMarkerLabel,\n        queryTerrainElevation\n    ]);\n    /**\n   * Listen for tower conversion events dispatched from tower popups\n   */ (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useTowerToMarker.useEffect\": ()=>{\n            const handleTowerConversion = {\n                \"useTowerToMarker.useEffect.handleTowerConversion\": (event)=>{\n                    // Process conversion request\n                    convertTowerToRepeater(event.detail);\n                }\n            }[\"useTowerToMarker.useEffect.handleTowerConversion\"];\n            // Add event listener\n            window.addEventListener('tower:createRepeater', handleTowerConversion);\n            // Cleanup\n            return ({\n                \"useTowerToMarker.useEffect\": ()=>{\n                    window.removeEventListener('tower:createRepeater', handleTowerConversion);\n                }\n            })[\"useTowerToMarker.useEffect\"];\n        }\n    }[\"useTowerToMarker.useEffect\"], [\n        convertTowerToRepeater\n    ]);\n    return {\n        convertTowerToRepeater\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/hooks/useTowerToMarker.ts\n");

/***/ }),

/***/ "(ssr)/./src/app/hooks/useTreeHeights.ts":
/*!*****************************************!*\
  !*** ./src/app/hooks/useTreeHeights.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useTreeHeights: () => (/* binding */ useTreeHeights)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _context_AreaOfOpsContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../context/AreaOfOpsContext */ \"(ssr)/./src/app/context/AreaOfOpsContext.tsx\");\n/* harmony import */ var _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../services/LayerManager */ \"(ssr)/./src/app/services/LayerManager.ts\");\n/* harmony import */ var _services_TreeHeightSystem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/TreeHeightSystem */ \"(ssr)/./src/app/services/TreeHeightSystem.tsx\");\n/* harmony import */ var _services_TreeHeightCanvas__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../services/TreeHeightCanvas */ \"(ssr)/./src/app/services/TreeHeightCanvas.tsx\");\n/**\n * useTreeHeights.ts\n * \n * Purpose:\n * React hook that integrates the tree height visualization system with Mapbox.\n * Uses LAZY INITIALIZATION - systems only initialize when user first activates them.\n * \n * This hook:\n * - Manages tree height visibility state\n * - Provides toggle functionality for UI components\n * - Handles click interactions with subtle tooltip\n * - Coordinates with Area of Operations boundaries\n * - Manages canvas lifecycle and cleanup\n * - Integrates with LayerManager for state tracking\n * \n * Related Files:\n * - TreeHeightSystem.ts: Core rendering and tile management\n * - TreeHeightCanvas.ts: Canvas DOM management\n * - AreaOfOpsContext.tsx: AO boundary integration\n * - LayerManager.ts: Layer state management\n */ \n\n\n\n\nfunction useTreeHeights(map) {\n    // State management\n    const treeHeightVisibleRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    const isRenderingRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    const renderTimeoutRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const [isInitialized, setIsInitialized] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    // Lazy initialization refs - systems only created when needed\n    const systemsRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({\n        canvas: null,\n        systemInitialized: false\n    });\n    const { aoGeometry } = (0,_context_AreaOfOpsContext__WEBPACK_IMPORTED_MODULE_1__.useAreaOfOpsContext)();\n    // Check if point is within Area of Operations\n    const isPointInAO = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useTreeHeights.useCallback[isPointInAO]\": (lng, lat)=>{\n            if (!aoGeometry || !aoGeometry.features || aoGeometry.features.length === 0) {\n                return true;\n            }\n            try {\n                let minLng = Infinity, maxLng = -Infinity;\n                let minLat = Infinity, maxLat = -Infinity;\n                aoGeometry.features.forEach({\n                    \"useTreeHeights.useCallback[isPointInAO]\": (feature)=>{\n                        if (feature.geometry.type === 'Polygon') {\n                            feature.geometry.coordinates[0].forEach({\n                                \"useTreeHeights.useCallback[isPointInAO]\": (coord)=>{\n                                    minLng = Math.min(minLng, coord[0]);\n                                    maxLng = Math.max(maxLng, coord[0]);\n                                    minLat = Math.min(minLat, coord[1]);\n                                    maxLat = Math.max(maxLat, coord[1]);\n                                }\n                            }[\"useTreeHeights.useCallback[isPointInAO]\"]);\n                        }\n                    }\n                }[\"useTreeHeights.useCallback[isPointInAO]\"]);\n                return lng >= minLng && lng <= maxLng && lat >= minLat && lat <= maxLat;\n            } catch (error) {\n                console.warn('Error checking point in AO:', error);\n                return true;\n            }\n        }\n    }[\"useTreeHeights.useCallback[isPointInAO]\"], [\n        aoGeometry\n    ]);\n    // Lazy initialization - only create systems when first needed\n    const ensureSystemsInitialized = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useTreeHeights.useCallback[ensureSystemsInitialized]\": ()=>{\n            if (!map || systemsRef.current.systemInitialized) return;\n            _services_TreeHeightSystem__WEBPACK_IMPORTED_MODULE_3__.treeHeightSystem.initialize(map);\n            systemsRef.current.canvas = new _services_TreeHeightCanvas__WEBPACK_IMPORTED_MODULE_4__.TreeHeightCanvas(map);\n            systemsRef.current.systemInitialized = true;\n        }\n    }[\"useTreeHeights.useCallback[ensureSystemsInitialized]\"], [\n        map\n    ]);\n    // Debounced render function\n    const triggerRender = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useTreeHeights.useCallback[triggerRender]\": ()=>{\n            if (!map || !treeHeightVisibleRef.current || isRenderingRef.current) return;\n            if (renderTimeoutRef.current) {\n                clearTimeout(renderTimeoutRef.current);\n            }\n            renderTimeoutRef.current = setTimeout({\n                \"useTreeHeights.useCallback[triggerRender]\": async ()=>{\n                    if (!treeHeightVisibleRef.current || isRenderingRef.current) return;\n                    isRenderingRef.current = true;\n                    try {\n                        await _services_TreeHeightSystem__WEBPACK_IMPORTED_MODULE_3__.treeHeightSystem.renderTreeHeights({\n                            isPointInAO,\n                            onProgress: {\n                                \"useTreeHeights.useCallback[triggerRender]\": (progress)=>{\n                                // Optional: Log progress for debugging\n                                }\n                            }[\"useTreeHeights.useCallback[triggerRender]\"]\n                        });\n                    } catch (error) {\n                        console.error(\"Tree height render error:\", error);\n                    } finally{\n                        isRenderingRef.current = false;\n                    }\n                }\n            }[\"useTreeHeights.useCallback[triggerRender]\"], 300);\n        }\n    }[\"useTreeHeights.useCallback[triggerRender]\"], [\n        map,\n        isPointInAO\n    ]);\n    // Lightweight initialization - only register layer capability\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useTreeHeights.useEffect\": ()=>{\n            if (!map) return;\n            _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.layerManager.registerLayer(\"tree-height-raster\", false);\n            setIsInitialized(true);\n            return ({\n                \"useTreeHeights.useEffect\": ()=>{\n                    if (systemsRef.current.canvas) {\n                        systemsRef.current.canvas.destroy();\n                        systemsRef.current.canvas = null;\n                    }\n                    if (systemsRef.current.systemInitialized) {\n                        _services_TreeHeightSystem__WEBPACK_IMPORTED_MODULE_3__.treeHeightSystem.cleanup();\n                        systemsRef.current.systemInitialized = false;\n                    }\n                    setIsInitialized(false);\n                }\n            })[\"useTreeHeights.useEffect\"];\n        }\n    }[\"useTreeHeights.useEffect\"], [\n        map\n    ]);\n    // Toggle tree heights visibility\n    const toggleTreeHeights = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useTreeHeights.useCallback[toggleTreeHeights]\": ()=>{\n            if (!map) {\n                console.warn(\"Map not available\");\n                return;\n            }\n            // Lazy initialization on first use\n            ensureSystemsInitialized();\n            if (!systemsRef.current.canvas) {\n                console.error(\"Failed to initialize tree height systems\");\n                return;\n            }\n            treeHeightVisibleRef.current = !treeHeightVisibleRef.current;\n            const newState = treeHeightVisibleRef.current;\n            systemsRef.current.canvas.setVisible(newState);\n            _services_LayerManager__WEBPACK_IMPORTED_MODULE_2__.layerManager.setLayerVisibility(\"tree-height-raster\", newState);\n            if (newState) {\n                triggerRender();\n            } else {\n                systemsRef.current.canvas.clear();\n            }\n        }\n    }[\"useTreeHeights.useCallback[toggleTreeHeights]\"], [\n        map,\n        ensureSystemsInitialized,\n        triggerRender\n    ]);\n    // Helper function to show subtle tooltip\n    const showSubtleTooltip = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useTreeHeights.useCallback[showSubtleTooltip]\": (content)=>{\n            if (!map) return;\n            const mapContainer = map.getContainer();\n            // Remove existing tooltip\n            const existingTooltip = mapContainer.querySelector('[data-tree-tooltip]');\n            if (existingTooltip) {\n                existingTooltip.remove();\n            }\n            // Create subtle corner tooltip\n            const tooltip = document.createElement('div');\n            tooltip.setAttribute('data-tree-tooltip', 'true');\n            tooltip.innerHTML = content;\n            Object.assign(tooltip.style, {\n                position: 'absolute',\n                bottom: '20px',\n                right: '20px',\n                background: 'rgba(0, 0, 0, 0.8)',\n                color: 'white',\n                padding: '8px 12px',\n                borderRadius: '6px',\n                fontSize: '12px',\n                fontFamily: 'system-ui, sans-serif',\n                zIndex: '1000',\n                maxWidth: '200px',\n                boxShadow: '0 2px 8px rgba(0,0,0,0.3)',\n                pointerEvents: 'none',\n                transition: 'opacity 0.2s ease',\n                opacity: '0'\n            });\n            mapContainer.appendChild(tooltip);\n            // Fade in\n            requestAnimationFrame({\n                \"useTreeHeights.useCallback[showSubtleTooltip]\": ()=>{\n                    tooltip.style.opacity = '1';\n                }\n            }[\"useTreeHeights.useCallback[showSubtleTooltip]\"]);\n            // Auto-dismiss after 3 seconds\n            setTimeout({\n                \"useTreeHeights.useCallback[showSubtleTooltip]\": ()=>{\n                    if (tooltip.parentNode) {\n                        tooltip.style.opacity = '0';\n                        setTimeout({\n                            \"useTreeHeights.useCallback[showSubtleTooltip]\": ()=>{\n                                if (tooltip.parentNode) {\n                                    tooltip.parentNode.removeChild(tooltip);\n                                }\n                            }\n                        }[\"useTreeHeights.useCallback[showSubtleTooltip]\"], 200);\n                    }\n                }\n            }[\"useTreeHeights.useCallback[showSubtleTooltip]\"], 3000);\n        }\n    }[\"useTreeHeights.useCallback[showSubtleTooltip]\"], [\n        map\n    ]);\n    // Manual re-render function\n    const rerenderTreeHeights = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useTreeHeights.useCallback[rerenderTreeHeights]\": ()=>{\n            if (treeHeightVisibleRef.current) {\n                triggerRender();\n            }\n        }\n    }[\"useTreeHeights.useCallback[rerenderTreeHeights]\"], [\n        triggerRender\n    ]);\n    // Handle tree height clicks\n    const handleTreeHeightClick = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useTreeHeights.useCallback[handleTreeHeightClick]\": (e)=>{\n            if (!map || !treeHeightVisibleRef.current || !systemsRef.current.canvas) return;\n            try {\n                const heightValue = systemsRef.current.canvas.getHeightAtPoint(e.point.x, e.point.y);\n                const inAO = isPointInAO(e.lngLat.lng, e.lngLat.lat);\n                let tooltipContent;\n                if (!inAO) {\n                    tooltipContent = `\n          <div>\n            <strong>🌲 Outside Area</strong><br/>\n            ${e.lngLat.lng.toFixed(4)}, ${e.lngLat.lat.toFixed(4)}\n          </div>\n        `;\n                } else if (heightValue !== null && heightValue > 0) {\n                    tooltipContent = `\n          <div>\n            <strong>🌲 Tree Height: ${heightValue}m</strong><br/>\n            ${e.lngLat.lng.toFixed(4)}, ${e.lngLat.lat.toFixed(4)}\n          </div>\n        `;\n                } else {\n                    tooltipContent = `\n          <div>\n            <strong>🌲 No Trees</strong><br/>\n            ${e.lngLat.lng.toFixed(4)}, ${e.lngLat.lat.toFixed(4)}\n          </div>\n        `;\n                }\n                showSubtleTooltip(tooltipContent);\n            } catch (clickError) {\n                console.error('Tree height click error:', clickError);\n                showSubtleTooltip(`\n        <div>\n          <strong>🌲 Error</strong><br/>\n          ${clickError instanceof Error ? clickError.message : 'Unknown error'}\n        </div>\n      `);\n            }\n        }\n    }[\"useTreeHeights.useCallback[handleTreeHeightClick]\"], [\n        map,\n        isPointInAO,\n        showSubtleTooltip\n    ]);\n    // Cleanup function\n    const cleanup = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useTreeHeights.useCallback[cleanup]\": ()=>{\n            if (renderTimeoutRef.current) {\n                clearTimeout(renderTimeoutRef.current);\n                renderTimeoutRef.current = null;\n            }\n            treeHeightVisibleRef.current = false;\n            isRenderingRef.current = false;\n            if (systemsRef.current.canvas) {\n                systemsRef.current.canvas.destroy();\n                systemsRef.current.canvas = null;\n            }\n            // Clean up tooltip\n            const mapContainer = map?.getContainer();\n            if (mapContainer) {\n                const tooltip = mapContainer.querySelector('[data-tree-tooltip]');\n                if (tooltip) {\n                    tooltip.remove();\n                }\n            }\n            if (systemsRef.current.systemInitialized) {\n                _services_TreeHeightSystem__WEBPACK_IMPORTED_MODULE_3__.treeHeightSystem.cleanup();\n                systemsRef.current.systemInitialized = false;\n            }\n        }\n    }[\"useTreeHeights.useCallback[cleanup]\"], [\n        map\n    ]);\n    return {\n        toggleTreeHeights,\n        rerenderTreeHeights,\n        handleTreeHeightClick: map ? handleTreeHeightClick : null,\n        cleanup,\n        isInitialized\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/hooks/useTreeHeights.ts\n");

/***/ }),

/***/ "(ssr)/./src/app/page.tsx":
/*!**************************!*\
  !*** ./src/app/page.tsx ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Home)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_Map__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/Map */ \"(ssr)/./src/app/components/Map/index.tsx\");\n/* harmony import */ var _context_FlightPlanContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./context/FlightPlanContext */ \"(ssr)/./src/app/context/FlightPlanContext.tsx\");\n/* harmony import */ var _context_AreaOfOpsContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./context/AreaOfOpsContext */ \"(ssr)/./src/app/context/AreaOfOpsContext.tsx\");\n/* harmony import */ var _context_MarkerContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./context/MarkerContext */ \"(ssr)/./src/app/context/MarkerContext.tsx\");\n/* harmony import */ var _context_LOSAnalysisContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./context/LOSAnalysisContext */ \"(ssr)/./src/app/context/LOSAnalysisContext.tsx\");\n/* harmony import */ var _context_FlightConfigurationContext__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./context/FlightConfigurationContext */ \"(ssr)/./src/app/context/FlightConfigurationContext.tsx\");\n/* harmony import */ var _context_ChecklistContext__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./context/ChecklistContext */ \"(ssr)/./src/app/context/ChecklistContext.tsx\");\n/* harmony import */ var _components_UI_Card__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./components/UI/Card */ \"(ssr)/./src/app/components/UI/Card.tsx\");\n/* harmony import */ var _context_ObstacleAnalysisContext__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./context/ObstacleAnalysisContext */ \"(ssr)/./src/app/context/ObstacleAnalysisContext.tsx\");\n/* harmony import */ var _components_UI_MapSidePanel__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./components/UI/MapSidePanel */ \"(ssr)/./src/app/components/UI/MapSidePanel.tsx\");\n/* harmony import */ var _barrel_optimize_names_Battery_Loader2_MapPin_Mountain_Radio_Search_lucide_react__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! __barrel_optimize__?names=Battery,Loader2,MapPin,Mountain,Radio,Search!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/loader-circle.js\");\n/* harmony import */ var _barrel_optimize_names_Battery_Loader2_MapPin_Mountain_Radio_Search_lucide_react__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! __barrel_optimize__?names=Battery,Loader2,MapPin,Mountain,Radio,Search!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/map-pin.js\");\n/* harmony import */ var _barrel_optimize_names_Battery_Loader2_MapPin_Mountain_Radio_Search_lucide_react__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! __barrel_optimize__?names=Battery,Loader2,MapPin,Mountain,Radio,Search!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/search.js\");\n/* harmony import */ var _barrel_optimize_names_Battery_Loader2_MapPin_Mountain_Radio_Search_lucide_react__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! __barrel_optimize__?names=Battery,Loader2,MapPin,Mountain,Radio,Search!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/battery.js\");\n/* harmony import */ var _barrel_optimize_names_Battery_Loader2_MapPin_Mountain_Radio_Search_lucide_react__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! __barrel_optimize__?names=Battery,Loader2,MapPin,Mountain,Radio,Search!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/radio.js\");\n/* harmony import */ var _barrel_optimize_names_Battery_Loader2_MapPin_Mountain_Radio_Search_lucide_react__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! __barrel_optimize__?names=Battery,Loader2,MapPin,Mountain,Radio,Search!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/mountain.js\");\n/* harmony import */ var _components_tracking_tracking__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./components/tracking/tracking */ \"(ssr)/./src/app/components/tracking/tracking.js\");\n/* harmony import */ var _context_mapcontext__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./context/mapcontext */ \"(ssr)/./src/app/context/mapcontext.tsx\");\n/* harmony import */ var _context_AnalysisControllerContext__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./context/AnalysisControllerContext */ \"(ssr)/./src/app/context/AnalysisControllerContext.tsx\");\n/* harmony import */ var mapbox_gl_dist_mapbox_gl_css__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! mapbox-gl/dist/mapbox-gl.css */ \"(ssr)/./node_modules/mapbox-gl/dist/mapbox-gl.css\");\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! next/image */ \"(ssr)/./node_modules/next/dist/api/image.js\");\n/* harmony import */ var _context_PremiumContext__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./context/PremiumContext */ \"(ssr)/./src/app/context/PremiumContext.tsx\");\n/**\n * page.tsx - OPTIMIZED VERSION WITH LAZY LOADING\n * \n * Purpose:\n * Main entry point for the application, orchestrating the layout and state management\n * for map, analysis panels, and verification tools. Wraps content with necessary providers.\n * \n * Optimizations:\n * - Lazy loaded heavy analysis components to reduce initial bundle size\n * - Lazy loaded modal components that aren't immediately needed\n * - Added Suspense boundaries with loading states\n * - Kept core map and context providers in main bundle for immediate availability\n */ /* __next_internal_client_entry_do_not_use__ default auto */ \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//payment and premium access\n\n// ========================================\n// LAZY LOADED COMPONENTS\n// ========================================\n// Heavy analysis components - only loaded when panels are opened\nconst ObstacleAnalysisDashboard = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.lazy)(()=>Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/lucide-react\"), __webpack_require__.e(\"_ssr_src_app_components_Analyses_ObstacleAnalysis_TerrainAnalysisDashboard_tsx\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./components/Analyses/ObstacleAnalysis/TerrainAnalysisDashboard */ \"(ssr)/./src/app/components/Analyses/ObstacleAnalysis/TerrainAnalysisDashboard.tsx\")));\nconst AnalysisDashboard = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.lazy)(()=>Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/lucide-react\"), __webpack_require__.e(\"vendor-chunks/chart.js\"), __webpack_require__.e(\"vendor-chunks/@kurkle\"), __webpack_require__.e(\"vendor-chunks/react-chartjs-2\"), __webpack_require__.e(\"_ssr_src_app_components_Analyses_LOSAnalyses_UI_VisibilityAnalysisDashboard_tsx\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./components/Analyses/LOSAnalyses/UI/VisibilityAnalysisDashboard */ \"(ssr)/./src/app/components/Analyses/LOSAnalyses/UI/VisibilityAnalysisDashboard.tsx\")));\nconst Calculator = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.lazy)(()=>__webpack_require__.e(/*! import() */ \"_ssr_src_app_components_Calculator_tsx\").then(__webpack_require__.bind(__webpack_require__, /*! ./components/Calculator */ \"(ssr)/./src/app/components/Calculator.tsx\")));\n// Modal/overlay components - only loaded when needed\nconst AnalysisWizard = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.lazy)(()=>Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/lucide-react\"), __webpack_require__.e(\"vendor-chunks/next\"), __webpack_require__.e(\"vendor-chunks/file-selector\"), __webpack_require__.e(\"vendor-chunks/react-dropzone\"), __webpack_require__.e(\"vendor-chunks/prop-types\"), __webpack_require__.e(\"vendor-chunks/tslib\"), __webpack_require__.e(\"vendor-chunks/react-is\"), __webpack_require__.e(\"vendor-chunks/object-assign\"), __webpack_require__.e(\"vendor-chunks/attr-accept\"), __webpack_require__.e(\"vendor-chunks/pako\"), __webpack_require__.e(\"vendor-chunks/jszip\"), __webpack_require__.e(\"vendor-chunks/@xmldom\"), __webpack_require__.e(\"vendor-chunks/@mapbox\"), __webpack_require__.e(\"vendor-chunks/lie\"), __webpack_require__.e(\"vendor-chunks/core-util-is\"), __webpack_require__.e(\"vendor-chunks/immediate\"), __webpack_require__.e(\"vendor-chunks/process-nextick-args\"), __webpack_require__.e(\"vendor-chunks/inherits\"), __webpack_require__.e(\"vendor-chunks/isarray\"), __webpack_require__.e(\"vendor-chunks/util-deprecate\"), __webpack_require__.e(\"_ssr_src_app_components_AnalysisWizard_tsx\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./components/AnalysisWizard */ \"(ssr)/./src/app/components/AnalysisWizard.tsx\")));\nconst FlightPlanUploader = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.lazy)(()=>Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/lucide-react\"), __webpack_require__.e(\"vendor-chunks/next\"), __webpack_require__.e(\"vendor-chunks/file-selector\"), __webpack_require__.e(\"vendor-chunks/react-dropzone\"), __webpack_require__.e(\"vendor-chunks/prop-types\"), __webpack_require__.e(\"vendor-chunks/tslib\"), __webpack_require__.e(\"vendor-chunks/react-is\"), __webpack_require__.e(\"vendor-chunks/object-assign\"), __webpack_require__.e(\"vendor-chunks/attr-accept\"), __webpack_require__.e(\"vendor-chunks/pako\"), __webpack_require__.e(\"vendor-chunks/jszip\"), __webpack_require__.e(\"vendor-chunks/@xmldom\"), __webpack_require__.e(\"vendor-chunks/@mapbox\"), __webpack_require__.e(\"vendor-chunks/lie\"), __webpack_require__.e(\"vendor-chunks/core-util-is\"), __webpack_require__.e(\"vendor-chunks/immediate\"), __webpack_require__.e(\"vendor-chunks/process-nextick-args\"), __webpack_require__.e(\"vendor-chunks/inherits\"), __webpack_require__.e(\"vendor-chunks/isarray\"), __webpack_require__.e(\"vendor-chunks/util-deprecate\"), __webpack_require__.e(\"_ssr_src_app_components_FlightPlanUploader_tsx\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./components/FlightPlanUploader */ \"(ssr)/./src/app/components/FlightPlanUploader.tsx\")));\nconst AreaOpsUploader = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.lazy)(()=>Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/lucide-react\"), __webpack_require__.e(\"vendor-chunks/file-selector\"), __webpack_require__.e(\"vendor-chunks/react-dropzone\"), __webpack_require__.e(\"vendor-chunks/prop-types\"), __webpack_require__.e(\"vendor-chunks/tslib\"), __webpack_require__.e(\"vendor-chunks/react-is\"), __webpack_require__.e(\"vendor-chunks/object-assign\"), __webpack_require__.e(\"vendor-chunks/attr-accept\"), __webpack_require__.e(\"_ssr_src_app_components_AO_AreaOpsUploader_tsx\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./components/AO/AreaOpsUploader */ \"(ssr)/./src/app/components/AO/AreaOpsUploader.tsx\")));\nconst UpgradeModal = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.lazy)(()=>Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/lucide-react\"), __webpack_require__.e(\"_ssr_src_app_components_UI_UpgradeModal_tsx\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./components/UI/UpgradeModal */ \"(ssr)/./src/app/components/UI/UpgradeModal.tsx\")));\nconst MarkerLocationsModal = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.lazy)(()=>Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/lucide-react\"), __webpack_require__.e(\"_ssr_src_app_components_UI_MarkerLocationsModal_tsx\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./components/UI/MarkerLocationsModal */ \"(ssr)/./src/app/components/UI/MarkerLocationsModal.tsx\")));\n// Conditional UI components\nconst ChecklistComponent = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.lazy)(()=>Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/lucide-react\"), __webpack_require__.e(\"_ssr_src_app_components_ChecklistComponent_tsx\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./components/ChecklistComponent */ \"(ssr)/./src/app/components/ChecklistComponent.tsx\")));\nconst WelcomeMessage = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.lazy)(()=>__webpack_require__.e(/*! import() */ \"_ssr_src_app_components_WelcomeMessage_tsx\").then(__webpack_require__.bind(__webpack_require__, /*! ./components/WelcomeMessage */ \"(ssr)/./src/app/components/WelcomeMessage.tsx\")));\nconst MapSelectionPanel = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.lazy)(()=>Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/lucide-react\"), __webpack_require__.e(\"_ssr_src_app_components_AO_MapSelectionPanel_tsx\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./components/AO/MapSelectionPanel */ \"(ssr)/./src/app/components/AO/MapSelectionPanel.tsx\")));\nconst ToolsDashboard = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.lazy)(()=>Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/lucide-react\"), __webpack_require__.e(\"vendor-chunks/next\"), __webpack_require__.e(\"_ssr_src_app_components_VerificationToolbar_ToolsDashboard_tsx\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./components/VerificationToolbar/ToolsDashboard */ \"(ssr)/./src/app/components/VerificationToolbar/ToolsDashboard.tsx\")));\n// Heavy sub-components within ToolsDashboard that can be preloaded\nconst CompactDisclaimerWidget = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.lazy)(()=>Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/lucide-react\"), __webpack_require__.e(\"_ssr_src_app_components_CompactDisclaimerWidget_tsx\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./components/CompactDisclaimerWidget */ \"(ssr)/./src/app/components/CompactDisclaimerWidget.tsx\")));\n// ========================================\n// LOADING COMPONENTS\n// ========================================\n/**\n * Loading spinner for analysis panels\n */ const AnalysisLoadingSpinner = ()=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex items-center justify-center p-8\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex flex-col items-center gap-2\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Battery_Loader2_MapPin_Mountain_Radio_Search_lucide_react__WEBPACK_IMPORTED_MODULE_18__[\"default\"], {\n                    className: \"w-6 h-6 animate-spin text-blue-600\"\n                }, void 0, false, {\n                    fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                    lineNumber: 75,\n                    columnNumber: 7\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                    className: \"text-sm text-gray-600\",\n                    children: \"Loading analysis tools...\"\n                }, void 0, false, {\n                    fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                    lineNumber: 76,\n                    columnNumber: 7\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n            lineNumber: 74,\n            columnNumber: 5\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n        lineNumber: 73,\n        columnNumber: 3\n    }, undefined);\n/**\n * Loading placeholder for modals\n */ const ModalLoadingPlaceholder = ()=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"fixed inset-0 bg-black/50 flex items-center justify-center z-50\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"bg-white p-4 rounded-lg\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Battery_Loader2_MapPin_Mountain_Radio_Search_lucide_react__WEBPACK_IMPORTED_MODULE_18__[\"default\"], {\n                className: \"w-6 h-6 animate-spin text-blue-600\"\n            }, void 0, false, {\n                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                lineNumber: 87,\n                columnNumber: 7\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n            lineNumber: 86,\n            columnNumber: 5\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n        lineNumber: 85,\n        columnNumber: 3\n    }, undefined);\n/**\n * Main content component for the home page, managing UI layout and uploader/wizard overlays\n */ const HomeContent = ()=>{\n    const [activePanel, setActivePanel] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [initialSection, setInitialSection] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [showUploader, setShowUploader] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showAreaOpsUploader, setShowAreaOpsUploader] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showWizard, setShowWizard] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showWelcomeMessage, setShowWelcomeMessage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [showChecklist, setShowChecklist] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const { flightPlan, setFlightPlan } = (0,_context_FlightPlanContext__WEBPACK_IMPORTED_MODULE_3__.useFlightPlanContext)();\n    const { aoGeometry } = (0,_context_AreaOfOpsContext__WEBPACK_IMPORTED_MODULE_4__.useAreaOfOpsContext)();\n    const { showMarkerLocationsModal, setShowMarkerLocationsModal } = (0,_context_AnalysisControllerContext__WEBPACK_IMPORTED_MODULE_14__.useAnalysisController)();\n    const [isMapSelectionMode, setIsMapSelectionMode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [mapSelectionMode, setMapSelectionMode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"map\");\n    /**\n   * Toggles the active analysis panel and sets initial section\n   * @param panel - The panel to toggle\n   * @param section - Optional section to expand in AnalysisDashboard\n   */ const togglePanel = (panel, section)=>{\n        setActivePanel((prev)=>prev === panel ? null : panel);\n        setInitialSection(panel === 'los' ? section || null : null);\n        (0,_components_tracking_tracking__WEBPACK_IMPORTED_MODULE_12__.trackEventWithForm)(\"toggle_analysis_panel\", {\n            panel,\n            section\n        });\n    };\n    /**\n   * Handles opening the Area of Operations uploader\n   */ const handleAreaOps = ()=>{\n        setShowAreaOpsUploader(true);\n        (0,_components_tracking_tracking__WEBPACK_IMPORTED_MODULE_12__.trackEventWithForm)('area_ops_uploader_opened', {});\n    };\n    /**\n   * Handles opening the wizard\n   */ const handleWizard = ()=>{\n        setShowWizard(true);\n        setShowWelcomeMessage(false);\n        (0,_components_tracking_tracking__WEBPACK_IMPORTED_MODULE_12__.trackEventWithForm)('wizard_opened', {});\n    };\n    /**\n   * Closes the checklist overlay\n   */ const handleCloseChecklist = ()=>{\n        setShowChecklist(false);\n    };\n    /**\n   * Effect to show checklist when wizard closes and upload is complete\n   */ (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"HomeContent.useEffect\": ()=>{\n            if ((flightPlan || aoGeometry) && !showWizard && !showUploader && !showAreaOpsUploader) {\n                setShowChecklist(true);\n            } else {\n                setShowChecklist(false);\n            }\n        }\n    }[\"HomeContent.useEffect\"], [\n        flightPlan,\n        aoGeometry,\n        showWizard,\n        showUploader,\n        showAreaOpsUploader\n    ]);\n    // Add handlers for map selection\n    /**\n   * Starts map selection mode\n   */ const handleStartMapSelection = (mode)=>{\n        setIsMapSelectionMode(true);\n        setMapSelectionMode(mode);\n        setShowWizard(false);\n        (0,_components_tracking_tracking__WEBPACK_IMPORTED_MODULE_12__.trackEventWithForm)('map_selection_started', {\n            mode\n        });\n    };\n    /**\n   * Completes map selection\n   */ const handleMapSelectionComplete = ()=>{\n        setIsMapSelectionMode(false);\n        (0,_components_tracking_tracking__WEBPACK_IMPORTED_MODULE_12__.trackEventWithForm)('map_selection_completed', {});\n    };\n    /**\n   * Cancels map selection\n   */ const handleMapSelectionCancel = ()=>{\n        setIsMapSelectionMode(false);\n        setShowWizard(true);\n        (0,_components_tracking_tracking__WEBPACK_IMPORTED_MODULE_12__.trackEventWithForm)('map_selection_cancelled', {});\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"min-h-screen flex flex-col bg-white overflow-x-hidden\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex-1 w-full h-full\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex flex-row h-full relative\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex-grow relative h-full\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"relative h-full rounded-r-lg overflow-hidden\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Map__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                                    activePanel: activePanel,\n                                    togglePanel: togglePanel,\n                                    flightPlan: flightPlan,\n                                    setShowUploader: setShowUploader\n                                }, void 0, false, {\n                                    fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                    lineNumber: 192,\n                                    columnNumber: 15\n                                }, undefined),\n                                !showUploader && !showAreaOpsUploader && !showWizard && showWelcomeMessage && !flightPlan && !aoGeometry && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"absolute inset-0 bg-black/50 flex items-center justify-center z-20 p-2\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react__WEBPACK_IMPORTED_MODULE_1__.Suspense, {\n                                        fallback: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ModalLoadingPlaceholder, {}, void 0, false, {\n                                            fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                            lineNumber: 201,\n                                            columnNumber: 39\n                                        }, void 0),\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(WelcomeMessage, {\n                                            onGetStarted: handleWizard,\n                                            onClose: ()=>setShowWelcomeMessage(false)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                            lineNumber: 202,\n                                            columnNumber: 21\n                                        }, undefined)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                        lineNumber: 201,\n                                        columnNumber: 19\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                    lineNumber: 200,\n                                    columnNumber: 17\n                                }, undefined),\n                                !showUploader && !showAreaOpsUploader && showWizard && !flightPlan && !aoGeometry && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"absolute inset-0 bg-black/50 flex items-start justify-center z-20 p-4 overflow-y-auto\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"bg-white p-2 rounded-lg shadow-lg w-full max-w-3xl\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"flex items-center mx-4 mt-4 gap-2\",\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_image__WEBPACK_IMPORTED_MODULE_16__[\"default\"], {\n                                                        src: \"/Logonobackgrnd.png\",\n                                                        alt: \"Intel.Aero Name Logo\",\n                                                        width: 60,\n                                                        height: 24,\n                                                        style: {\n                                                            objectFit: \"contain\"\n                                                        }\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                                        lineNumber: 214,\n                                                        columnNumber: 25\n                                                    }, undefined),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                                        className: \"text-xl font-semibold\",\n                                                        children: \"Start Here\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                                        lineNumber: 221,\n                                                        columnNumber: 23\n                                                    }, undefined)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                                lineNumber: 213,\n                                                columnNumber: 21\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react__WEBPACK_IMPORTED_MODULE_1__.Suspense, {\n                                                fallback: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AnalysisLoadingSpinner, {}, void 0, false, {\n                                                    fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                                    lineNumber: 224,\n                                                    columnNumber: 41\n                                                }, void 0),\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AnalysisWizard, {\n                                                    onClose: ()=>setShowWizard(false),\n                                                    onStartMapSelection: handleStartMapSelection,\n                                                    onShowAreaOpsUploader: ()=>setShowAreaOpsUploader(true)\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                                    lineNumber: 225,\n                                                    columnNumber: 23\n                                                }, undefined)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                                lineNumber: 224,\n                                                columnNumber: 21\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                        lineNumber: 212,\n                                        columnNumber: 19\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                    lineNumber: 211,\n                                    columnNumber: 17\n                                }, undefined),\n                                showUploader && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"absolute inset-0 bg-black/50 flex items-center justify-center z-20 p-2\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"bg-white p-2 rounded-lg shadow-lg w-full max-w-5xl\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                                className: \"text-xl font-semibold mb-2\",\n                                                children: \"Flight Plan Upload\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                                lineNumber: 237,\n                                                columnNumber: 21\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react__WEBPACK_IMPORTED_MODULE_1__.Suspense, {\n                                                fallback: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AnalysisLoadingSpinner, {}, void 0, false, {\n                                                    fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                                    lineNumber: 238,\n                                                    columnNumber: 41\n                                                }, void 0),\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(FlightPlanUploader, {\n                                                    onClose: ()=>setShowUploader(false),\n                                                    onPlanUploaded: (flightData)=>{\n                                                        setShowUploader(false);\n                                                    }\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                                    lineNumber: 239,\n                                                    columnNumber: 23\n                                                }, undefined)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                                lineNumber: 238,\n                                                columnNumber: 21\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                        lineNumber: 236,\n                                        columnNumber: 19\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                    lineNumber: 235,\n                                    columnNumber: 17\n                                }, undefined),\n                                showAreaOpsUploader && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"absolute inset-0 bg-black/50 flex items-center justify-center z-20 p-2\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"bg-white p-2 rounded-lg shadow-lg w-full max-w-5xl\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                                className: \"text-xl font-semibold mb-2\",\n                                                children: \"Area of Operations Upload\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                                lineNumber: 252,\n                                                columnNumber: 21\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react__WEBPACK_IMPORTED_MODULE_1__.Suspense, {\n                                                fallback: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AnalysisLoadingSpinner, {}, void 0, false, {\n                                                    fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                                    lineNumber: 253,\n                                                    columnNumber: 41\n                                                }, void 0),\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AreaOpsUploader, {\n                                                    onClose: ()=>setShowAreaOpsUploader(false)\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                                    lineNumber: 254,\n                                                    columnNumber: 23\n                                                }, undefined)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                                lineNumber: 253,\n                                                columnNumber: 21\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                        lineNumber: 251,\n                                        columnNumber: 19\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                    lineNumber: 250,\n                                    columnNumber: 17\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                            lineNumber: 191,\n                            columnNumber: 13\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                        lineNumber: 190,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"w-80 h-full shrink-0 max-h-screen overflow-y-auto flex p-1 mr-2 flex-col gap-4 pb-4\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-full z-0\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_UI_Card__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                                    className: \"w-full rounded-l-xl\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"space-y-4 h-full flex flex-col\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                                className: \"text-lg font-medium text-gray-900\",\n                                                children: \"Terrain and Visibility Toolbar\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                                lineNumber: 270,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"flex-1 overflow-y-auto\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react__WEBPACK_IMPORTED_MODULE_1__.Suspense, {\n                                                    fallback: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AnalysisLoadingSpinner, {}, void 0, false, {\n                                                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                                        lineNumber: 272,\n                                                        columnNumber: 41\n                                                    }, void 0),\n                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ToolsDashboard, {\n                                                        onTogglePanel: togglePanel\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                                        lineNumber: 273,\n                                                        columnNumber: 23\n                                                    }, undefined)\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                                    lineNumber: 272,\n                                                    columnNumber: 21\n                                                }, undefined)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                                lineNumber: 271,\n                                                columnNumber: 19\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                        lineNumber: 269,\n                                        columnNumber: 17\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                    lineNumber: 268,\n                                    columnNumber: 15\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                lineNumber: 267,\n                                columnNumber: 13\n                            }, undefined),\n                            isMapSelectionMode && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-full z-10\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_UI_Card__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                                    className: \"w-full rounded-l-xl\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"space-y-3 h-full flex flex-col\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                                className: \"text-lg font-medium text-gray-900 flex items-center gap-2\",\n                                                children: mapSelectionMode === \"map\" ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Battery_Loader2_MapPin_Mountain_Radio_Search_lucide_react__WEBPACK_IMPORTED_MODULE_19__[\"default\"], {\n                                                            className: \"w-5 h-5 text-blue-600\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                                            lineNumber: 288,\n                                                            columnNumber: 27\n                                                        }, undefined),\n                                                        \"Select Area on Map\"\n                                                    ]\n                                                }, void 0, true) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Battery_Loader2_MapPin_Mountain_Radio_Search_lucide_react__WEBPACK_IMPORTED_MODULE_20__[\"default\"], {\n                                                            className: \"w-5 h-5 text-blue-600\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                                            lineNumber: 293,\n                                                            columnNumber: 27\n                                                        }, undefined),\n                                                        \"Search Location\"\n                                                    ]\n                                                }, void 0, true)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                                lineNumber: 285,\n                                                columnNumber: 21\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"flex-1 overflow-y-auto\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react__WEBPACK_IMPORTED_MODULE_1__.Suspense, {\n                                                    fallback: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AnalysisLoadingSpinner, {}, void 0, false, {\n                                                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                                        lineNumber: 299,\n                                                        columnNumber: 43\n                                                    }, void 0),\n                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(MapSelectionPanel, {\n                                                        mode: mapSelectionMode,\n                                                        onComplete: handleMapSelectionComplete,\n                                                        onCancel: handleMapSelectionCancel\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                                        lineNumber: 300,\n                                                        columnNumber: 25\n                                                    }, undefined)\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                                    lineNumber: 299,\n                                                    columnNumber: 23\n                                                }, undefined)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                                lineNumber: 298,\n                                                columnNumber: 21\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                        lineNumber: 284,\n                                        columnNumber: 19\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                    lineNumber: 283,\n                                    columnNumber: 17\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                lineNumber: 282,\n                                columnNumber: 15\n                            }, undefined),\n                            (flightPlan || aoGeometry) && !showWizard && !showUploader && !showAreaOpsUploader && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-full relative z-10\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react__WEBPACK_IMPORTED_MODULE_1__.Suspense, {\n                                    fallback: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AnalysisLoadingSpinner, {}, void 0, false, {\n                                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                        lineNumber: 315,\n                                        columnNumber: 37\n                                    }, void 0),\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ChecklistComponent, {\n                                        className: \"relative\",\n                                        togglePanel: togglePanel\n                                    }, void 0, false, {\n                                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                        lineNumber: 316,\n                                        columnNumber: 19\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                    lineNumber: 315,\n                                    columnNumber: 17\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                lineNumber: 314,\n                                columnNumber: 15\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                        lineNumber: 265,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_UI_MapSidePanel__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n                        title: \"Energy Analysis\",\n                        icon: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Battery_Loader2_MapPin_Mountain_Radio_Search_lucide_react__WEBPACK_IMPORTED_MODULE_21__[\"default\"], {\n                            className: \"w-5 h-5\"\n                        }, void 0, false, {\n                            fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                            lineNumber: 325,\n                            columnNumber: 19\n                        }, void 0),\n                        isExpanded: activePanel === \"energy\",\n                        onToggle: ()=>togglePanel(\"energy\"),\n                        className: \"z-30\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react__WEBPACK_IMPORTED_MODULE_1__.Suspense, {\n                            fallback: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AnalysisLoadingSpinner, {}, void 0, false, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                lineNumber: 330,\n                                columnNumber: 33\n                            }, void 0),\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Calculator, {}, void 0, false, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                lineNumber: 331,\n                                columnNumber: 15\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                            lineNumber: 330,\n                            columnNumber: 13\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                        lineNumber: 323,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_UI_MapSidePanel__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n                        title: \"Visibility and Comms Tools\",\n                        icon: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Battery_Loader2_MapPin_Mountain_Radio_Search_lucide_react__WEBPACK_IMPORTED_MODULE_22__[\"default\"], {\n                            className: \"w-5 h-5\"\n                        }, void 0, false, {\n                            fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                            lineNumber: 337,\n                            columnNumber: 19\n                        }, void 0),\n                        isExpanded: activePanel === \"los\",\n                        onToggle: ()=>togglePanel(\"los\"),\n                        className: \"z-30\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react__WEBPACK_IMPORTED_MODULE_1__.Suspense, {\n                            fallback: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AnalysisLoadingSpinner, {}, void 0, false, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                lineNumber: 342,\n                                columnNumber: 33\n                            }, void 0),\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AnalysisDashboard, {\n                                initialSection: initialSection\n                            }, void 0, false, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                lineNumber: 343,\n                                columnNumber: 15\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                            lineNumber: 342,\n                            columnNumber: 13\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                        lineNumber: 335,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_UI_MapSidePanel__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n                        title: \"Terrain Analysis Tools\",\n                        icon: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Battery_Loader2_MapPin_Mountain_Radio_Search_lucide_react__WEBPACK_IMPORTED_MODULE_23__[\"default\"], {\n                            className: \"w-5 h-5\"\n                        }, void 0, false, {\n                            fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                            lineNumber: 349,\n                            columnNumber: 19\n                        }, void 0),\n                        isExpanded: activePanel === \"terrain\",\n                        onToggle: ()=>togglePanel(\"terrain\"),\n                        className: \"z-30\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react__WEBPACK_IMPORTED_MODULE_1__.Suspense, {\n                            fallback: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AnalysisLoadingSpinner, {}, void 0, false, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                lineNumber: 354,\n                                columnNumber: 33\n                            }, void 0),\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ObstacleAnalysisDashboard, {}, void 0, false, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                lineNumber: 355,\n                                columnNumber: 15\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                            lineNumber: 354,\n                            columnNumber: 13\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                        lineNumber: 347,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                lineNumber: 188,\n                columnNumber: 9\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n            lineNumber: 187,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n        lineNumber: 185,\n        columnNumber: 5\n    }, undefined);\n};\n/**\n * Wrapper component for the MarkerLocationsModal - WITH LAZY LOADING\n * This ensures the modal has access to all necessary context\n * and is rendered at the application level\n */ const MarkerLocationsModalWrapper = ()=>{\n    const { showMarkerLocationsModal, setShowMarkerLocationsModal } = (0,_context_AnalysisControllerContext__WEBPACK_IMPORTED_MODULE_14__.useAnalysisController)();\n    if (!showMarkerLocationsModal) return null;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react__WEBPACK_IMPORTED_MODULE_1__.Suspense, {\n        fallback: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ModalLoadingPlaceholder, {}, void 0, false, {\n            fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n            lineNumber: 375,\n            columnNumber: 25\n        }, void 0),\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(MarkerLocationsModal, {\n            isOpen: showMarkerLocationsModal,\n            onClose: ()=>setShowMarkerLocationsModal(false)\n        }, void 0, false, {\n            fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n            lineNumber: 376,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n        lineNumber: 375,\n        columnNumber: 5\n    }, undefined);\n};\n/**\n * Lazy-loaded UpgradeModal wrapper\n */ const UpgradeModalWrapper = ()=>{\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react__WEBPACK_IMPORTED_MODULE_1__.Suspense, {\n        fallback: null,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(UpgradeModal, {}, void 0, false, {\n            fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n            lineNumber: 390,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n        lineNumber: 389,\n        columnNumber: 5\n    }, undefined);\n};\n/**\n * Home page component, wrapping content with necessary providers\n */ function Home() {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_mapcontext__WEBPACK_IMPORTED_MODULE_13__.MapProvider, {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_AnalysisControllerContext__WEBPACK_IMPORTED_MODULE_14__.AnalysisControllerProvider, {\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_AreaOfOpsContext__WEBPACK_IMPORTED_MODULE_4__.AreaOfOpsProvider, {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_FlightPlanContext__WEBPACK_IMPORTED_MODULE_3__.FlightPlanProvider, {\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_FlightConfigurationContext__WEBPACK_IMPORTED_MODULE_7__.FlightConfigurationProvider, {\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_PremiumContext__WEBPACK_IMPORTED_MODULE_17__.PremiumProvider, {\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_MarkerContext__WEBPACK_IMPORTED_MODULE_5__.MarkerProvider, {\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_LOSAnalysisContext__WEBPACK_IMPORTED_MODULE_6__.LOSAnalysisProvider, {\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_ObstacleAnalysisContext__WEBPACK_IMPORTED_MODULE_10__.ObstacleAnalysisProvider, {\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_ChecklistContext__WEBPACK_IMPORTED_MODULE_8__.ChecklistProvider, {\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(HomeContent, {}, void 0, false, {\n                                                    fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                                    lineNumber: 410,\n                                                    columnNumber: 25\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(UpgradeModalWrapper, {}, void 0, false, {\n                                                    fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                                    lineNumber: 411,\n                                                    columnNumber: 25\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(MarkerLocationsModalWrapper, {}, void 0, false, {\n                                                    fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                                    lineNumber: 412,\n                                                    columnNumber: 25\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                            lineNumber: 409,\n                                            columnNumber: 23\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                        lineNumber: 408,\n                                        columnNumber: 21\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                    lineNumber: 407,\n                                    columnNumber: 19\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                                lineNumber: 406,\n                                columnNumber: 17\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                            lineNumber: 405,\n                            columnNumber: 15\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                        lineNumber: 404,\n                        columnNumber: 13\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                    lineNumber: 403,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n                lineNumber: 402,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n            lineNumber: 401,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n        lineNumber: 400,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/page.tsx\n");

/***/ }),

/***/ "(ssr)/./src/app/services/BYDAService.ts":
/*!*****************************************!*\
  !*** ./src/app/services/BYDAService.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchBYDALayers: () => (/* binding */ fetchBYDALayers)\n/* harmony export */ });\n/**\n * BYDAService.ts\n * \n * Purpose:\n * Encapsulates logic for fetching DBYD (Dial Before You Dig) powerline data from ArcGIS services.\n * Provides a reusable function to fetch and update map layers, ensuring DRY and Maintainability.\n * \n * Dependencies:\n * - mapbox-gl: For map instance and GeoJSON sources.\n * - @turf/turf: For bounding box calculations.\n * \n * Usage:\n * Imported in useLayers.ts to support toggleDBYDPowerlines.\n */ /**\n * Fetches DBYD powerline data and updates map layers.\n * @param map - Mapbox map instance.\n * @param aoGeometry - Area of Operations geometry for bounding box.\n * @param setLayerVisibility - Function to set layer visibility.\n * @returns Promise resolving to true on success, false on failure.\n */ async function fetchBYDALayers(map, aoGeometry, setLayerVisibility) {\n    const services = [\n        'LUAL_Network_HV_Feature_Public',\n        'LUAL_Network_LV_Feature_Public',\n        'LUAL_Network_SWER_Feature_Public',\n        'LUAL_Network_Other_Feature_Public',\n        'LUAL_Network_Device_Feature_View'\n    ];\n    const serviceLayerMapping = {\n        LUAL_Network_HV_Feature_Public: {\n            sourceId: 'byda-hv-source',\n            layerId: 'byda-hv-layer',\n            color: '#ff0000'\n        },\n        LUAL_Network_LV_Feature_Public: {\n            sourceId: 'byda-lv-source',\n            layerId: 'byda-lv-layer',\n            color: '#ff0000'\n        },\n        LUAL_Network_SWER_Feature_Public: {\n            sourceId: 'byda-swer-source',\n            layerId: 'byda-swer-layer',\n            color: '#ff0000'\n        },\n        LUAL_Network_Other_Feature_Public: {\n            sourceId: 'byda-other-source',\n            layerId: 'byda-other-layer',\n            color: '#ff0000'\n        },\n        LUAL_Network_Device_Feature_View: {\n            sourceId: 'byda-device-source',\n            layerId: 'byda-device-layer',\n            color: '#ff0000'\n        }\n    };\n    const baseUrl = 'https://services-ap1.arcgis.com/ug6sGLFkytbXYo4f/ArcGIS/rest/services';\n    const serviceQueryParams = {\n        LUAL_Network_HV_Feature_Public: {\n            where: \"ASSET_TYPE IN ('US','OH')\",\n            outFields: 'OPERATING_VOLTAGE,OWNER'\n        },\n        LUAL_Network_LV_Feature_Public: {\n            where: \"ASSET_TYPE IN ('US','OH')\",\n            outFields: 'OPERATING_VOLTAGE,OWNER'\n        },\n        LUAL_Network_SWER_Feature_Public: {\n            where: \"ASSET_TYPE IN ('US','OH')\",\n            outFields: 'OWNER,OPERATING_VOLTAGE'\n        },\n        LUAL_Network_Other_Feature_Public: {\n            where: \"ASSET_TYPE IN ('US','OH')\",\n            outFields: 'OWNER,OPERATING_VOLTAGE'\n        },\n        LUAL_Network_Device_Feature_View: {\n            where: '1=1',\n            outFields: 'OWNER,ASSET_TYPE'\n        }\n    };\n    const geometryType = 'esriGeometryEnvelope';\n    const inSR = '4326';\n    const spatialRel = 'esriSpatialRelIntersects';\n    const f = 'geojson';\n    try {\n        // Calculate bounding box from AO geometry\n        const turf = await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/@turf\"), __webpack_require__.e(\"vendor-chunks/topojson-server\"), __webpack_require__.e(\"vendor-chunks/topojson-client\"), __webpack_require__.e(\"vendor-chunks/d3-voronoi\"), __webpack_require__.e(\"vendor-chunks/skmeans\"), __webpack_require__.e(\"vendor-chunks/point-in-polygon\"), __webpack_require__.e(\"vendor-chunks/rbush\"), __webpack_require__.e(\"vendor-chunks/splaytree-ts\"), __webpack_require__.e(\"vendor-chunks/polyclip-ts\"), __webpack_require__.e(\"vendor-chunks/geojson-equality-ts\"), __webpack_require__.e(\"vendor-chunks/bignumber.js\"), __webpack_require__.e(\"vendor-chunks/tinyqueue\"), __webpack_require__.e(\"vendor-chunks/sweepline-intersections\"), __webpack_require__.e(\"vendor-chunks/robust-predicates\"), __webpack_require__.e(\"vendor-chunks/marchingsquares\"), __webpack_require__.e(\"vendor-chunks/fast-deep-equal\"), __webpack_require__.e(\"vendor-chunks/earcut\"), __webpack_require__.e(\"vendor-chunks/concaveman\")]).then(__webpack_require__.bind(__webpack_require__, /*! @turf/turf */ \"(ssr)/./node_modules/@turf/turf/dist/esm/index.js\"));\n        const boundingBox = turf.bbox(aoGeometry);\n        const geometry = boundingBox.join(',');\n        // Fetch data for each service\n        const fetchPromises = services.map(async (service)=>{\n            const params = serviceQueryParams[service];\n            const queryParams = new URLSearchParams({\n                where: params.where,\n                geometry,\n                geometryType,\n                inSR,\n                spatialRel,\n                outFields: params.outFields,\n                returnGeometry: 'true',\n                f\n            });\n            const queryUrl = `${baseUrl}/${service}/FeatureServer/0/query?${queryParams.toString()}`;\n            try {\n                const res = await fetch(queryUrl);\n                const data = await res.json();\n                const { sourceId, layerId } = serviceLayerMapping[service];\n                // Ensure source exists\n                if (!map.getSource(sourceId)) {\n                    map.addSource(sourceId, {\n                        type: 'geojson',\n                        data: {\n                            type: 'FeatureCollection',\n                            features: []\n                        }\n                    });\n                }\n                // Update source data\n                const existingSource = map.getSource(sourceId);\n                if (existingSource) {\n                    existingSource.setData(data.features && data.features.length > 0 ? data : {\n                        type: 'FeatureCollection',\n                        features: []\n                    });\n                    setLayerVisibility(layerId, data.features && data.features.length > 0);\n                } else {\n                    console.warn(`[BYDAService] Source \"${sourceId}\" not found after adding.`);\n                }\n            } catch (error) {\n                console.error(`[BYDAService] Error fetching ${service}:`, error);\n                throw error;\n            }\n        });\n        await Promise.all(fetchPromises);\n        console.log('[BYDAService] All DBYD layers fetched successfully');\n        return true;\n    } catch (error) {\n        console.error('[BYDAService] Failed to fetch DBYD layers:', error);\n        return false;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/services/BYDAService.ts\n");

/***/ }),

/***/ "(ssr)/./src/app/services/ElevationService.ts":
/*!**********************************************!*\
  !*** ./src/app/services/ElevationService.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ElevationService: () => (/* binding */ ElevationService)\n/* harmony export */ });\n/* harmony import */ var _turf_turf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @turf/turf */ \"(ssr)/./node_modules/@turf/helpers/dist/esm/index.js\");\n/* harmony import */ var _turf_turf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @turf/turf */ \"(ssr)/./node_modules/@turf/bbox/dist/esm/index.js\");\n/* harmony import */ var _turf_turf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @turf/turf */ \"(ssr)/./node_modules/@turf/point-grid/dist/esm/index.js\");\n/**\n * ElevationService.ts\n * \n * Optimized service for terrain elevation data access.\n * Provides caching, batch queries, preloading, and efficient fallback mechanisms\n * with minimal overhead. Replaces and enhances TerrainUtils functionality.\n */ \nclass ElevationService {\n    constructor(map){\n        this.cache = new Map();\n        this.MAX_CACHE_SIZE = 10000;\n        this.terrainReady = false;\n        this.isPreloading = false;\n        this.map = map;\n        this.ensureTerrainReady();\n    }\n    /**\n   * Creates cache key from coordinates\n   */ key(lon, lat) {\n        return `${lon.toFixed(4)}|${lat.toFixed(4)}`;\n    }\n    /**\n   * Ensures terrain layer is ready for queries with enhanced reliability\n   */ async ensureTerrainReady() {\n        if (this.terrainReady) return;\n        if (!this.map.getSource(\"mapbox-dem\")) {\n            console.log(`[${new Date().toISOString()}] [ElevationService] Adding DEM source`);\n            this.map.addSource(\"mapbox-dem\", {\n                type: \"raster-dem\",\n                url: \"mapbox://mapbox.mapbox-terrain-dem-v1\",\n                tileSize: 512,\n                maxzoom: 15\n            });\n            this.map.setTerrain({\n                source: \"mapbox-dem\",\n                exaggeration: 1.0\n            });\n        }\n        // Enhanced reliability: Wait for source to be loaded with timeout and retry\n        if (!this.map.isSourceLoaded(\"mapbox-dem\")) {\n            const maxRetries = 3;\n            let retries = 0;\n            while(retries < maxRetries){\n                try {\n                    await new Promise((resolve, reject)=>{\n                        const checkDEM = ()=>{\n                            if (this.map.isSourceLoaded(\"mapbox-dem\")) {\n                                this.map.off(\"sourcedata\", checkDEM);\n                                resolve();\n                            }\n                        };\n                        this.map.on(\"sourcedata\", checkDEM);\n                        // Initial check in case it's already loaded\n                        if (this.map.isSourceLoaded(\"mapbox-dem\")) {\n                            this.map.off(\"sourcedata\", checkDEM);\n                            resolve();\n                        }\n                        // Timeout safety\n                        setTimeout(()=>{\n                            this.map.off(\"sourcedata\", checkDEM);\n                            reject(new Error(\"DEM source loading timeout\"));\n                        }, 5000);\n                    });\n                    break;\n                } catch (error) {\n                    retries++;\n                    console.warn(`[${new Date().toISOString()}] [ElevationService] DEM loading retry ${retries}/${maxRetries}`);\n                    // Last retry failed, continue anyway\n                    if (retries >= maxRetries) {\n                        console.warn(`[${new Date().toISOString()}] [ElevationService] Max retries reached, proceeding with warning`);\n                    }\n                }\n            }\n        }\n        // Validate DEM with sample queries\n        await this.validateDEM();\n        this.terrainReady = true;\n        console.log(`[${new Date().toISOString()}] [ElevationService] Terrain ready`);\n    }\n    /**\n   * Validates that DEM data is available using sample points\n   */ async validateDEM() {\n        const center = this.map.getCenter();\n        const testPoints = [\n            [\n                center.lng,\n                center.lat\n            ],\n            [\n                center.lng + 0.01,\n                center.lat\n            ],\n            [\n                center.lng,\n                center.lat + 0.01\n            ]\n        ];\n        const elevations = await Promise.all(testPoints.map((point)=>this.map.queryTerrainElevation(point)));\n        const validElevations = elevations.filter((e)=>e !== null && e !== 0);\n        const isValid = validElevations.length > 0;\n        if (!isValid) {\n            console.warn(`[${new Date().toISOString()}] [ElevationService] DEM validation failed:`, elevations.map((e, i)=>`[${testPoints[i]}]: ${e !== null ? e : 'null'}m`).join(', '));\n        } else {\n            console.log(`[${new Date().toISOString()}] [ElevationService] DEM validation successful:`, validElevations.map((v, i)=>`[${testPoints[i]}]: ${v}m`).join(', '));\n        }\n        return isValid;\n    }\n    /**\n   * Preloads elevation data for an area of interest based on coordinates.\n   * Replaces TerrainUtils.preloadTiles with more efficient implementation.\n   */ async preloadArea(coordinates) {\n        if (this.isPreloading || !coordinates.length) return;\n        try {\n            this.isPreloading = true;\n            await this.ensureTerrainReady();\n            console.log(`[${new Date().toISOString()}] [ElevationService] Preloading terrain for ${coordinates.length} coordinates`);\n            // Create a bounding box around coordinates\n            const points = coordinates.map((coord)=>_turf_turf__WEBPACK_IMPORTED_MODULE_0__.point([\n                    coord[0],\n                    coord[1]\n                ]));\n            const featureCollection = _turf_turf__WEBPACK_IMPORTED_MODULE_0__.featureCollection(points);\n            const bbox = _turf_turf__WEBPACK_IMPORTED_MODULE_1__.bbox(featureCollection);\n            // Generate sample points within the bbox for more efficient coverage\n            const samplePoints = _turf_turf__WEBPACK_IMPORTED_MODULE_2__.pointGrid(bbox, 100, {\n                units: 'meters'\n            }).features.map((f)=>f.geometry.coordinates).slice(0, 100); // Limit number of sample points\n            // Query sample points to load tiles\n            const BATCH_SIZE = 20;\n            for(let i = 0; i < samplePoints.length; i += BATCH_SIZE){\n                const batch = samplePoints.slice(i, i + BATCH_SIZE);\n                await Promise.all(batch.map(([lon, lat])=>this.map.queryTerrainElevation([\n                        lon,\n                        lat\n                    ])));\n                await new Promise((resolve)=>setTimeout(resolve, 10)); // Smaller delay for efficiency\n            }\n            // Also query original coordinates to ensure they're loaded\n            const waypoints = coordinates.map((coord)=>[\n                    coord[0],\n                    coord[1]\n                ]);\n            await this.batchGetElevations(waypoints, true);\n            console.log(`[${new Date().toISOString()}] [ElevationService] Terrain preloading completed`);\n        } catch (error) {\n            console.warn(`[${new Date().toISOString()}] [ElevationService] Preloading error:`, error);\n        } finally{\n            this.isPreloading = false;\n        }\n    }\n    /**\n   * Gets elevation for a single coordinate with optimized caching\n   */ async getElevation(lon, lat) {\n        const cacheKey = this.key(lon, lat);\n        if (this.cache.has(cacheKey)) {\n            return this.cache.get(cacheKey);\n        }\n        await this.ensureTerrainReady();\n        try {\n            const elev = this.map.queryTerrainElevation([\n                lon,\n                lat\n            ]);\n            if (elev !== null && elev !== undefined) {\n                // Cache all valid elevation values, including zero\n                // Zero is a valid elevation (e.g., sea level, water bodies)\n                this.cache.set(cacheKey, elev);\n                // Simple LRU cache management\n                if (this.cache.size > this.MAX_CACHE_SIZE) {\n                    const firstKey = this.cache.keys().next().value;\n                    this.cache.delete(firstKey);\n                }\n                return elev;\n            }\n        } catch (error) {\n            console.warn(`[${new Date().toISOString()}] [ElevationService] Terrain query error at [${lon}, ${lat}]:`, error);\n        }\n        // Enhanced fallback: Only use when we got null or undefined (not for zero)\n        try {\n            const gridSize = 0.0002; // Small grid for neighboring points\n            const neighbors = [\n                [\n                    lon + gridSize,\n                    lat\n                ],\n                [\n                    lon - gridSize,\n                    lat\n                ],\n                [\n                    lon,\n                    lat + gridSize\n                ],\n                [\n                    lon,\n                    lat - gridSize\n                ]\n            ];\n            const elevations = await Promise.all(neighbors.map(([nlon, nlat])=>this.map.queryTerrainElevation([\n                    nlon,\n                    nlat\n                ])));\n            const validElevations = elevations.filter((e)=>e !== null && e !== undefined);\n            if (validElevations.length > 0) {\n                const avgElev = validElevations.reduce((sum, e)=>sum + e, 0) / validElevations.length;\n                this.cache.set(cacheKey, avgElev);\n                return avgElev;\n            }\n        } catch (error) {\n            console.warn(`[${new Date().toISOString()}] [ElevationService] Fallback query error:`, error);\n        }\n        return 0; // Final fallback\n    }\n    /**\n   * Batch query for multiple coordinates with optimized processing\n   * Replaces and enhances TerrainUtils.getReliableTerrainElevations\n   */ async batchGetElevations(points, skipPreload = false, progressCallback) {\n        if (!skipPreload) {\n            const coords = points.map((p)=>[\n                    ...p,\n                    0\n                ]);\n            await this.preloadArea(coords);\n        }\n        console.log(`[${new Date().toISOString()}] [ElevationService] Batch querying elevations for ${points.length} points`);\n        // Process in batches for better performance\n        const BATCH_SIZE = 100;\n        const results = [];\n        for(let i = 0; i < points.length; i += BATCH_SIZE){\n            const batch = points.slice(i, i + BATCH_SIZE);\n            const batchResults = await Promise.all(batch.map(async ([lon, lat])=>{\n                const cacheKey = this.key(lon, lat);\n                if (this.cache.has(cacheKey)) {\n                    return this.cache.get(cacheKey);\n                }\n                try {\n                    const elevation = this.map.queryTerrainElevation([\n                        lon,\n                        lat\n                    ]);\n                    if (elevation !== null && elevation !== undefined) {\n                        // Cache all valid elevation values, including zero (sea level)\n                        this.cache.set(cacheKey, elevation);\n                        return elevation;\n                    }\n                } catch (e) {\n                // Silent fail and continue to fallback\n                }\n                // Try fallback with nearby points ONLY when we got null/undefined (not for zero)\n                try {\n                    const offset = 0.0002;\n                    const neighbors = [\n                        [\n                            lon + offset,\n                            lat\n                        ],\n                        [\n                            lon - offset,\n                            lat\n                        ],\n                        [\n                            lon,\n                            lat + offset\n                        ],\n                        [\n                            lon,\n                            lat - offset\n                        ]\n                    ];\n                    const neighborElevations = await Promise.all(neighbors.map(([nlon, nlat])=>this.map.queryTerrainElevation([\n                            nlon,\n                            nlat\n                        ])));\n                    const validElevations = neighborElevations.filter((e)=>e !== null && e !== undefined);\n                    if (validElevations.length > 0) {\n                        const avgElev = validElevations.reduce((sum, e)=>sum + e, 0) / validElevations.length;\n                        this.cache.set(cacheKey, avgElev);\n                        return avgElev;\n                    }\n                } catch (e) {\n                // Silent fail and return 0\n                }\n                return 0;\n            }));\n            results.push(...batchResults);\n            // Report progress if callback provided\n            if (progressCallback) {\n                const progress = Math.min(100, Math.round((i + BATCH_SIZE) / points.length * 100));\n                progressCallback(progress);\n            }\n            // Allow UI thread to breathe between large batches\n            if (i + BATCH_SIZE < points.length) {\n                await new Promise((resolve)=>setTimeout(resolve, 0));\n            }\n        }\n        return results;\n    }\n    /**\n   * Gets reliable terrain elevations with enhanced fallback mechanisms.\n   * Direct replacement for TerrainUtils.getReliableTerrainElevations.\n   */ async getReliableTerrainElevations(coordinates, progressCallback) {\n        return this.batchGetElevations(coordinates, false, progressCallback);\n    }\n    /**\n   * Ensures DEM data is loaded and validated.\n   * Direct replacement for TerrainUtils.ensureDEMLoaded.\n   */ async ensureDEM() {\n        await this.ensureTerrainReady();\n    }\n    /**\n   * Preloads DEM tiles for a set of coordinates.\n   * Direct replacement for TerrainUtils.preloadTiles.\n   */ async preloadTiles(coordinates) {\n        await this.preloadArea(coordinates);\n    }\n    /**\n   * Clear cache to free memory\n   */ clearCache() {\n        console.log(`[${new Date().toISOString()}] [ElevationService] Clearing elevation cache with ${this.cache.size} entries`);\n        this.cache.clear();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/services/ElevationService.ts\n");

/***/ }),

/***/ "(ssr)/./src/app/services/LayerManager.ts":
/*!******************************************!*\
  !*** ./src/app/services/LayerManager.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MAP_LAYERS: () => (/* binding */ MAP_LAYERS),\n/* harmony export */   layerManager: () => (/* binding */ layerManager)\n/* harmony export */ });\n/* harmony import */ var _turf_turf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @turf/turf */ \"(ssr)/./node_modules/@turf/bbox/dist/esm/index.js\");\n//LayerManager.ts  (new - in services folder)\n// src/services/LayerManager.ts\n\nconst MAP_LAYERS = {\n    ELOS_GRID: 'elos-grid-layer',\n    FLIGHT_PATH: 'flight-path-layer',\n    FLIGHT_PATH_VISIBILITY: 'flight-path-visibility-layer',\n    TERRAIN: 'terrain-layer',\n    GCS_GRID: 'gcs-grid-layer',\n    OBSERVER_GRID: 'observer-grid-layer',\n    REPEATER_GRID: 'repeater-grid-layer',\n    MERGED_VISIBILITY: 'merged-visibility-layer',\n    AOTERRAIN_GRID: \"AOterrain-grid-layer\",\n    AREA_OF_OPERATIONS_FILL: \"area-of-operations-fill\",\n    AREA_OF_OPERATIONS_OUTLINE: \"area-of-operations-outline\",\n    POWERLINES: \"Electricity Transmission Lines\",\n    POWERLINES_HITBOX: \"Electricity Transmission Lines Hitbox\",\n    AIRFIELDS: \"Airfields\",\n    AIRFIELDS_LABELS: \"Airfields Labels\",\n    BYDA_HV: \"byda-hv-layer\",\n    BYDA_LV: \"byda-lv-layer\",\n    BYDA_SWER: \"byda-swer-layer\",\n    BYDA_OTHER: \"byda-other-layer\",\n    BYDA_DEVICE: \"byda-device-layer\",\n    MOBILE_TOWERS: \"mobile-towers-layer\",\n    TREE_HEIGHTS: 'tree-height-raster'\n};\n/**\n * Manages map layers with an event system for React integration\n */ class LayerManager {\n    /**\n   * Set the map instance\n   */ setMap(map) {\n        this.map = map;\n        return this;\n    }\n    /**\n   * Add an event listener for layer changes\n   */ addEventListener(listener) {\n        this.listeners.add(listener);\n        return ()=>this.listeners.delete(listener); // Return cleanup function\n    }\n    /**\n   * Notify all listeners of an event\n   */ notifyListeners(event, layerId, visible) {\n        this.listeners.forEach((listener)=>listener(event, layerId, visible));\n    }\n    /**\n   * Register a layer for tracking\n   */ registerLayer(layerId, initialVisibility = false) {\n        this.layers.set(layerId, initialVisibility);\n        this.notifyListeners('layerAdded', layerId, initialVisibility);\n        return this;\n    }\n    /**\n   * Register all predefined layers\n   */ registerKnownLayers() {\n        Object.values(MAP_LAYERS).forEach((layerId)=>{\n            this.registerLayer(layerId, false);\n        });\n        return this;\n    }\n    /**\n   * Toggle a layer's visibility\n   */ toggleLayerVisibility(layerId) {\n        if (!this.ensureMap()) return false;\n        try {\n            if (!this.map.getLayer(layerId)) {\n                console.warn(`Layer ${layerId} does not exist in the map`);\n                return false;\n            }\n            const currentVisibility = this.map.getLayoutProperty(layerId, 'visibility');\n            const newVisibility = currentVisibility === 'visible' ? 'none' : 'visible';\n            this.map.setLayoutProperty(layerId, 'visibility', newVisibility);\n            const isVisible = newVisibility === 'visible';\n            this.layers.set(layerId, isVisible);\n            this.notifyListeners('visibilityChange', layerId, isVisible);\n            return true;\n        } catch (error) {\n            console.error(`Error toggling layer ${layerId}:`, error);\n            return false;\n        }\n    }\n    /**\n   * Set a layer's visibility directly\n   */ setLayerVisibility(layerId, visible) {\n        if (!this.ensureMap()) return false;\n        try {\n            if (!this.map.getLayer(layerId)) {\n                console.warn(`Layer ${layerId} does not exist in the map`);\n                return false;\n            }\n            const newVisibility = visible ? 'visible' : 'none';\n            this.map.setLayoutProperty(layerId, 'visibility', newVisibility);\n            this.layers.set(layerId, visible);\n            this.notifyListeners('visibilityChange', layerId, visible);\n            return true;\n        } catch (error) {\n            console.error(`Error setting layer ${layerId} visibility:`, error);\n            return false;\n        }\n    }\n    /**\n   * Remove a layer and its source\n   */ removeLayer(layerId) {\n        if (!this.ensureMap()) return false;\n        try {\n            if (this.map.getLayer(layerId)) {\n                this.map.removeLayer(layerId);\n            }\n            if (this.map.getSource(layerId)) {\n                this.map.removeSource(layerId);\n            }\n            this.layers.delete(layerId);\n            this.notifyListeners('layerRemoved', layerId);\n            return true;\n        } catch (error) {\n            console.error(`Error removing layer ${layerId}:`, error);\n            return false;\n        }\n    }\n    /**\n   * Check if a layer is visible\n   */ isLayerVisible(layerId) {\n        if (!this.map?.getLayer(layerId)) return false;\n        return this.map.getLayoutProperty(layerId, 'visibility') === 'visible';\n    }\n    /**\n   * Add a layer to the map\n   */ addLayer(layerId, source, layerConfig, sourceId, initialVisibility = true) {\n        if (!this.ensureMap()) return false;\n        const effectiveSourceId = sourceId || layerId;\n        try {\n            // Add source if it doesn't exist\n            if (!this.map.getSource(effectiveSourceId)) {\n                this.map.addSource(effectiveSourceId, source);\n            }\n            // Remove layer if it already exists\n            if (this.map.getLayer(layerId)) {\n                this.map.removeLayer(layerId);\n            }\n            // Add the layer\n            this.map.addLayer({\n                ...layerConfig,\n                id: layerId,\n                source: effectiveSourceId,\n                layout: {\n                    ...layerConfig.layout,\n                    visibility: initialVisibility ? 'visible' : 'none'\n                }\n            });\n            // Register and notify\n            this.registerLayer(layerId, initialVisibility);\n            return true;\n        } catch (error) {\n            console.error(`Error adding layer ${layerId}:`, error);\n            return false;\n        }\n    }\n    /**\n   * Get the current layer visibility state\n   */ getLayerState() {\n        const state = {};\n        // First add all tracked layers\n        for (const [layerId, isVisible] of this.layers.entries()){\n            state[layerId] = isVisible;\n        }\n        // Then check actual map state for layers that exist\n        if (this.map) {\n            for (const layerId of Object.values(MAP_LAYERS)){\n                if (this.map.getLayer(layerId)) {\n                    const visible = this.map.getLayoutProperty(layerId, 'visibility') === 'visible';\n                    state[layerId] = visible;\n                }\n            }\n        }\n        return state;\n    }\n    /**\n   * Adds or updates an Area of Operations to the map\n   */ addAreaOfOperations(geometry) {\n        if (!this.ensureMap()) return false;\n        try {\n            // Remove existing layers if present\n            this.removeLayer(MAP_LAYERS.AREA_OF_OPERATIONS_OUTLINE);\n            this.removeLayer(MAP_LAYERS.AREA_OF_OPERATIONS_FILL);\n            // Add outline layer\n            this.addLayer(MAP_LAYERS.AREA_OF_OPERATIONS_OUTLINE, {\n                type: \"geojson\",\n                data: geometry\n            }, {\n                id: MAP_LAYERS.AREA_OF_OPERATIONS_OUTLINE,\n                type: \"line\",\n                source: MAP_LAYERS.AREA_OF_OPERATIONS_OUTLINE,\n                layout: {\n                    visibility: \"visible\"\n                },\n                paint: {\n                    \"line-color\": \"#0000FF\",\n                    \"line-width\": 3,\n                    \"line-opacity\": 0.9,\n                    \"line-dasharray\": [\n                        2,\n                        2\n                    ]\n                }\n            }, undefined, true // Make visible initially\n            );\n            // Add fill layer\n            this.addLayer(MAP_LAYERS.AREA_OF_OPERATIONS_FILL, {\n                type: \"geojson\",\n                data: geometry\n            }, {\n                id: MAP_LAYERS.AREA_OF_OPERATIONS_FILL,\n                type: \"fill\",\n                source: MAP_LAYERS.AREA_OF_OPERATIONS_FILL,\n                layout: {\n                    visibility: \"visible\"\n                },\n                paint: {\n                    \"fill-color\": \"#ADD8E6\",\n                    \"fill-opacity\": 0.2\n                }\n            }, undefined, true // Make visible initially\n            );\n            // Notify listeners\n            this.notifyListeners('layerAdded', MAP_LAYERS.AREA_OF_OPERATIONS_OUTLINE, true);\n            this.notifyListeners('layerAdded', MAP_LAYERS.AREA_OF_OPERATIONS_FILL, true);\n            return true;\n        } catch (error) {\n            console.error(\"Error adding AO layers:\", error);\n            return false;\n        }\n    }\n    /**\n   * Adds or updates an AO terrain grid to the map with sampling for visualization\n   * while preserving complete dataset for analysis\n   */ addAreaOfOperationsTerrain(gridCells) {\n        if (!this.ensureMap()) return false;\n        try {\n            // Remove existing terrain grid if present\n            this.removeLayer(MAP_LAYERS.AOTERRAIN_GRID);\n            if (!gridCells || gridCells.length === 0) {\n                console.warn(\"Empty grid cells provided to addAreaOfOperationsTerrain\");\n                return false;\n            }\n            console.log(`Processing ${gridCells.length} terrain grid cells for visualization`);\n            // RENDERING OPTIMIZATION: Use a sampling approach for visualization only\n            // This doesn't affect analysis, only how many cells we display on the map\n            if (gridCells.length > 20000) {\n                console.warn(`Rendering a very large number of cells (${gridCells.length}). Consider reducing buffer size if performance issues occur.`);\n            }\n            // Use all cells for visualization\n            const visualizationCells = gridCells;\n            // Calculate elevation range for color scaling using ALL cells for accurate representation\n            let minElevation = Infinity;\n            let maxElevation = -Infinity;\n            for (const cell of gridCells){\n                const elevation = cell.properties.elevation;\n                if (elevation < minElevation) minElevation = elevation;\n                if (elevation > maxElevation) maxElevation = elevation;\n            }\n            // Convert the SAMPLED grid cells to GeoJSON for visualization\n            const features = visualizationCells.map((cell)=>({\n                    type: \"Feature\",\n                    geometry: cell.geometry,\n                    properties: {\n                        elevation: cell.properties.elevation\n                    }\n                }));\n            const gridFeatureCollection = {\n                type: \"FeatureCollection\",\n                features\n            };\n            // First add the source safely\n            const sourceId = MAP_LAYERS.AOTERRAIN_GRID;\n            if (this.map.getSource(sourceId)) {\n                try {\n                    this.map.getSource(sourceId).setData(gridFeatureCollection);\n                } catch (sourceError) {\n                    console.warn(\"Error updating source, removing and recreating:\", sourceError);\n                    this.map.removeSource(sourceId);\n                    this.map.addSource(sourceId, {\n                        type: \"geojson\",\n                        data: gridFeatureCollection\n                    });\n                }\n            } else {\n                this.map.addSource(sourceId, {\n                    type: \"geojson\",\n                    data: gridFeatureCollection\n                });\n            }\n            // Then add the layer with ENHANCED COLOR MAPPING\n            try {\n                if (this.map.getLayer(sourceId)) {\n                    this.map.removeLayer(sourceId);\n                }\n                // Determine the best color scale approach based on elevation range\n                const elevationRange = maxElevation - minElevation;\n                const medianElevation = this.calculateMedianElevation(gridCells);\n                const useEnhancedScale = elevationRange > 300; // For areas with large elevation differences\n                // Create color expression based on distribution\n                let colorExpression;\n                if (useEnhancedScale) {\n                    // Enhanced scale for large elevation differences\n                    // This uses quantiles rather than linear interpolation\n                    const quartile1 = minElevation + (medianElevation - minElevation) * 0.5;\n                    const quartile3 = medianElevation + (maxElevation - medianElevation) * 0.5;\n                    const highPoint = medianElevation + (maxElevation - medianElevation) * 0.8;\n                    colorExpression = [\n                        \"interpolate\",\n                        [\n                            \"linear\"\n                        ],\n                        [\n                            \"get\",\n                            \"elevation\"\n                        ],\n                        minElevation,\n                        \"#0000FF\",\n                        quartile1,\n                        \"#00AAFF\",\n                        medianElevation,\n                        \"#00FF00\",\n                        quartile3,\n                        \"#FFFF00\",\n                        highPoint,\n                        \"#FF0000\",\n                        maxElevation,\n                        \"#800080\" // Highest elevation (Purple)\n                    ];\n                } else {\n                    // Standard linear scale for areas with moderate elevation change\n                    colorExpression = [\n                        \"interpolate\",\n                        [\n                            \"linear\"\n                        ],\n                        [\n                            \"get\",\n                            \"elevation\"\n                        ],\n                        minElevation,\n                        \"#0000FF\",\n                        minElevation + (maxElevation - minElevation) * 0.2,\n                        \"#00AAFF\",\n                        minElevation + (maxElevation - minElevation) * 0.4,\n                        \"#00FF00\",\n                        minElevation + (maxElevation - minElevation) * 0.6,\n                        \"#FFFF00\",\n                        minElevation + (maxElevation - minElevation) * 0.8,\n                        \"#FF0000\",\n                        maxElevation,\n                        \"#800080\" // 100% (Purple)\n                    ];\n                }\n                // Add the layer with improved color mapping\n                this.map.addLayer({\n                    id: sourceId,\n                    type: \"fill\",\n                    source: sourceId,\n                    layout: {\n                        visibility: \"visible\"\n                    },\n                    paint: {\n                        \"fill-color\": colorExpression,\n                        \"fill-opacity\": 0.7,\n                        \"fill-outline-color\": [\n                            \"interpolate\",\n                            [\n                                \"linear\"\n                            ],\n                            [\n                                \"get\",\n                                \"elevation\"\n                            ],\n                            minElevation,\n                            \"#0000AA\",\n                            maxElevation,\n                            \"#550055\" // Dark purple for high elevations\n                        ]\n                    }\n                });\n                // Notify listeners\n                this.notifyListeners('layerAdded', sourceId, true);\n                return true;\n            } catch (layerError) {\n                console.error(\"Error adding terrain grid layer:\", layerError);\n                return false;\n            }\n        } catch (error) {\n            console.error(\"Error adding AO terrain grid:\", error);\n            return false;\n        }\n    }\n    /**\n   * Helper method to calculate median elevation from grid cells\n   * @private\n   */ calculateMedianElevation(cells) {\n        // Extract all elevations and sort them\n        const elevations = cells.map((cell)=>cell.properties.elevation).sort((a, b)=>a - b);\n        // Get the middle value\n        const mid = Math.floor(elevations.length / 2);\n        if (elevations.length % 2 === 0) {\n            // Even number of elements - take the average of the two middle values\n            return (elevations[mid - 1] + elevations[mid]) / 2;\n        } else {\n            // Odd number of elements - take the middle value\n            return elevations[mid];\n        }\n    }\n    /**\n   * Fit the map to AO bounds\n   */ fitToAreaOfOperations(geometry) {\n        if (!this.ensureMap()) return false;\n        try {\n            if (!geometry || !geometry.features || geometry.features.length === 0) {\n                console.warn(\"Empty geometry provided to fitToAreaOfOperations\");\n                return false;\n            }\n            // Calculate bounds manually without turf as a fallback\n            let minLng = Infinity;\n            let minLat = Infinity;\n            let maxLng = -Infinity;\n            let maxLat = -Infinity;\n            try {\n                // First try with turf\n                const bbox = _turf_turf__WEBPACK_IMPORTED_MODULE_0__.bbox(geometry);\n                this.map.fitBounds([\n                    [\n                        bbox[0],\n                        bbox[1]\n                    ],\n                    [\n                        bbox[2],\n                        bbox[3]\n                    ]\n                ], {\n                    padding: 50,\n                    duration: 200\n                });\n                return true;\n            } catch (turfError) {\n                console.warn(\"Turf bbox calculation failed, using manual calculation:\", turfError);\n                // Manual calculation as fallback\n                geometry.features.forEach((feature)=>{\n                    if (feature.geometry.type === 'Polygon') {\n                        const coordinates = feature.geometry.coordinates[0];\n                        coordinates.forEach((coord)=>{\n                            minLng = Math.min(minLng, coord[0]);\n                            minLat = Math.min(minLat, coord[1]);\n                            maxLng = Math.max(maxLng, coord[0]);\n                            maxLat = Math.max(maxLat, coord[1]);\n                        });\n                    }\n                });\n                if (minLng !== Infinity && minLat !== Infinity && maxLng !== -Infinity && maxLat !== -Infinity) {\n                    this.map.fitBounds([\n                        [\n                            minLng,\n                            minLat\n                        ],\n                        [\n                            maxLng,\n                            maxLat\n                        ]\n                    ], {\n                        padding: 50,\n                        duration: 200\n                    });\n                    return true;\n                }\n            }\n            return false;\n        } catch (error) {\n            console.error(\"Error fitting to AO bounds:\", error);\n            return false;\n        }\n    }\n    /**\n   * Reset all layers\n   */ resetLayers() {\n        if (!this.ensureMap()) return false;\n        try {\n            for (const layerId of this.layers.keys()){\n                this.removeLayer(layerId);\n            }\n            this.layers.clear();\n            return true;\n        } catch (error) {\n            console.error('Error resetting layers:', error);\n            return false;\n        }\n    }\n    /**\n   * Ensure map is initialized\n   */ ensureMap() {\n        if (!this.map) {\n            console.warn('Map not initialized');\n            return false;\n        }\n        return true;\n    }\n    constructor(){\n        this.map = null;\n        this.layers = new Map();\n        this.listeners = new Set();\n        this.MAP_LAYERS = MAP_LAYERS;\n    }\n}\n// Singleton instance\nconst layerManager = new LayerManager();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/services/LayerManager.ts\n");

/***/ }),

/***/ "(ssr)/./src/app/services/MobileTowerService.ts":
/*!************************************************!*\
  !*** ./src/app/services/MobileTowerService.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FREQUENCY_BANDS: () => (/* binding */ FREQUENCY_BANDS),\n/* harmony export */   displayMobileTowers: () => (/* binding */ displayMobileTowers),\n/* harmony export */   filterMobileTowers: () => (/* binding */ filterMobileTowers),\n/* harmony export */   getFrequencyBandLabel: () => (/* binding */ getFrequencyBandLabel)\n/* harmony export */ });\n/* harmony import */ var mapbox_gl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mapbox-gl */ \"(ssr)/./node_modules/mapbox-gl/dist/mapbox-gl.js\");\n/* harmony import */ var mapbox_gl__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mapbox_gl__WEBPACK_IMPORTED_MODULE_0__);\n/**\n * MobileTowerService.ts\n * \n * Purpose:\n * Provides functionality to display and interact with mobile tower data from\n * Mapbox tilesets, with filtering and styling capabilities.\n * \n * This service:\n * - Loads mobile tower data from Mapbox tilesets\n * - Creates and manages map layers for towers and clusters\n * - Handles styling based on carrier (Telstra, Optus, Vodafone) and technology (3G, 4G, 5G)\n * - Implements zoom-responsive sizing for better performance at different zoom levels\n * - Provides filtering by carrier, technology, and frequency bands\n * - Manages interactive elements like popups and hover states\n */ \n// Constants for styling and filtering\n// Replace with your actual Mapbox tileset URL after uploading the data\nconst MAPBOX_SOURCE_URL = 'mapbox://intelaero.3zahha0o';\nconst MAPBOX_SOURCE_LAYER = 'mobile_towers-cniu5j'; // The source layer name in your tileset\n// Frequency bands for filtering (in MHz)\nconst FREQUENCY_BANDS = {\n    LOW_BAND: {\n        min: 700,\n        max: 900,\n        label: 'Low Band (700-900 MHz)'\n    },\n    MID_BAND_1: {\n        min: 1800,\n        max: 2100,\n        label: 'Mid Band (1800-2100 MHz)'\n    },\n    MID_BAND_2: {\n        min: 2300,\n        max: 2600,\n        label: 'Mid Band (2300-2600 MHz)'\n    },\n    HIGH_BAND: {\n        min: 3300,\n        max: 3800,\n        label: 'High Band (3.5 GHz)'\n    },\n    MMWAVE: {\n        min: 24000,\n        max: 40000,\n        label: 'mmWave (>24 GHz)'\n    }\n};\n// Layer and source IDs\nconst TOWER_SOURCE_ID = 'mobile-towers-source';\nconst TOWER_LAYER_ID = 'mobile-towers-unclustered-point';\nconst TOWER_LABELS_LAYER_ID = 'mobile-towers-labels';\n/**\n * Main function to display mobile towers on the map using Mapbox tilesets\n * \n * @param map Mapbox map instance\n * @param aoGeometry Area of Operations GeoJSON\n * @param setLayerVisibility Function to control layer visibility\n * @returns Promise<boolean> Success status\n */ async function displayMobileTowers(map, aoGeometry, setLayerVisibility) {\n    console.log('displayMobileTowers: starting', {\n        timestamp: new Date().toISOString(),\n        message: 'Setting up mobile tower display using Mapbox tilesets'\n    });\n    try {\n        // If layers already exist, just make them visible\n        if (map.getLayer(TOWER_LAYER_ID)) {\n            setLayerVisibility(TOWER_LAYER_ID, true);\n            if (map.getLayer(TOWER_LABELS_LAYER_ID)) {\n                setLayerVisibility(TOWER_LABELS_LAYER_ID, true);\n            }\n            console.log('displayMobileTowers: toggling existing layers', {\n                timestamp: new Date().toISOString(),\n                message: 'Showing existing tower layers'\n            });\n            return true;\n        }\n        // Add Mapbox vector tile source\n        if (!map.getSource(TOWER_SOURCE_ID)) {\n            map.addSource(TOWER_SOURCE_ID, {\n                type: 'vector',\n                url: MAPBOX_SOURCE_URL\n            });\n            console.log('displayMobileTowers: added Mapbox vector tile source', {\n                timestamp: new Date().toISOString(),\n                sourceId: TOWER_SOURCE_ID,\n                url: MAPBOX_SOURCE_URL,\n                message: 'Added Mapbox vector tile source for mobile towers'\n            });\n        }\n        // Add layer for individual towers with zoom-based sizing\n        if (!map.getLayer(TOWER_LAYER_ID)) {\n            map.addLayer({\n                id: TOWER_LAYER_ID,\n                type: 'circle',\n                source: TOWER_SOURCE_ID,\n                'source-layer': MAPBOX_SOURCE_LAYER,\n                paint: {\n                    // Style based on technology and zoom level\n                    'circle-radius': [\n                        'interpolate',\n                        [\n                            'linear'\n                        ],\n                        [\n                            'zoom'\n                        ],\n                        6,\n                        1,\n                        8,\n                        2,\n                        10,\n                        [\n                            'case',\n                            [\n                                '==',\n                                [\n                                    'get',\n                                    'technology'\n                                ],\n                                '5g'\n                            ],\n                            6,\n                            [\n                                '==',\n                                [\n                                    'get',\n                                    'technology'\n                                ],\n                                '4g'\n                            ],\n                            4,\n                            [\n                                '==',\n                                [\n                                    'get',\n                                    'technology'\n                                ],\n                                '3g'\n                            ],\n                            3,\n                            3 // Default for unknown\n                        ],\n                        14,\n                        [\n                            'case',\n                            [\n                                '==',\n                                [\n                                    'get',\n                                    'technology'\n                                ],\n                                '5g'\n                            ],\n                            10,\n                            [\n                                '==',\n                                [\n                                    'get',\n                                    'technology'\n                                ],\n                                '4g'\n                            ],\n                            8,\n                            [\n                                '==',\n                                [\n                                    'get',\n                                    'technology'\n                                ],\n                                '3g'\n                            ],\n                            6,\n                            6 // Default for unknown\n                        ]\n                    ],\n                    'circle-color': [\n                        'case',\n                        [\n                            '==',\n                            [\n                                'get',\n                                'technology'\n                            ],\n                            '5g'\n                        ],\n                        '#9932CC',\n                        [\n                            '==',\n                            [\n                                'get',\n                                'technology'\n                            ],\n                            '4g'\n                        ],\n                        '#4682B4',\n                        [\n                            '==',\n                            [\n                                'get',\n                                'technology'\n                            ],\n                            '3g'\n                        ],\n                        '#FFA500',\n                        '#888888' // Gray for unknown\n                    ],\n                    // Opacity based on zoom level\n                    'circle-opacity': [\n                        'interpolate',\n                        [\n                            'linear'\n                        ],\n                        [\n                            'zoom'\n                        ],\n                        6,\n                        0.5,\n                        10,\n                        0.8 // More opaque at high zoom\n                    ],\n                    'circle-stroke-width': [\n                        'interpolate',\n                        [\n                            'linear'\n                        ],\n                        [\n                            'zoom'\n                        ],\n                        8,\n                        0.5,\n                        12,\n                        2 // Thicker stroke at high zoom\n                    ],\n                    'circle-stroke-color': [\n                        'case',\n                        [\n                            '==',\n                            [\n                                'get',\n                                'carrier'\n                            ],\n                            'telstra'\n                        ],\n                        '#0066CC',\n                        [\n                            '==',\n                            [\n                                'get',\n                                'carrier'\n                            ],\n                            'optus'\n                        ],\n                        '#00CC00',\n                        [\n                            '==',\n                            [\n                                'get',\n                                'carrier'\n                            ],\n                            'vodafone'\n                        ],\n                        '#FF0000',\n                        '#FFFFFF' // White for others\n                    ]\n                }\n            });\n            console.log('displayMobileTowers: added tower layer', {\n                timestamp: new Date().toISOString(),\n                layerId: TOWER_LAYER_ID,\n                message: 'Added tower point layer with zoom-based sizing'\n            });\n        }\n        // Add tower labels layer (shown only when zoomed in)\n        if (!map.getLayer(TOWER_LABELS_LAYER_ID)) {\n            map.addLayer({\n                id: TOWER_LABELS_LAYER_ID,\n                type: 'symbol',\n                source: TOWER_SOURCE_ID,\n                'source-layer': MAPBOX_SOURCE_LAYER,\n                layout: {\n                    'text-field': [\n                        'concat',\n                        [\n                            'get',\n                            'name'\n                        ],\n                        '\\n',\n                        [\n                            'get',\n                            'technology'\n                        ],\n                        ' - ',\n                        [\n                            'get',\n                            'carrier'\n                        ]\n                    ],\n                    'text-font': [\n                        'DIN Offc Pro Medium',\n                        'Arial Unicode MS Bold'\n                    ],\n                    'text-size': 11,\n                    'text-offset': [\n                        0,\n                        1.5\n                    ],\n                    'text-anchor': 'top',\n                    'visibility': 'none' // Hidden by default, toggled based on zoom\n                },\n                paint: {\n                    'text-color': '#333',\n                    'text-halo-color': '#fff',\n                    'text-halo-width': 1\n                }\n            });\n            console.log('displayMobileTowers: added label layer', {\n                timestamp: new Date().toISOString(),\n                layerId: TOWER_LABELS_LAYER_ID,\n                message: 'Added tower label layer'\n            });\n        }\n        // Show labels only when zoomed in\n        map.on('zoom', ()=>{\n            const zoom = map.getZoom();\n            if (zoom > 12) {\n                if (map.getLayer(TOWER_LABELS_LAYER_ID)) {\n                    map.setLayoutProperty(TOWER_LABELS_LAYER_ID, 'visibility', 'visible');\n                }\n            } else {\n                if (map.getLayer(TOWER_LABELS_LAYER_ID)) {\n                    map.setLayoutProperty(TOWER_LABELS_LAYER_ID, 'visibility', 'none');\n                }\n            }\n        });\n        // Set up click handler for tower popups\n        map.on('click', TOWER_LAYER_ID, handleTowerClick);\n        // Change cursor to pointer when hovering over interactive elements\n        map.on('mouseenter', TOWER_LAYER_ID, ()=>{\n            map.getCanvas().style.cursor = 'pointer';\n        });\n        map.on('mouseleave', TOWER_LAYER_ID, ()=>{\n            map.getCanvas().style.cursor = '';\n        });\n        // Ensure all layers are visible\n        setLayerVisibility(TOWER_LAYER_ID, true);\n        console.log('displayMobileTowers: layers added and configured', {\n            timestamp: new Date().toISOString(),\n            layers: [\n                TOWER_LAYER_ID,\n                TOWER_LABELS_LAYER_ID\n            ],\n            message: 'Successfully added tower layers to map'\n        });\n        return true;\n    } catch (error) {\n        console.error('displayMobileTowers: error', {\n            timestamp: new Date().toISOString(),\n            error: error instanceof Error ? error.message : String(error),\n            message: 'Failed to display mobile tower data'\n        });\n        return false;\n    }\n}\n/**\n * Handle click on an individual tower\n */ function handleTowerClick(e) {\n    if (!e.features || e.features.length === 0) return;\n    const map = e.target;\n    const feature = e.features[0];\n    const props = feature.properties;\n    if (!props) return;\n    // Use the click event's coordinates instead of properties\n    // Vector tiles don't store coordinates in properties\n    const coordinates = e.lngLat;\n    // Calculate frequency in MHz for display (converting from Hz)\n    const frequency = props.frequency / 1000000;\n    const frequencyBand = getFrequencyBandLabel(props.frequency);\n    // Create popup content with detailed information\n    const content = `\n    <div class=\"text-xs p-1 max-w-xs\">\n      <h3 class=\"font-bold text-base\">${props.name || 'Unknown Site'}</h3>\n      <div class=\"grid grid-cols-2 gap-x-2 gap-y-1 mt-2\">\n        <div class=\"font-semibold\">Carrier:</div>\n        <div>${capitalizeFirstLetter(props.carrier)}</div>\n        \n        <div class=\"font-semibold\">Technology:</div>\n        <div>${props.technology.toUpperCase()}</div>\n        \n        <div class=\"font-semibold\">Frequency:</div>\n        <div>${frequency.toFixed(1)} MHz</div>\n        \n        <div class=\"font-semibold\">Band:</div>\n        <div>${frequencyBand}</div>\n        \n        ${props.height ? `\n          <div class=\"font-semibold\">Height:</div>\n          <div>${props.height} m</div>\n        ` : ''}\n        \n        ${props.azimuth ? `\n          <div class=\"font-semibold\">Azimuth:</div>\n          <div>${props.azimuth}°</div>\n        ` : ''}\n        \n        ${props.tilt ? `\n          <div class=\"font-semibold\">Tilt:</div>\n          <div>${props.tilt}°</div>\n        ` : ''}\n        \n        ${props.eirp ? `\n          <div class=\"font-semibold\">Power (EIRP):</div>\n          <div>${props.eirp} ${props.eirp_unit || 'W'}</div>\n        ` : ''}\n        \n        ${props.elevation ? `\n          <div class=\"font-semibold\">Elevation:</div>\n          <div>${props.elevation} m</div>\n        ` : ''}\n        \n        ${props.state ? `\n          <div class=\"font-semibold\">State:</div>\n          <div>${props.state}</div>\n        ` : ''}\n      </div>\n      \n      <!-- Add Create Repeater Button -->\n      <div class=\"mt-3 pt-2 border-t border-gray-200\">\n        <button \n          id=\"create-repeater-btn\" \n          class=\"w-full bg-purple-600 hover:bg-purple-700 text-white py-1 px-3 rounded text-xs font-medium flex items-center justify-center\"\n          data-tower-id=\"${props.id || ''}\"\n          data-tower-lng=\"${coordinates.lng}\"\n          data-tower-lat=\"${coordinates.lat}\"\n          data-tower-elevation=\"${props.elevation || 0}\"\n          data-tower-height=\"${props.height || 2}\"\n          data-tower-carrier=\"${props.carrier || ''}\"\n          data-tower-technology=\"${props.technology || ''}\"\n          data-tower-frequency=\"${frequency.toFixed(1)}\"\n          data-tower-azimuth=\"${props.azimuth || ''}\"\n          data-tower-tilt=\"${props.tilt || ''}\"\n          data-tower-eirp=\"${props.eirp || ''}\"\n          data-tower-eirp-unit=\"${props.eirp_unit || ''}\"\n        >\n          <span class=\"mr-1\">⚡️</span> Create Repeater From Tower\n        </button>\n      </div>\n    </div>\n  `;\n    // Create and display popup at the event's coordinates\n    const popup = new (mapbox_gl__WEBPACK_IMPORTED_MODULE_0___default().Popup)().setLngLat(coordinates).setHTML(content).addTo(map);\n    // Add event listener to the button after popup is added to the map\n    setTimeout(()=>{\n        const createRepeaterBtn = document.getElementById('create-repeater-btn');\n        if (createRepeaterBtn) {\n            createRepeaterBtn.addEventListener('click', (clickEvent)=>{\n                const target = clickEvent.currentTarget;\n                const towerData = {\n                    id: target.dataset.towerId,\n                    lng: parseFloat(target.dataset.towerLng || '0'),\n                    lat: parseFloat(target.dataset.towerLat || '0'),\n                    elevation: parseFloat(target.dataset.towerElevation || '0'),\n                    height: parseFloat(target.dataset.towerHeight || '2'),\n                    carrier: target.dataset.towerCarrier,\n                    technology: target.dataset.towerTechnology,\n                    frequency: target.dataset.towerFrequency,\n                    azimuth: target.dataset.towerAzimuth ? parseFloat(target.dataset.towerAzimuth) : undefined,\n                    tilt: target.dataset.towerTilt ? parseFloat(target.dataset.towerTilt) : undefined,\n                    eirp: target.dataset.towerEirp ? parseFloat(target.dataset.towerEirp) : undefined,\n                    eirp_unit: target.dataset.towerEirpUnit\n                };\n                // Dispatch custom event to be caught by the useTowerToMarker hook\n                // Fixed: Changed variable name to avoid conflict with the event parameter\n                const customEvent = new CustomEvent('tower:createRepeater', {\n                    detail: towerData\n                });\n                window.dispatchEvent(customEvent);\n                // Close the popup\n                popup.remove();\n            });\n        }\n    }, 100); // Small timeout to ensure DOM is ready\n}\n/**\n * Apply filters to the mobile towers layers\n * \n * @param map Mapbox map instance\n * @param filters Tower filter criteria\n * @returns Success status\n */ function filterMobileTowers(map, filters) {\n    console.log('filterMobileTowers: applying filters', {\n        timestamp: new Date().toISOString(),\n        filters,\n        message: 'Applying filters to mobile tower layers'\n    });\n    // Find all tower-related layers that need filtering\n    const towerLayers = [\n        TOWER_LAYER_ID,\n        TOWER_LABELS_LAYER_ID\n    ];\n    try {\n        // Build filter expression\n        let filterParts = [\n            'all'\n        ];\n        // Add carrier filter if specified\n        if (filters.carriers && filters.carriers.length > 0) {\n            // Use 'match' expression for better performance\n            filterParts.push([\n                'match',\n                [\n                    'get',\n                    'carrier'\n                ],\n                filters.carriers,\n                true,\n                false\n            ]);\n        }\n        // Add technology filter if specified\n        if (filters.technologies && filters.technologies.length > 0) {\n            // Use 'match' expression for better performance\n            filterParts.push([\n                'match',\n                [\n                    'get',\n                    'technology'\n                ],\n                filters.technologies,\n                true,\n                false\n            ]);\n        }\n        // Add frequency band filter if specified\n        if (filters.frequencyBands && filters.frequencyBands.length > 0) {\n            const frequencyFilter = [\n                'any'\n            ];\n            for (const band of filters.frequencyBands){\n                const bandRange = FREQUENCY_BANDS[band];\n                if (bandRange) {\n                    frequencyFilter.push([\n                        'all',\n                        [\n                            '>=',\n                            [\n                                '/',\n                                [\n                                    'get',\n                                    'frequency'\n                                ],\n                                1000000\n                            ],\n                            bandRange.min\n                        ],\n                        [\n                            '<=',\n                            [\n                                '/',\n                                [\n                                    'get',\n                                    'frequency'\n                                ],\n                                1000000\n                            ],\n                            bandRange.max\n                        ]\n                    ]);\n                }\n            }\n            filterParts.push(frequencyFilter);\n        }\n        console.log('filterMobileTowers: filter expression', {\n            timestamp: new Date().toISOString(),\n            expression: JSON.stringify(filterParts),\n            message: 'Created filter expression'\n        });\n        // Apply filter to all tower layers\n        for (const layerId of towerLayers){\n            if (map.getLayer(layerId)) {\n                map.setFilter(layerId, filterParts);\n            }\n        }\n        return true;\n    } catch (error) {\n        console.error('filterMobileTowers: error', {\n            timestamp: new Date().toISOString(),\n            error: error instanceof Error ? error.message : String(error),\n            message: 'Failed to apply filters to tower layers'\n        });\n        return false;\n    }\n}\n/**\n * Get the frequency band label for a given frequency\n * \n * @param frequency Frequency in Hz\n * @returns Frequency band label\n */ function getFrequencyBandLabel(frequency) {\n    // Convert to MHz for comparison\n    const freqMHz = frequency / 1000000;\n    for (const [band, range] of Object.entries(FREQUENCY_BANDS)){\n        if (freqMHz >= range.min && freqMHz <= range.max) {\n            return range.label;\n        }\n    }\n    return 'Other';\n}\n/**\n * Utility function to capitalize the first letter of a string\n */ function capitalizeFirstLetter(string) {\n    if (!string) return '';\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/services/MobileTowerService.ts\n");

/***/ }),

/***/ "(ssr)/./src/app/services/TreeHeightCanvas.tsx":
/*!***********************************************!*\
  !*** ./src/app/services/TreeHeightCanvas.tsx ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TreeHeightCanvas: () => (/* binding */ TreeHeightCanvas)\n/* harmony export */ });\n/**\n * TreeHeightCanvas.tsx\n * \n * Purpose:\n * Manages the canvas DOM element for tree height visualization overlay.\n * Handles canvas creation, positioning, sizing, and interaction methods.\n * Provides a clean interface for canvas operations without React dependencies.\n * \n * This component:\n * - Creates and positions canvas overlay on map\n * - Handles canvas resizing and synchronization with map\n * - Provides methods for canvas visibility control\n * - Enables pixel-level height value extraction\n * - Manages canvas lifecycle and cleanup\n * \n * Related Files:\n * - TreeHeightSystem.ts: Core rendering engine\n * - useTreeHeights.ts: React integration hook\n * - MapboxLayerHandler.tsx: Layer coordination\n */ class TreeHeightCanvas {\n    constructor(map){\n        this.canvas = null;\n        this.ctx = null;\n        this.isVisible = false;\n        this.resizeHandler = null;\n        this.map = map;\n        this.initialize();\n    }\n    /**\n   * Initialize the canvas overlay\n   */ initialize() {\n        console.log(\"🎨 Initializing TreeHeightCanvas\");\n        // Create canvas element\n        this.canvas = document.createElement('canvas');\n        this.canvas.setAttribute('data-tree-height-canvas', 'true'); // Identifier for TreeHeightSystem\n        // Style the canvas overlay\n        this.canvas.style.position = 'absolute';\n        this.canvas.style.top = '0px';\n        this.canvas.style.left = '0px';\n        this.canvas.style.pointerEvents = 'none';\n        this.canvas.style.zIndex = '10';\n        this.canvas.style.display = 'none';\n        this.canvas.style.mixBlendMode = 'multiply'; // Blend with map for better visuals\n        // Get canvas context\n        this.ctx = this.canvas.getContext('2d');\n        if (!this.ctx) {\n            console.error(\"Failed to get canvas 2D context\");\n            return;\n        }\n        // Add canvas to map container\n        const mapContainer = this.map.getContainer();\n        mapContainer.appendChild(this.canvas);\n        // Set up resize handling\n        this.resizeHandler = this.handleResize.bind(this);\n        this.map.on('resize', this.resizeHandler);\n        // Initial size\n        this.updateCanvasSize();\n        console.log(\"✅ TreeHeightCanvas initialized\");\n    }\n    /**\n   * Handle map resize events\n   */ handleResize() {\n        this.updateCanvasSize();\n    }\n    /**\n   * Update canvas size to match map\n   */ updateCanvasSize() {\n        if (!this.canvas) return;\n        const mapCanvas = this.map.getCanvas();\n        // Set canvas size to match map canvas exactly\n        this.canvas.width = mapCanvas.width;\n        this.canvas.height = mapCanvas.height;\n        this.canvas.style.width = `${mapCanvas.clientWidth}px`;\n        this.canvas.style.height = `${mapCanvas.clientHeight}px`;\n        console.log(`📏 Canvas resized to: ${mapCanvas.width}x${mapCanvas.height} (${mapCanvas.clientWidth}x${mapCanvas.clientHeight})`);\n    }\n    /**\n   * Set canvas visibility\n   */ setVisible(visible) {\n        if (!this.canvas) return;\n        this.isVisible = visible;\n        this.canvas.style.display = visible ? 'block' : 'none';\n        console.log(`👁️ Canvas visibility: ${visible ? 'visible' : 'hidden'}`);\n    }\n    /**\n   * Check if canvas is visible\n   */ getVisible() {\n        return this.isVisible;\n    }\n    /**\n   * Clear the canvas\n   */ clear() {\n        if (!this.canvas || !this.ctx) return;\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        console.log(\"🧹 Canvas cleared\");\n    }\n    /**\n   * Get tree height value at specific canvas coordinates\n   */ getHeightAtPoint(canvasX, canvasY) {\n        if (!this.canvas || !this.ctx || !this.isVisible) {\n            return null;\n        }\n        try {\n            // Ensure coordinates are within canvas bounds\n            const x = Math.floor(canvasX);\n            const y = Math.floor(canvasY);\n            if (x < 0 || y < 0 || x >= this.canvas.width || y >= this.canvas.height) {\n                console.warn(`Click coordinates ${x}, ${y} outside canvas bounds`);\n                return null;\n            }\n            // Get pixel data\n            const imageData = this.ctx.getImageData(x, y, 1, 1);\n            const pixel = imageData.data;\n            // Tree height is stored in the red channel\n            const heightValue = pixel[0];\n            const hasData = pixel[3] > 0; // Alpha channel indicates if there's data\n            console.log(`📊 Pixel data at (${x}, ${y}): R=${pixel[0]} G=${pixel[1]} B=${pixel[2]} A=${pixel[3]}`);\n            return hasData && heightValue > 0 ? heightValue : null;\n        } catch (error) {\n            console.error(\"Error reading canvas pixel data:\", error);\n            return null;\n        }\n    }\n    /**\n   * Get canvas dimensions\n   */ getDimensions() {\n        if (!this.canvas) return null;\n        return {\n            width: this.canvas.width,\n            height: this.canvas.height\n        };\n    }\n    /**\n   * Get canvas element (for direct access if needed)\n   */ getCanvasElement() {\n        return this.canvas;\n    }\n    /**\n   * Get canvas context (for direct rendering if needed)\n   */ getContext() {\n        return this.ctx;\n    }\n    /**\n   * Check if canvas is ready for use\n   */ isReady() {\n        return !!(this.canvas && this.ctx);\n    }\n    /**\n   * Set canvas blend mode\n   */ setBlendMode(blendMode) {\n        if (!this.canvas) return;\n        this.canvas.style.mixBlendMode = blendMode;\n        console.log(`🎨 Canvas blend mode set to: ${blendMode}`);\n    }\n    /**\n   * Set canvas opacity\n   */ setOpacity(opacity) {\n        if (!this.canvas) return;\n        const clampedOpacity = Math.max(0, Math.min(1, opacity));\n        this.canvas.style.opacity = clampedOpacity.toString();\n        console.log(`🌫️ Canvas opacity set to: ${clampedOpacity}`);\n    }\n    /**\n   * Set cursor style when hovering over tree areas\n   */ setCursor(cursor) {\n        if (!this.canvas) return;\n        const mapContainer = this.map.getContainer();\n        mapContainer.style.cursor = cursor;\n        console.log(`👆 Map cursor set to: ${cursor}`);\n    }\n    /**\n   * Reset cursor to default\n   */ resetCursor() {\n        const mapContainer = this.map.getContainer();\n        mapContainer.style.cursor = '';\n        console.log(`👆 Map cursor reset`);\n    }\n    /**\n   * Get canvas statistics for debugging\n   */ getStats() {\n        return {\n            isReady: this.isReady(),\n            isVisible: this.isVisible,\n            dimensions: this.getDimensions(),\n            hasContext: !!this.ctx\n        };\n    }\n    /**\n   * Destroy the canvas and clean up resources\n   */ destroy() {\n        console.log(\"🧹 Destroying TreeHeightCanvas\");\n        // Remove resize handler\n        if (this.resizeHandler) {\n            this.map.off('resize', this.resizeHandler);\n            this.resizeHandler = null;\n        }\n        // Remove canvas from DOM\n        if (this.canvas && this.canvas.parentNode) {\n            this.canvas.parentNode.removeChild(this.canvas);\n        }\n        // Clear references\n        this.canvas = null;\n        this.ctx = null;\n        this.isVisible = false;\n        console.log(\"✅ TreeHeightCanvas destroyed\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/services/TreeHeightCanvas.tsx\n");

/***/ }),

/***/ "(ssr)/./src/app/services/TreeHeightSystem.tsx":
/*!***********************************************!*\
  !*** ./src/app/services/TreeHeightSystem.tsx ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   treeHeightSystem: () => (/* binding */ treeHeightSystem)\n/* harmony export */ });\n/**\n * TreeHeightSystem.ts\n * \n * Purpose:\n * Core service for tree height visualization. Handles tile fetching, caching,\n * image processing, color mapping, and rendering coordination.\n * Updated for rasterarray tileset with actual height data.\n */ // Configuration constants - UPDATED for new rasterarray tileset\nconst TREE_HEIGHT_CONFIG = {\n    MIN_ZOOM: 10,\n    MAX_ZOOM: 13,\n    TILE_SIZE: 256,\n    MAX_CACHED_TILES: 100,\n    // NEW RASTERARRAY TILESET ID\n    TILE_URL: 'https://api.mapbox.com/v4/intelaero.forest-height-aus-data/{z}/{x}/{y}.png',\n    ACCESS_TOKEN: 'sk.eyJ1IjoiaW50ZWxhZXJvIiwiYSI6ImNtYjdpcG51YTBhYmwyam4wd204ZXlmcHUifQ.hhR2MhgqopLEtNSg05zigg'\n};\n// Color mapping for tree heights\nconst TREE_HEIGHT_COLORS = {\n    0: 'rgba(0,0,0,0)',\n    2: 'rgba(50,200,50,0.8)',\n    5: 'rgba(0,255,0,0.8)',\n    10: 'rgba(255,255,0,0.8)',\n    20: 'rgba(255,165,0,0.9)',\n    30: 'rgba(255,50,50,0.9)',\n    40: 'rgba(200,0,200,1.0)' // Purple for very tall trees\n};\nclass TreeHeightSystem {\n    initialize(map) {\n        this.map = map;\n        this.isInitialized = true;\n        console.log(\"🌲 TreeHeightSystem initialized for rasterarray tileset\");\n    }\n    getTreeHeightColor(heightValue) {\n        const heights = Object.keys(TREE_HEIGHT_COLORS).map(Number).sort((a, b)=>a - b);\n        for(let i = 0; i < heights.length; i++){\n            if (heightValue <= heights[i]) {\n                return TREE_HEIGHT_COLORS[heights[i]];\n            }\n        }\n        return TREE_HEIGHT_COLORS[40];\n    }\n    parseColor(color) {\n        const match = color.match(/rgba?\\(([^)]+)\\)/);\n        if (!match) return {\n            r: 0,\n            g: 0,\n            b: 0,\n            a: 0\n        };\n        const values = match[1].split(',').map((v)=>parseFloat(v.trim()));\n        return {\n            r: values[0] || 0,\n            g: values[1] || 0,\n            b: values[2] || 0,\n            a: Math.floor((values[3] || 1) * 255)\n        };\n    }\n    // FIXED: Added missing return statement\n    async fetchTreeHeightTile(zoom, x, y) {\n        const tileKey = `${zoom}/${x}/${y}`;\n        if (this.tileCache.has(tileKey)) {\n            console.log(`📋 Using cached tile: ${tileKey}`);\n            return this.tileCache.get(tileKey);\n        }\n        try {\n            const url = TREE_HEIGHT_CONFIG.TILE_URL.replace('{z}', zoom.toString()).replace('{x}', x.toString()).replace('{y}', y.toString()) + `?access_token=${TREE_HEIGHT_CONFIG.ACCESS_TOKEN}`;\n            console.log(`🔍 Fetching tile ${tileKey} from: ${url}`);\n            const response = await fetch(url, {\n                cache: 'force-cache'\n            });\n            console.log(`📡 Tile ${tileKey} response: ${response.status} ${response.statusText}`);\n            if (!response.ok) {\n                const errorText = await response.text();\n                console.log(`❌ Tile ${tileKey} error: ${errorText}`);\n                throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n            }\n            const blob = await response.blob();\n            console.log(`📦 Tile ${tileKey} blob size: ${blob.size} bytes`);\n            const imageData = await this.processImageBlob(blob);\n            if (imageData) {\n                if (this.tileCache.size >= TREE_HEIGHT_CONFIG.MAX_CACHED_TILES) {\n                    const firstKey = this.tileCache.keys().next().value;\n                    this.tileCache.delete(firstKey);\n                }\n                this.tileCache.set(tileKey, imageData);\n                // Enhanced logging for rasterarray data\n                console.log(`✅ Tile ${tileKey} loaded successfully`);\n                console.log(`🔍 First 8 pixels (RGBA):`, imageData.data.slice(0, 32));\n                console.log(`🎯 Red channel values:`, [\n                    imageData.data[0],\n                    imageData.data[4],\n                    imageData.data[8],\n                    imageData.data[12],\n                    imageData.data[16],\n                    imageData.data[20],\n                    imageData.data[24],\n                    imageData.data[28]\n                ]);\n                console.log(`🎯 Non-zero red values count:`, Array.from(imageData.data).filter((val, i)=>i % 4 === 0 && val > 0).length);\n                // ADDED: Return the imageData\n                return imageData;\n            }\n        } catch (error) {\n            console.error(`❌ Failed to fetch tile ${tileKey}:`, error);\n            return null;\n        }\n        return null;\n    }\n    async processImageBlob(blob) {\n        return new Promise((resolve)=>{\n            const img = new Image();\n            img.crossOrigin = 'anonymous';\n            img.onload = ()=>{\n                try {\n                    const canvas = document.createElement('canvas');\n                    canvas.width = TREE_HEIGHT_CONFIG.TILE_SIZE;\n                    canvas.height = TREE_HEIGHT_CONFIG.TILE_SIZE;\n                    const ctx = canvas.getContext('2d');\n                    if (!ctx) {\n                        resolve(null);\n                        return;\n                    }\n                    ctx.drawImage(img, 0, 0, TREE_HEIGHT_CONFIG.TILE_SIZE, TREE_HEIGHT_CONFIG.TILE_SIZE);\n                    const imageData = ctx.getImageData(0, 0, TREE_HEIGHT_CONFIG.TILE_SIZE, TREE_HEIGHT_CONFIG.TILE_SIZE);\n                    resolve(imageData);\n                } catch (error) {\n                    console.error('❌ Error processing image blob:', error);\n                    resolve(null);\n                }\n            };\n            img.onerror = ()=>{\n                console.error('❌ Failed to load image blob');\n                resolve(null);\n            };\n            img.src = URL.createObjectURL(blob);\n        });\n    }\n    getTileBounds(zoom, x, y) {\n        const scale = Math.pow(2, zoom);\n        return {\n            west: x / scale * 360 - 180,\n            north: Math.atan(Math.sinh(Math.PI * (1 - 2 * y / scale))) * 180 / Math.PI,\n            east: (x + 1) / scale * 360 - 180,\n            south: Math.atan(Math.sinh(Math.PI * (1 - 2 * (y + 1) / scale))) * 180 / Math.PI\n        };\n    }\n    tileIntersectsAO(zoom, x, y, isPointInAO) {\n        const bounds = this.getTileBounds(zoom, x, y);\n        const checkPoints = [\n            [\n                bounds.west,\n                bounds.north\n            ],\n            [\n                bounds.east,\n                bounds.north\n            ],\n            [\n                bounds.west,\n                bounds.south\n            ],\n            [\n                bounds.east,\n                bounds.south\n            ],\n            [\n                (bounds.west + bounds.east) / 2,\n                (bounds.north + bounds.south) / 2\n            ]\n        ];\n        return checkPoints.some(([lng, lat])=>isPointInAO(lng, lat));\n    }\n    getVisibleTiles(zoom) {\n        if (!this.map) return [];\n        const bounds = this.map.getBounds();\n        const scale = Math.pow(2, zoom);\n        const minTileX = Math.floor((bounds.getWest() + 180) / 360 * scale);\n        const maxTileX = Math.floor((bounds.getEast() + 180) / 360 * scale);\n        const minTileY = Math.floor((1 - Math.log(Math.tan(bounds.getNorth() * Math.PI / 180) + 1 / Math.cos(bounds.getNorth() * Math.PI / 180)) / Math.PI) / 2 * scale);\n        const maxTileY = Math.floor((1 - Math.log(Math.tan(bounds.getSouth() * Math.PI / 180) + 1 / Math.cos(bounds.getSouth() * Math.PI / 180)) / Math.PI) / 2 * scale);\n        const tiles = [];\n        for(let x = minTileX; x <= maxTileX; x++){\n            for(let y = minTileY; y <= maxTileY; y++){\n                tiles.push({\n                    x,\n                    y\n                });\n            }\n        }\n        return tiles;\n    }\n    async renderTreeHeights(options) {\n        if (!this.isInitialized || !this.map) {\n            throw new Error(\"TreeHeightSystem not initialized\");\n        }\n        const { isPointInAO, onProgress } = options;\n        console.log(\"🎨 Starting tree height rendering with rasterarray data\");\n        const currentZoom = Math.floor(this.map.getZoom());\n        const clampedZoom = Math.min(TREE_HEIGHT_CONFIG.MAX_ZOOM, Math.max(TREE_HEIGHT_CONFIG.MIN_ZOOM, currentZoom));\n        console.log(`🎯 Rendering at zoom ${clampedZoom} (actual: ${currentZoom})`);\n        const visibleTiles = this.getVisibleTiles(clampedZoom);\n        const totalTiles = visibleTiles.length;\n        console.log(`📊 Processing ${totalTiles} tiles`);\n        let processedTiles = 0;\n        let successfulTiles = 0;\n        let skippedTiles = 0;\n        for (const tile of visibleTiles){\n            const { x, y } = tile;\n            if (!this.tileIntersectsAO(clampedZoom, x, y, isPointInAO)) {\n                skippedTiles++;\n                continue;\n            }\n            try {\n                const tileData = await this.fetchTreeHeightTile(clampedZoom, x, y);\n                processedTiles++;\n                if (onProgress) {\n                    onProgress(processedTiles / totalTiles);\n                }\n                if (!tileData) continue;\n                successfulTiles++;\n                await this.renderTile(clampedZoom, x, y, tileData, isPointInAO);\n            } catch (error) {\n                console.warn(`❌ Error processing tile ${clampedZoom}/${x}/${y}:`, error);\n            }\n        }\n        console.log(`✅ Rendering complete: ${successfulTiles}/${processedTiles} tiles successful, ${skippedTiles} skipped (outside AO)`);\n    }\n    async renderTile(zoom, x, y, tileData, isPointInAO) {\n        if (!this.map) return;\n        const canvas = document.querySelector('canvas[data-tree-height-canvas]');\n        if (!canvas) {\n            console.warn(\"🎨 No canvas found with data-tree-height-canvas attribute\");\n            return;\n        }\n        const ctx = canvas.getContext('2d');\n        if (!ctx) return;\n        const tileBounds = this.getTileBounds(zoom, x, y);\n        const topLeft = this.map.project([\n            tileBounds.west,\n            tileBounds.north\n        ]);\n        const bottomRight = this.map.project([\n            tileBounds.east,\n            tileBounds.south\n        ]);\n        const tileWidth = bottomRight.x - topLeft.x;\n        const tileHeight = bottomRight.y - topLeft.y;\n        const coloredCanvas = document.createElement('canvas');\n        coloredCanvas.width = TREE_HEIGHT_CONFIG.TILE_SIZE;\n        coloredCanvas.height = TREE_HEIGHT_CONFIG.TILE_SIZE;\n        const colorCtx = coloredCanvas.getContext('2d');\n        if (!colorCtx) return;\n        const coloredImageData = colorCtx.createImageData(TREE_HEIGHT_CONFIG.TILE_SIZE, TREE_HEIGHT_CONFIG.TILE_SIZE);\n        let pixelsWithData = 0;\n        for(let i = 0; i < tileData.data.length; i += 4){\n            const pixelX = i / 4 % TREE_HEIGHT_CONFIG.TILE_SIZE;\n            const pixelY = Math.floor(i / 4 / TREE_HEIGHT_CONFIG.TILE_SIZE);\n            const pixelLng = tileBounds.west + pixelX / TREE_HEIGHT_CONFIG.TILE_SIZE * (tileBounds.east - tileBounds.west);\n            const pixelLat = tileBounds.north + pixelY / TREE_HEIGHT_CONFIG.TILE_SIZE * (tileBounds.south - tileBounds.north);\n            if (!isPointInAO(pixelLng, pixelLat)) {\n                coloredImageData.data[i] = 0;\n                coloredImageData.data[i + 1] = 0;\n                coloredImageData.data[i + 2] = 0;\n                coloredImageData.data[i + 3] = 0;\n                continue;\n            }\n            // For rasterarray, height should be in red channel\n            const heightValue = tileData.data[i];\n            if (heightValue > 0) {\n                pixelsWithData++;\n                const color = this.getTreeHeightColor(heightValue);\n                const rgba = this.parseColor(color);\n                coloredImageData.data[i] = rgba.r;\n                coloredImageData.data[i + 1] = rgba.g;\n                coloredImageData.data[i + 2] = rgba.b;\n                coloredImageData.data[i + 3] = rgba.a;\n            } else {\n                coloredImageData.data[i] = 0;\n                coloredImageData.data[i + 1] = 0;\n                coloredImageData.data[i + 2] = 0;\n                coloredImageData.data[i + 3] = 0;\n            }\n        }\n        if (pixelsWithData > 0) {\n            colorCtx.putImageData(coloredImageData, 0, 0);\n            ctx.drawImage(coloredCanvas, topLeft.x, topLeft.y, tileWidth, tileHeight);\n            console.log(`🎨 Rendered tile ${zoom}/${x}/${y} with ${pixelsWithData} pixels containing height data`);\n        } else {\n            console.log(`⚠️ Tile ${zoom}/${x}/${y} had no pixels with height data > 0`);\n        }\n    }\n    clearCache() {\n        this.tileCache.clear();\n        console.log(\"🧹 Tree height tile cache cleared\");\n    }\n    getCacheStats() {\n        return {\n            size: this.tileCache.size,\n            maxSize: TREE_HEIGHT_CONFIG.MAX_CACHED_TILES\n        };\n    }\n    cleanup() {\n        this.clearCache();\n        this.map = null;\n        this.isInitialized = false;\n        console.log(\"🧹 TreeHeightSystem cleanup complete\");\n    }\n    constructor(){\n        this.map = null;\n        this.tileCache = new Map();\n        this.isInitialized = false;\n    }\n}\nconst treeHeightSystem = new TreeHeightSystem();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/services/TreeHeightSystem.tsx\n");

/***/ }),

/***/ "(ssr)/./src/app/types/PremiumTypes.ts":
/*!***************************************!*\
  !*** ./src/app/types/PremiumTypes.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TierLevel: () => (/* binding */ TierLevel)\n/* harmony export */ });\n// PremiumTypes.ts\nvar TierLevel = /*#__PURE__*/ function(TierLevel) {\n    TierLevel[TierLevel[\"FREE\"] = 0] = \"FREE\";\n    TierLevel[TierLevel[\"COMMUNITY\"] = 1] = \"COMMUNITY\";\n    TierLevel[TierLevel[\"COMMERCIAL\"] = 2] = \"COMMERCIAL\";\n    return TierLevel;\n}({});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvYXBwL3R5cGVzL1ByZW1pdW1UeXBlcy50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsa0JBQWtCO0FBQ1gsdUNBQUtBOzs7O1dBQUFBO01BSVgiLCJzb3VyY2VzIjpbIi9Vc2Vycy9raWVyYW5ibGFpci9naXQvZmEvZmxpZ2h0LWFzc3VyYW5jZS9zcmMvYXBwL3R5cGVzL1ByZW1pdW1UeXBlcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBQcmVtaXVtVHlwZXMudHNcbmV4cG9ydCBlbnVtIFRpZXJMZXZlbCB7XG4gIEZSRUUgPSAwLFxuICBDT01NVU5JVFkgPSAxLFxuICBDT01NRVJDSUFMID0gMlxufVxuXG4vLyBGZWF0dXJlIElEcyB3aXRoIHRpZXIgcmVxdWlyZW1lbnRzXG5leHBvcnQgdHlwZSBGZWF0dXJlSWQgPSBcbiAgfCAnYWRkX2djcycgXG4gIHwgJ2FkZF9vYnNlcnZlcicgXG4gIHwgJ2FkZF9yZXBlYXRlcidcbiAgfCAnc3RhdGlvbl9hbmFseXNpcydcbiAgfCAnbWVyZ2VkX2FuYWx5c2lzJyBcbiAgfCAnc3RhdGlvbl9sb3NfYW5hbHlzaXMnXG4gIHwgJ2ZsaWdodF9wYXRoX2FuYWx5c2lzJ1xuICB8ICd0ZXJyYWluX2FuYWx5c2lzJ1xuICB8ICdsb2NhbF9wb3dlcmxpbmVzJ1xuICB8ICdodl9wb3dlcmxpbmVzJ1xuICB8ICdhaXJzcGFjZV9hbmFseXNpcydcbiAgfCAnZXh0ZW5kZWRfZ3JpZF9yYW5nZSdcbiAgfCAnaGlnaF9yZXNvbHV0aW9uX2dyaWQnXG4gIHwgJ21vYmlsZV90b3dlcl9hbmFseXNpcydcbiAgfCAndHJlZV9oZWlnaHRzJzsiXSwibmFtZXMiOlsiVGllckxldmVsIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./src/app/types/PremiumTypes.ts\n");

/***/ }),

/***/ "(ssr)/./src/app/utils/TerrainUtils.ts":
/*!***************************************!*\
  !*** ./src/app/utils/TerrainUtils.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearElevationCache: () => (/* binding */ clearElevationCache),\n/* harmony export */   ensureDEMLoaded: () => (/* binding */ ensureDEMLoaded),\n/* harmony export */   getReliableTerrainElevations: () => (/* binding */ getReliableTerrainElevations),\n/* harmony export */   preloadTiles: () => (/* binding */ preloadTiles),\n/* harmony export */   validateDEMData: () => (/* binding */ validateDEMData)\n/* harmony export */ });\n/* harmony import */ var _turf_turf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @turf/turf */ \"(ssr)/./node_modules/@turf/helpers/dist/esm/index.js\");\n/* harmony import */ var _turf_turf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @turf/turf */ \"(ssr)/./node_modules/@turf/bbox/dist/esm/index.js\");\n/* harmony import */ var _turf_turf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @turf/turf */ \"(ssr)/./node_modules/@turf/point-grid/dist/esm/index.js\");\n\n// In-memory cache for elevation results\nconst elevationCache = new Map();\n// Utility to generate cache key from coordinates\nfunction getCacheKey(lon, lat) {\n    return `${lon.toFixed(4)}|${lat.toFixed(4)}`;\n}\n/**\n * Gets reliable terrain elevations using a robust approach with minimal retries.\n * Optimized for flight path processing with caching, parallel queries, and preloading.\n * Does not cache negative elevation values < 0.05 and requeries them if requested again.\n * \n * @param map - The Mapbox GL map instance\n * @param coordinates - Array of [longitude, latitude] coordinates to query\n * @param progressCallback - Optional callback for reporting progress (0-100)\n * @returns Array of elevations for each coordinate\n */ async function getReliableTerrainElevations(map, coordinates, progressCallback) {\n    console.log(`[${new Date().toISOString()}] [TerrainUtils] Getting reliable terrain elevations for ${coordinates.length} coordinates`);\n    const elevations = new Array(coordinates.length).fill(0);\n    const CHUNK_SIZE = 50; // Smaller chunk size for better performance\n    for(let i = 0; i < coordinates.length; i += CHUNK_SIZE){\n        const chunk = coordinates.slice(i, i + CHUNK_SIZE);\n        // Process chunk concurrently\n        await Promise.all(chunk.map(async ([lon, lat], j)=>{\n            const cacheKey = getCacheKey(lon, lat);\n            // Check cache and validate elevation\n            if (elevationCache.has(cacheKey)) {\n                const cachedElevation = elevationCache.get(cacheKey);\n                if (cachedElevation >= 0.05) {\n                    elevations[i + j] = cachedElevation;\n                    return;\n                } else {\n                    // Remove invalid cached value to force requery\n                    elevationCache.delete(cacheKey);\n                    console.log(`[${new Date().toISOString()}] [TerrainUtils] Removed invalid cached elevation ${cachedElevation}m for [${lon}, ${lat}]`);\n                }\n            }\n            let elevation = null;\n            for(let attempt = 1; attempt <= 3; attempt++){\n                // Reduced delays: 50ms, 100ms, 150ms\n                await new Promise((resolve)=>setTimeout(resolve, 50 * attempt));\n                try {\n                    const elev = map.queryTerrainElevation([\n                        lon,\n                        lat\n                    ]);\n                    if (elev !== null) {\n                        elevation = elev;\n                        console.log(`[${new Date().toISOString()}] [TerrainUtils] Got elevation ${elevation.toFixed(1)}m for [${lon}, ${lat}] on attempt ${attempt}`);\n                        break;\n                    }\n                    console.warn(`[${new Date().toISOString()}] [TerrainUtils] Attempt ${attempt} returned null for [${lon}, ${lat}]`);\n                } catch (err) {\n                    console.error(`[${new Date().toISOString()}] [TerrainUtils] Error on attempt ${attempt} for [${lon}, ${lat}]:`, err);\n                }\n            }\n            if (elevation === null) {\n                console.warn(`[${new Date().toISOString()}] [TerrainUtils] Using fallback elevation for [${lon}, ${lat}]`);\n                // Use average of valid elevations in current chunk\n                const neighbors = elevations.slice(0, i + j).filter((e)=>e !== 0);\n                elevation = neighbors.length > 0 ? neighbors.reduce((sum, e)=>sum + e, 0) / neighbors.length : 0;\n            }\n            elevations[i + j] = elevation;\n            // Only cache elevations >= 0.05\n            if (elevation >= 0.05) {\n                elevationCache.set(cacheKey, elevation);\n            } else {\n                console.log(`[${new Date().toISOString()}] [TerrainUtils] Skipped caching elevation ${elevation}m for [${lon}, ${lat}] (below 0.05m)`);\n            }\n        }));\n        // Report progress\n        if (progressCallback) {\n            progressCallback(Math.min(100, Math.round((i + CHUNK_SIZE) / coordinates.length * 100)));\n        }\n        // Reduced delay between chunks\n        await new Promise((resolve)=>setTimeout(resolve, 20));\n    }\n    return elevations;\n}\n/**\n * Ensures that DEM data is loaded, with limited retries and dynamic test points.\n * @param map - The Mapbox GL map instance\n * @param testPoints - Optional array of test coordinates for validation\n * @returns Promise that resolves when DEM is ready or after max retries\n */ async function ensureDEMLoaded(map, testPoints) {\n    console.log(`[${new Date().toISOString()}] [TerrainUtils] Ensuring DEM is fully loaded...`);\n    return new Promise((resolve)=>{\n        let retries = 0;\n        const maxRetries = 3;\n        const checkDEM = async ()=>{\n            if (map.isSourceLoaded('mapbox-dem')) {\n                const isValid = await validateDEMData(map, testPoints);\n                if (isValid) {\n                    console.log(`[${new Date().toISOString()}] [TerrainUtils] ✅ DEM fully loaded and validated`);\n                    resolve();\n                } else if (retries < maxRetries) {\n                    retries++;\n                    console.log(`[${new Date().toISOString()}] [TerrainUtils] DEM validation failed, retrying (${retries}/${maxRetries})...`);\n                    setTimeout(checkDEM, 500);\n                } else {\n                    console.warn(`[${new Date().toISOString()}] [TerrainUtils] DEM validation failed after ${maxRetries} retries, proceeding with warning`);\n                    resolve();\n                }\n            } else {\n                console.log(`[${new Date().toISOString()}] [TerrainUtils] Waiting for DEM source to load...`);\n                map.once('sourcedata', checkDEM);\n            }\n        };\n        checkDEM();\n    });\n}\n/**\n * Validates that DEM data is available using provided or dynamic test points.\n * @param map - The Mapbox GL map instance\n * @param testPoints - Optional array of test coordinates\n * @returns Promise resolving to boolean indicating if DEM data is valid\n */ async function validateDEMData(map, testPoints) {\n    const points = testPoints && testPoints.length > 0 ? testPoints.slice(0, 3) : [\n        map.getCenter().toArray()\n    ];\n    const elevations = await Promise.all(points.map(async (point)=>{\n        const elevation = map.queryTerrainElevation(point);\n        return {\n            point,\n            elevation\n        };\n    }));\n    const validElevations = elevations.filter((e)=>e.elevation !== null && e.elevation !== 0);\n    if (validElevations.length === points.length) {\n        console.log(`[${new Date().toISOString()}] [TerrainUtils] DEM validation successful:`, validElevations.map((v)=>`[${v.point}]: ${v.elevation}m`).join(', '));\n        return true;\n    }\n    console.warn(`[${new Date().toISOString()}] [TerrainUtils] DEM validation failed:`, elevations.map((e)=>`[${e.point}]: ${e.elevation !== null ? e.elevation : 'null'}m`).join(', '));\n    return false;\n}\n/**\n * Preloads DEM tiles for a set of coordinates to minimize null results.\n * @param map - The Mapbox GL map instance\n * @param coordinates - Array of [longitude, latitude] coordinates\n * @returns Promise that resolves when preloading is complete\n */ async function preloadTiles(map, coordinates) {\n    if (!coordinates.length) return;\n    console.log(`[${new Date().toISOString()}] [TerrainUtils] Preloading DEM tiles for ${coordinates.length} coordinates`);\n    // Create a bounding box\n    const points = coordinates.map(([lon, lat])=>_turf_turf__WEBPACK_IMPORTED_MODULE_0__.point([\n            lon,\n            lat\n        ]));\n    const featureCollection = _turf_turf__WEBPACK_IMPORTED_MODULE_0__.featureCollection(points);\n    const bbox = _turf_turf__WEBPACK_IMPORTED_MODULE_1__.bbox(featureCollection);\n    // Generate sample points within the bbox\n    const samplePoints = _turf_turf__WEBPACK_IMPORTED_MODULE_2__.pointGrid(bbox, 100, {\n        units: 'meters'\n    }).features.map((f)=>f.geometry.coordinates);\n    // Query sample points to load tiles\n    const BATCH_SIZE = 50;\n    for(let i = 0; i < samplePoints.length; i += BATCH_SIZE){\n        const batch = samplePoints.slice(i, i + BATCH_SIZE);\n        await Promise.all(batch.map(([lon, lat])=>map.queryTerrainElevation([\n                lon,\n                lat\n            ])));\n        await new Promise((resolve)=>setTimeout(resolve, 20));\n    }\n    // Query waypoints directly to ensure coverage\n    await Promise.all(coordinates.map(([lon, lat])=>map.queryTerrainElevation([\n            lon,\n            lat\n        ])));\n    console.log(`[${new Date().toISOString()}] [TerrainUtils] DEM tiles preloaded`);\n}\n/**\n * Clears the elevation cache to free memory.\n */ function clearElevationCache() {\n    elevationCache.clear();\n    console.log(`[${new Date().toISOString()}] [TerrainUtils] Elevation cache cleared`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/utils/TerrainUtils.ts\n");

/***/ }),

/***/ "(ssr)/./src/app/utils/premiumConfig.ts":
/*!****************************************!*\
  !*** ./src/app/utils/premiumConfig.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FEATURE_TIER_REQUIREMENTS: () => (/* binding */ FEATURE_TIER_REQUIREMENTS),\n/* harmony export */   PARAMETER_LIMITS: () => (/* binding */ PARAMETER_LIMITS),\n/* harmony export */   TIER_CONFIG: () => (/* binding */ TIER_CONFIG)\n/* harmony export */ });\n/* harmony import */ var _types_PremiumTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../types/PremiumTypes */ \"(ssr)/./src/app/types/PremiumTypes.ts\");\n/**\n * Premium feature configuration and tier definitions\n * \n * This file contains all tier-specific configurations, feature requirements,\n * and parameter limits for the premium feature system.\n */ \n/**\n * TIER_CONFIG - The single source of truth for all tier-related configurations\n * This defines what each tier can access, and any specific limitations\n */ const TIER_CONFIG = {\n    [_types_PremiumTypes__WEBPACK_IMPORTED_MODULE_0__.TierLevel.FREE]: {\n        name: 'Free',\n        // Marker limits\n        maxMarkers: {\n            gcs: 0,\n            observer: 1,\n            repeater: 0\n        },\n        // Parameter limits\n        parameters: {\n            gridRange: {\n                min: 100,\n                max: 500\n            },\n            gridSize: {\n                min: 30,\n                max: 100\n            },\n            stationCount: {\n                min: 0,\n                max: 1\n            }\n        },\n        // Feature access (true = available in this tier)\n        features: {\n            'station_analysis': true,\n            'station_los_analysis': true,\n            'terrain_analysis': true,\n            'flight_path_analysis': false,\n            'merged_analysis': false,\n            'local_powerlines': false,\n            'hv_powerlines': true,\n            'extended_grid_range': false,\n            'high_resolution_grid': false,\n            'airspace_analysis': true,\n            'mobile_tower_analysis': false,\n            'tree_heights': false\n        }\n    },\n    [_types_PremiumTypes__WEBPACK_IMPORTED_MODULE_0__.TierLevel.COMMUNITY]: {\n        name: 'Community',\n        maxMarkers: {\n            gcs: 1,\n            observer: 2,\n            repeater: 1\n        },\n        parameters: {\n            gridRange: {\n                min: 100,\n                max: 500\n            },\n            gridSize: {\n                min: 30,\n                max: 100\n            },\n            stationCount: {\n                min: 0,\n                max: 4\n            }\n        },\n        features: {\n            'station_analysis': true,\n            'station_los_analysis': true,\n            'terrain_analysis': true,\n            'flight_path_analysis': true,\n            'merged_analysis': false,\n            'local_powerlines': false,\n            'hv_powerlines': true,\n            'extended_grid_range': false,\n            'high_resolution_grid': false,\n            'airspace_analysis': true,\n            'mobile_tower_analysis': false,\n            'tree_heights': false\n        }\n    },\n    [_types_PremiumTypes__WEBPACK_IMPORTED_MODULE_0__.TierLevel.COMMERCIAL]: {\n        name: 'Commercial',\n        maxMarkers: {\n            gcs: 10,\n            observer: 10,\n            repeater: 10\n        },\n        parameters: {\n            gridRange: {\n                min: 100,\n                max: 5000\n            },\n            gridSize: {\n                min: 1,\n                max: 100\n            },\n            stationCount: {\n                min: 0,\n                max: 30\n            }\n        },\n        features: {\n            'station_analysis': true,\n            'station_los_analysis': true,\n            'terrain_analysis': true,\n            'flight_path_analysis': true,\n            'merged_analysis': true,\n            'local_powerlines': true,\n            'hv_powerlines': true,\n            'extended_grid_range': true,\n            'high_resolution_grid': true,\n            'airspace_analysis': true,\n            'mobile_tower_analysis': true,\n            'tree_heights': true\n        }\n    }\n};\n/**\n * Helper function to derive FEATURE_TIER_REQUIREMENTS from TIER_CONFIG\n * This ensures consistency between requirements and actual tier capabilities\n */ function generateFeatureTierRequirements() {\n    const requirements = {};\n    // Handle regular features\n    const allFeatures = Object.keys(TIER_CONFIG[_types_PremiumTypes__WEBPACK_IMPORTED_MODULE_0__.TierLevel.COMMERCIAL].features);\n    allFeatures.forEach((feature)=>{\n        // Find the lowest tier that has this feature\n        for(let tier = _types_PremiumTypes__WEBPACK_IMPORTED_MODULE_0__.TierLevel.FREE; tier <= _types_PremiumTypes__WEBPACK_IMPORTED_MODULE_0__.TierLevel.COMMERCIAL; tier++){\n            if (TIER_CONFIG[tier].features[feature]) {\n                requirements[feature] = tier;\n                break;\n            }\n        }\n    });\n    // Handle marker types\n    const markerTypes = [\n        'gcs',\n        'observer',\n        'repeater'\n    ];\n    markerTypes.forEach((markerType)=>{\n        const featureId = `add_${markerType}`;\n        // Find the lowest tier that allows this marker\n        for(let tier = _types_PremiumTypes__WEBPACK_IMPORTED_MODULE_0__.TierLevel.FREE; tier <= _types_PremiumTypes__WEBPACK_IMPORTED_MODULE_0__.TierLevel.COMMERCIAL; tier++){\n            if (TIER_CONFIG[tier].maxMarkers[markerType] > 0) {\n                requirements[featureId] = tier;\n                break;\n            }\n        }\n    });\n    return requirements;\n}\n/**\n * Feature tier requirements - DERIVED FROM TIER_CONFIG\n * This ensures there are no inconsistencies between tier requirements\n * and the actual capabilities of each tier\n */ const FEATURE_TIER_REQUIREMENTS = generateFeatureTierRequirements();\n/**\n * Parameter limits - FOR BACKWARDS COMPATIBILITY\n * These values are now directly derived from TIER_CONFIG\n */ const PARAMETER_LIMITS = {\n    [_types_PremiumTypes__WEBPACK_IMPORTED_MODULE_0__.TierLevel.FREE]: TIER_CONFIG[_types_PremiumTypes__WEBPACK_IMPORTED_MODULE_0__.TierLevel.FREE].parameters,\n    [_types_PremiumTypes__WEBPACK_IMPORTED_MODULE_0__.TierLevel.COMMUNITY]: TIER_CONFIG[_types_PremiumTypes__WEBPACK_IMPORTED_MODULE_0__.TierLevel.COMMUNITY].parameters,\n    [_types_PremiumTypes__WEBPACK_IMPORTED_MODULE_0__.TierLevel.COMMERCIAL]: TIER_CONFIG[_types_PremiumTypes__WEBPACK_IMPORTED_MODULE_0__.TierLevel.COMMERCIAL].parameters\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/utils/premiumConfig.ts\n");

/***/ }),

/***/ "(rsc)/./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"2e33382ae11f\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2dsb2JhbHMuY3NzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxjQUFjO0FBQzdCLElBQUksS0FBVSxFQUFFLEVBQXVCIiwic291cmNlcyI6WyIvVXNlcnMva2llcmFuYmxhaXIvZ2l0L2ZhL2ZsaWdodC1hc3N1cmFuY2Uvc3JjL2FwcC9nbG9iYWxzLmNzcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIjJlMzMzODJhZTExZlwiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/app/globals.css\n");

/***/ }),

/***/ "(rsc)/./src/app/layout.tsx":
/*!****************************!*\
  !*** ./src/app/layout.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RootLayout),\n/* harmony export */   metadata: () => (/* binding */ metadata)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_font_google_target_css_path_src_app_layout_tsx_import_Ubuntu_arguments_subsets_latin_weight_300_400_500_700_variable_font_ubuntu_variableName_ubuntu___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/font/google/target.css?{\"path\":\"src/app/layout.tsx\",\"import\":\"Ubuntu\",\"arguments\":[{\"subsets\":[\"latin\"],\"weight\":[\"300\",\"400\",\"500\",\"700\"],\"variable\":\"--font-ubuntu\"}],\"variableName\":\"ubuntu\"} */ \"(rsc)/./node_modules/next/font/google/target.css?{\\\"path\\\":\\\"src/app/layout.tsx\\\",\\\"import\\\":\\\"Ubuntu\\\",\\\"arguments\\\":[{\\\"subsets\\\":[\\\"latin\\\"],\\\"weight\\\":[\\\"300\\\",\\\"400\\\",\\\"500\\\",\\\"700\\\"],\\\"variable\\\":\\\"--font-ubuntu\\\"}],\\\"variableName\\\":\\\"ubuntu\\\"}\");\n/* harmony import */ var next_font_google_target_css_path_src_app_layout_tsx_import_Ubuntu_arguments_subsets_latin_weight_300_400_500_700_variable_font_ubuntu_variableName_ubuntu___WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_font_google_target_css_path_src_app_layout_tsx_import_Ubuntu_arguments_subsets_latin_weight_300_400_500_700_variable_font_ubuntu_variableName_ubuntu___WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./globals.css */ \"(rsc)/./src/app/globals.css\");\n\n\n\nconst metadata = {\n    title: \"Intel.Aero\",\n    description: \"Intelligent Mission Assurance For RPAS\"\n};\nfunction RootLayout({ children }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"html\", {\n        lang: \"en\",\n        className: (next_font_google_target_css_path_src_app_layout_tsx_import_Ubuntu_arguments_subsets_latin_weight_300_400_500_700_variable_font_ubuntu_variableName_ubuntu___WEBPACK_IMPORTED_MODULE_2___default().variable),\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"body\", {\n            className: \"antialiased\",\n            children: children\n        }, void 0, false, {\n            fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/layout.tsx\",\n            lineNumber: 23,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/kieranblair/git/fa/flight-assurance/src/app/layout.tsx\",\n        lineNumber: 22,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2xheW91dC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFJTUE7QUFGaUI7QUFRaEIsTUFBTUMsV0FBcUI7SUFDaENDLE9BQU87SUFDUEMsYUFBYTtBQUNmLEVBQUU7QUFFYSxTQUFTQyxXQUFXLEVBQ2pDQyxRQUFRLEVBR1I7SUFDQSxxQkFDRSw4REFBQ0M7UUFBS0MsTUFBSztRQUFLQyxXQUFXUiw0TUFBZTtrQkFDeEMsNEVBQUNVO1lBQUtGLFdBQVU7c0JBQWVIOzs7Ozs7Ozs7OztBQUdyQyIsInNvdXJjZXMiOlsiL1VzZXJzL2tpZXJhbmJsYWlyL2dpdC9mYS9mbGlnaHQtYXNzdXJhbmNlL3NyYy9hcHAvbGF5b3V0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IE1ldGFkYXRhIH0gZnJvbSBcIm5leHRcIjtcbmltcG9ydCB7IFVidW50dSB9IGZyb20gXCJuZXh0L2ZvbnQvZ29vZ2xlXCI7XG5pbXBvcnQgXCIuL2dsb2JhbHMuY3NzXCI7XG5cbmNvbnN0IHVidW50dSA9IFVidW50dSh7XG4gIHN1YnNldHM6IFtcImxhdGluXCJdLFxuICB3ZWlnaHQ6IFtcIjMwMFwiLCBcIjQwMFwiLCBcIjUwMFwiLCBcIjcwMFwiXSwgLy8gVXNlIGRlc2lyZWQgZm9udCB3ZWlnaHRzXG4gIHZhcmlhYmxlOiBcIi0tZm9udC11YnVudHVcIixcbn0pO1xuXG5leHBvcnQgY29uc3QgbWV0YWRhdGE6IE1ldGFkYXRhID0ge1xuICB0aXRsZTogXCJJbnRlbC5BZXJvXCIsXG4gIGRlc2NyaXB0aW9uOiBcIkludGVsbGlnZW50IE1pc3Npb24gQXNzdXJhbmNlIEZvciBSUEFTXCIsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBSb290TGF5b3V0KHtcbiAgY2hpbGRyZW4sXG59OiBSZWFkb25seTx7XG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGU7XG59Pikge1xuICByZXR1cm4gKFxuICAgIDxodG1sIGxhbmc9XCJlblwiIGNsYXNzTmFtZT17dWJ1bnR1LnZhcmlhYmxlfT5cbiAgICAgIDxib2R5IGNsYXNzTmFtZT1cImFudGlhbGlhc2VkXCI+e2NoaWxkcmVufTwvYm9keT5cbiAgICA8L2h0bWw+XG4gICk7XG59XG4iXSwibmFtZXMiOlsidWJ1bnR1IiwibWV0YWRhdGEiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiUm9vdExheW91dCIsImNoaWxkcmVuIiwiaHRtbCIsImxhbmciLCJjbGFzc05hbWUiLCJ2YXJpYWJsZSIsImJvZHkiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/layout.tsx\n");

/***/ }),

/***/ "(rsc)/./src/app/page.tsx":
/*!**************************!*\
  !*** ./src/app/page.tsx ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server.edge */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server-edge.js\");\n/* harmony import */ var react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(\nfunction() { throw new Error(\"Attempted to call the default export of \\\"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\\\" from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"/Users/kieranblair/git/fa/flight-assurance/src/app/page.tsx\",\n\"default\",\n));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/page.tsx\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-metadata-image-loader.js?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./src/app/favicon.ico?__next_metadata__":
/*!**************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-metadata-image-loader.js?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./src/app/favicon.ico?__next_metadata__ ***!
  \**************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var next_dist_lib_metadata_get_metadata_route__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/lib/metadata/get-metadata-route */ \"(rsc)/./node_modules/next/dist/lib/metadata/get-metadata-route.js\");\n/* harmony import */ var next_dist_lib_metadata_get_metadata_route__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_metadata_get_metadata_route__WEBPACK_IMPORTED_MODULE_0__);\n  \n\n  /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (async (props) => {\n    const imageData = {\"type\":\"image/x-icon\",\"sizes\":\"128x128\"}\n    const imageUrl = (0,next_dist_lib_metadata_get_metadata_route__WEBPACK_IMPORTED_MODULE_0__.fillMetadataSegment)(\".\", await props.params, \"favicon.ico\")\n\n    return [{\n      ...imageData,\n      url: imageUrl + \"\",\n    }]\n  });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LW1ldGFkYXRhLWltYWdlLWxvYWRlci5qcz90eXBlPWZhdmljb24mc2VnbWVudD0mYmFzZVBhdGg9JnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMhLi9zcmMvYXBwL2Zhdmljb24uaWNvP19fbmV4dF9tZXRhZGF0YV9fIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLEVBQWlGOztBQUVqRixFQUFFLGlFQUFlO0FBQ2pCLHVCQUF1QjtBQUN2QixxQkFBcUIsOEZBQW1COztBQUV4QztBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wiLCJzb3VyY2VzIjpbIi9Vc2Vycy9raWVyYW5ibGFpci9naXQvZmEvZmxpZ2h0LWFzc3VyYW5jZS9zcmMvYXBwL2Zhdmljb24uaWNvP19fbmV4dF9tZXRhZGF0YV9fIl0sInNvdXJjZXNDb250ZW50IjpbIiAgaW1wb3J0IHsgZmlsbE1ldGFkYXRhU2VnbWVudCB9IGZyb20gJ25leHQvZGlzdC9saWIvbWV0YWRhdGEvZ2V0LW1ldGFkYXRhLXJvdXRlJ1xuXG4gIGV4cG9ydCBkZWZhdWx0IGFzeW5jIChwcm9wcykgPT4ge1xuICAgIGNvbnN0IGltYWdlRGF0YSA9IHtcInR5cGVcIjpcImltYWdlL3gtaWNvblwiLFwic2l6ZXNcIjpcIjEyOHgxMjhcIn1cbiAgICBjb25zdCBpbWFnZVVybCA9IGZpbGxNZXRhZGF0YVNlZ21lbnQoXCIuXCIsIGF3YWl0IHByb3BzLnBhcmFtcywgXCJmYXZpY29uLmljb1wiKVxuXG4gICAgcmV0dXJuIFt7XG4gICAgICAuLi5pbWFnZURhdGEsXG4gICAgICB1cmw6IGltYWdlVXJsICsgXCJcIixcbiAgICB9XVxuICB9Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-metadata-image-loader.js?type=favicon&segment=&basePath=&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js!./src/app/favicon.ico?__next_metadata__\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/lucide-react","vendor-chunks/next","vendor-chunks/@swc","vendor-chunks/@turf","vendor-chunks/d3-geo","vendor-chunks/d3-array","vendor-chunks/point-in-polygon-hao","vendor-chunks/uuid","vendor-chunks/mapbox-gl"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fpage&page=%2Fpage&appPaths=%2Fpage&pagePath=private-next-app-dir%2Fpage.tsx&appDir=%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fkieranblair%2Fgit%2Ffa%2Fflight-assurance&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();